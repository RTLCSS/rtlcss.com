{"version":3,"sources":["vs/languages/less/common/fake","vs/languages/less/common/less.js","vs/languages/less/common/file:/C:/Alex/src/vscode/src/vs/languages/less/common/lessTokenTypes.ts","vs/languages/less/common/file:/C:/Alex/src/vscode/src/vs/languages/less/common/less.ts"],"names":["__m","__M","deps","result","i","len","length","define","require","exports","TOKEN_SELECTOR","TOKEN_SELECTOR_TAG","TOKEN_PROPERTY","TOKEN_VALUE","TOKEN_AT_KEYWORD","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","modes","Compile","lessTokenTypes","abstractMode_1","threadService_1","modeService_1","instantiation_1","thread_1","modelService_1","editorWorkerService_1","async_1","monarchLexer_1","languageConfigurationRegistry_1","language","defaultToken","tokenPostfix","identifier","identifierPlus","brackets","open","close","token","tokenizer","root","include","bracket","next","nestedJSBegin","nextEmbedded","nestedJSEnd","javascript_block","operators","keyword","urldeclaration","attribute","comments","comment","numbers","units","strings","stringsEndDoubleQuote","stringsEndQuote","atRules","LESSMode","_super","descriptor","instantiationService","threadService","modeService","modelService","editorWorkerService","_this","call","id","lexer","compile","_modeWorkerManager","ModeWorkerManager","_threadService","HoverProviderRegistry","register","getId","provideHover","model","position","wireCancellationToken","_provideHover","uri","inplaceReplaceSupport","configSupport","ReferenceProviderRegistry","provideReferences","context","_provideReferences","DefinitionProviderRegistry","provideDefinition","_provideDefinition","DocumentSymbolProviderRegistry","provideDocumentSymbols","_provideDocumentSymbols","SuggestRegistry","triggerCharacters","shouldAutotriggerSuggest","provideCompletionItems","_provideCompletionItems","tokenizationSupport","createTokenizationSupport","LanguageConfigurationRegistry","LANG_CONFIG","creationDone","isInMainThread","_pickAWorkerToValidate","_worker","runner","worker","configure","options","_configureWorkers","w","_doConfigure","navigateValueSet","resource","up","enableValidator","findColorDeclarations","wordPattern","blockComment","lineComment","autoClosingPairs","notIn","$_configureWorkers","AllWorkersAttr","$navigateValueSet","OneWorkerAttr","$_pickAWorkerToValidate","ThreadAffinity","Group1","$_provideReferences","$_provideCompletionItems","$_provideHover","$_provideDocumentSymbols","$_provideDefinition","$findColorDeclarations","IInstantiationService","IThreadService","IModeService","IModelService","IEditorWorkerService","AbstractMode"],"mappings":"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","file":"vs/languages/less/common/less.js","sourcesContent":["}).call(this);","/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.4.2(1ebfb1b687c4345ac9c6da39051431a46c120a65)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n(function() {\nvar __m = [\"vs/languages/less/common/lessTokenTypes\",\"exports\",\"require\",\"vs/languages/less/common/less\",\"vs/editor/common/modes\",\"vs/editor/common/modes/monarch/monarchCompile\",\"vs/editor/common/modes/abstractMode\",\"vs/platform/thread/common/threadService\",\"vs/editor/common/modes/languageConfigurationRegistry\",\"vs/platform/instantiation/common/instantiation\",\"vs/platform/thread/common/thread\",\"vs/editor/common/services/modelService\",\"vs/editor/common/services/editorWorkerService\",\"vs/base/common/async\",\"vs/editor/common/modes/monarch/monarchLexer\",\"vs/editor/common/services/modeService\"];\nvar __M = function(deps) {\n  var result = [];\n  for (var i = 0, len = deps.length; i < len; i++) {\n    result[i] = __m[deps[i]];\n  }\n  return result;\n};\ndefine(__m[0], __M([2,1]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /* always keep in sync with cssTokenTypes */\n    exports.TOKEN_SELECTOR = 'entity.name.selector';\n    exports.TOKEN_SELECTOR_TAG = 'entity.name.tag';\n    exports.TOKEN_PROPERTY = 'support.type.property-name';\n    exports.TOKEN_VALUE = 'support.property-value';\n    exports.TOKEN_AT_KEYWORD = 'keyword.control.at-rule';\n});\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine(__m[3], __M([2,1,4,5,0,6,7,15,9,10,11,12,13,14,8]), function (require, exports, modes, Compile, lessTokenTypes, abstractMode_1, threadService_1, modeService_1, instantiation_1, thread_1, modelService_1, editorWorkerService_1, async_1, monarchLexer_1, languageConfigurationRegistry_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.language = {\n        defaultToken: '',\n        tokenPostfix: '.less',\n        identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n        identifierPlus: '-?-?([a-zA-Z:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n        brackets: [\n            { open: '{', close: '}', token: 'punctuation.curly' },\n            { open: '[', close: ']', token: 'punctuation.bracket' },\n            { open: '(', close: ')', token: 'punctuation.parenthesis' },\n            { open: '<', close: '>', token: 'punctuation.angle' }\n        ],\n        tokenizer: {\n            root: [\n                { include: '@nestedJSBegin' },\n                ['[ \\\\t\\\\r\\\\n]+', ''],\n                { include: '@comments' },\n                { include: '@keyword' },\n                { include: '@strings' },\n                { include: '@numbers' },\n                ['[*_]?[a-zA-Z\\\\-\\\\s]+(?=:.*(;|(\\\\\\\\$)))', lessTokenTypes.TOKEN_PROPERTY, '@attribute'],\n                ['url(\\\\-prefix)?\\\\(', { token: 'function', bracket: '@open', next: '@urldeclaration' }],\n                ['[{}()\\\\[\\\\]]', '@brackets'],\n                ['[,:;]', 'punctuation'],\n                ['#@identifierPlus', lessTokenTypes.TOKEN_SELECTOR + '.id'],\n                ['&', lessTokenTypes.TOKEN_SELECTOR_TAG],\n                ['\\\\.@identifierPlus(?=\\\\()', lessTokenTypes.TOKEN_SELECTOR + '.class', '@attribute'],\n                ['\\\\.@identifierPlus', lessTokenTypes.TOKEN_SELECTOR + '.class'],\n                ['@identifierPlus', lessTokenTypes.TOKEN_SELECTOR_TAG],\n                { include: '@operators' },\n                ['@(@identifier(?=[:,\\\\)]))', 'variable', '@attribute'],\n                ['@(@identifier)', 'variable'],\n                ['@', 'key', '@atRules']\n            ],\n            nestedJSBegin: [\n                ['``', 'punctuation.backtick'],\n                ['`', { token: 'punctuation.backtick', bracket: '@open', next: '@nestedJSEnd', nextEmbedded: 'text/javascript' }],\n            ],\n            nestedJSEnd: [\n                ['`', { token: 'punctuation.backtick', bracket: '@close', next: '@pop' }],\n                ['.', { token: '@rematch', next: '@javascript_block' }],\n            ],\n            javascript_block: [\n                ['`', { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n            ],\n            operators: [\n                ['[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~]', 'operator']\n            ],\n            keyword: [\n                ['(@[\\\\s]*import|![\\\\s]*important|true|false|when|iscolor|isnumber|isstring|iskeyword|isurl|ispixel|ispercentage|isem|hue|saturation|lightness|alpha|lighten|darken|saturate|desaturate|fadein|fadeout|fade|spin|mix|round|ceil|floor|percentage)\\\\b', 'keyword']\n            ],\n            urldeclaration: [\n                { include: '@strings' },\n                ['[^)\\r\\n]+', 'string'],\n                ['\\\\)', { token: 'tag', bracket: '@close', next: '@pop' }],\n            ],\n            attribute: [\n                { include: '@nestedJSBegin' },\n                { include: '@comments' },\n                { include: '@strings' },\n                { include: '@numbers' },\n                { include: '@keyword' },\n                ['[a-zA-Z\\\\-]+(?=\\\\()', lessTokenTypes.TOKEN_VALUE, '@attribute'],\n                ['>', 'operator', '@pop'],\n                ['@identifier', lessTokenTypes.TOKEN_VALUE],\n                { include: '@operators' },\n                ['@(@identifier)', 'variable'],\n                ['[)\\\\}]', '@brackets', '@pop'],\n                ['[{}()\\\\[\\\\]>]', '@brackets'],\n                ['[;]', 'punctuation', '@pop'],\n                ['[,=:]', 'punctuation'],\n                ['\\\\s', ''],\n                ['.', lessTokenTypes.TOKEN_VALUE]\n            ],\n            comments: [\n                ['\\\\/\\\\*', 'comment', '@comment'],\n                ['\\\\/\\\\/+.*', 'comment'],\n            ],\n            comment: [\n                ['\\\\*\\\\/', 'comment', '@pop'],\n                ['.', 'comment'],\n            ],\n            numbers: [\n                ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: lessTokenTypes.TOKEN_VALUE + '.numeric', next: '@units' }],\n                ['#[0-9a-fA-F_]+(?!\\\\w)', lessTokenTypes.TOKEN_VALUE + '.rgb-value']\n            ],\n            units: [\n                ['((em|ex|ch|rem|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)\\\\b)?', lessTokenTypes.TOKEN_VALUE + '.unit', '@pop']\n            ],\n            strings: [\n                ['~?\"', { token: 'string.punctuation', bracket: '@open', next: '@stringsEndDoubleQuote' }],\n                ['~?\\'', { token: 'string.punctuation', bracket: '@open', next: '@stringsEndQuote' }]\n            ],\n            stringsEndDoubleQuote: [\n                ['\\\\\\\\\"', 'string'],\n                ['\"', { token: 'string.punctuation', next: '@popall', bracket: '@close' }],\n                ['.', 'string']\n            ],\n            stringsEndQuote: [\n                ['\\\\\\\\\\'', 'string'],\n                ['\\'', { token: 'string.punctuation', next: '@popall', bracket: '@close' }],\n                ['.', 'string']\n            ],\n            atRules: [\n                { include: '@comments' },\n                { include: '@strings' },\n                ['[()]', 'punctuation'],\n                ['[\\\\{;]', 'punctuation', '@pop'],\n                ['.', 'key']\n            ]\n        }\n    };\n    var LESSMode = (function (_super) {\n        __extends(LESSMode, _super);\n        function LESSMode(descriptor, instantiationService, threadService, modeService, modelService, editorWorkerService) {\n            var _this = this;\n            _super.call(this, descriptor.id);\n            var lexer = Compile.compile(descriptor.id, exports.language);\n            this._modeWorkerManager = new abstractMode_1.ModeWorkerManager(descriptor, 'vs/languages/less/common/lessWorker', 'LessWorker', 'vs/languages/css/common/cssWorker', instantiationService);\n            this._threadService = threadService;\n            this.modeService = modeService;\n            modes.HoverProviderRegistry.register(this.getId(), {\n                provideHover: function (model, position, token) {\n                    return async_1.wireCancellationToken(token, _this._provideHover(model.uri, position));\n                }\n            }, true);\n            this.inplaceReplaceSupport = this;\n            this.configSupport = this;\n            modes.ReferenceProviderRegistry.register(this.getId(), {\n                provideReferences: function (model, position, context, token) {\n                    return async_1.wireCancellationToken(token, _this._provideReferences(model.uri, position));\n                }\n            }, true);\n            modes.DefinitionProviderRegistry.register(this.getId(), {\n                provideDefinition: function (model, position, token) {\n                    return async_1.wireCancellationToken(token, _this._provideDefinition(model.uri, position));\n                }\n            }, true);\n            modes.DocumentSymbolProviderRegistry.register(this.getId(), {\n                provideDocumentSymbols: function (model, token) {\n                    return async_1.wireCancellationToken(token, _this._provideDocumentSymbols(model.uri));\n                }\n            }, true);\n            modes.SuggestRegistry.register(this.getId(), {\n                triggerCharacters: [],\n                shouldAutotriggerSuggest: true,\n                provideCompletionItems: function (model, position, token) {\n                    return async_1.wireCancellationToken(token, _this._provideCompletionItems(model.uri, position));\n                }\n            }, true);\n            this.tokenizationSupport = monarchLexer_1.createTokenizationSupport(modeService, this, lexer);\n            languageConfigurationRegistry_1.LanguageConfigurationRegistry.register(this.getId(), LESSMode.LANG_CONFIG);\n        }\n        LESSMode.prototype.creationDone = function () {\n            if (this._threadService.isInMainThread) {\n                // Pick a worker to do validation\n                this._pickAWorkerToValidate();\n            }\n        };\n        LESSMode.prototype._worker = function (runner) {\n            return this._modeWorkerManager.worker(runner);\n        };\n        LESSMode.prototype.configure = function (options) {\n            if (this._threadService.isInMainThread) {\n                return this._configureWorkers(options);\n            }\n            else {\n                return this._worker(function (w) { return w._doConfigure(options); });\n            }\n        };\n        LESSMode.prototype._configureWorkers = function (options) {\n            return this._worker(function (w) { return w._doConfigure(options); });\n        };\n        LESSMode.prototype.navigateValueSet = function (resource, position, up) {\n            return this._worker(function (w) { return w.navigateValueSet(resource, position, up); });\n        };\n        LESSMode.prototype._pickAWorkerToValidate = function () {\n            return this._worker(function (w) { return w.enableValidator(); });\n        };\n        LESSMode.prototype._provideReferences = function (resource, position) {\n            return this._worker(function (w) { return w.provideReferences(resource, position); });\n        };\n        LESSMode.prototype._provideCompletionItems = function (resource, position) {\n            return this._worker(function (w) { return w.provideCompletionItems(resource, position); });\n        };\n        LESSMode.prototype._provideHover = function (resource, position) {\n            return this._worker(function (w) { return w.provideHover(resource, position); });\n        };\n        LESSMode.prototype._provideDocumentSymbols = function (resource) {\n            return this._worker(function (w) { return w.provideDocumentSymbols(resource); });\n        };\n        LESSMode.prototype._provideDefinition = function (resource, position) {\n            return this._worker(function (w) { return w.provideDefinition(resource, position); });\n        };\n        LESSMode.prototype.findColorDeclarations = function (resource) {\n            return this._worker(function (w) { return w.findColorDeclarations(resource); });\n        };\n        LESSMode.LANG_CONFIG = {\n            // TODO@Martin: This definition does not work with umlauts for example\n            wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\n            comments: {\n                blockComment: ['/*', '*/'],\n                lineComment: '//'\n            },\n            brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>']],\n            autoClosingPairs: [\n                { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n                { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n                { open: '{', close: '}', notIn: ['string', 'comment'] },\n                { open: '[', close: ']', notIn: ['string', 'comment'] },\n                { open: '(', close: ')', notIn: ['string', 'comment'] },\n                { open: '<', close: '>', notIn: ['string', 'comment'] },\n            ]\n        };\n        LESSMode.$_configureWorkers = threadService_1.AllWorkersAttr(LESSMode, LESSMode.prototype._configureWorkers);\n        LESSMode.$navigateValueSet = threadService_1.OneWorkerAttr(LESSMode, LESSMode.prototype.navigateValueSet);\n        LESSMode.$_pickAWorkerToValidate = threadService_1.OneWorkerAttr(LESSMode, LESSMode.prototype._pickAWorkerToValidate, thread_1.ThreadAffinity.Group1);\n        LESSMode.$_provideReferences = threadService_1.OneWorkerAttr(LESSMode, LESSMode.prototype._provideReferences);\n        LESSMode.$_provideCompletionItems = threadService_1.OneWorkerAttr(LESSMode, LESSMode.prototype._provideCompletionItems);\n        LESSMode.$_provideHover = threadService_1.OneWorkerAttr(LESSMode, LESSMode.prototype._provideHover);\n        LESSMode.$_provideDocumentSymbols = threadService_1.OneWorkerAttr(LESSMode, LESSMode.prototype._provideDocumentSymbols);\n        LESSMode.$_provideDefinition = threadService_1.OneWorkerAttr(LESSMode, LESSMode.prototype._provideDefinition);\n        LESSMode.$findColorDeclarations = threadService_1.OneWorkerAttr(LESSMode, LESSMode.prototype.findColorDeclarations);\n        LESSMode = __decorate([\n            __param(1, instantiation_1.IInstantiationService),\n            __param(2, thread_1.IThreadService),\n            __param(3, modeService_1.IModeService),\n            __param(4, modelService_1.IModelService),\n            __param(5, editorWorkerService_1.IEditorWorkerService)\n        ], LESSMode);\n        return LESSMode;\n    }(abstractMode_1.AbstractMode));\n    exports.LESSMode = LESSMode;\n});\n\n}).call(this);\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/* always keep in sync with cssTokenTypes */\n\nexport const TOKEN_SELECTOR = 'entity.name.selector';\nexport const TOKEN_SELECTOR_TAG = 'entity.name.tag';\nexport const TOKEN_PROPERTY =  'support.type.property-name';\nexport const TOKEN_VALUE =  'support.property-value';\nexport const TOKEN_AT_KEYWORD = 'keyword.control.at-rule';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport winjs = require('vs/base/common/winjs.base');\nimport URI from 'vs/base/common/uri';\nimport editorCommon = require('vs/editor/common/editorCommon');\nimport modes = require('vs/editor/common/modes');\nimport Types = require('vs/editor/common/modes/monarch/monarchTypes');\nimport Compile = require('vs/editor/common/modes/monarch/monarchCompile');\nimport lessWorker = require('vs/languages/less/common/lessWorker');\nimport * as lessTokenTypes from 'vs/languages/less/common/lessTokenTypes';\nimport {ModeWorkerManager, AbstractMode} from 'vs/editor/common/modes/abstractMode';\nimport {OneWorkerAttr, AllWorkersAttr} from 'vs/platform/thread/common/threadService';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IThreadService, ThreadAffinity} from 'vs/platform/thread/common/thread';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {IEditorWorkerService} from 'vs/editor/common/services/editorWorkerService';\nimport {wireCancellationToken} from 'vs/base/common/async';\nimport {createTokenizationSupport} from 'vs/editor/common/modes/monarch/monarchLexer';\nimport {LanguageConfigurationRegistry, LanguageConfiguration} from 'vs/editor/common/modes/languageConfigurationRegistry';\n\nexport var language: Types.IMonarchLanguage = <Types.IMonarchLanguage> {\n\tdefaultToken: '',\n\ttokenPostfix: '.less',\n\n\tidentifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n\tidentifierPlus: '-?-?([a-zA-Z:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-:.]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n\n\tbrackets: [\n\t\t{ open: '{', close: '}', token: 'punctuation.curly' },\n\t\t{ open: '[', close: ']', token: 'punctuation.bracket' },\n\t\t{ open: '(', close: ')', token: 'punctuation.parenthesis' },\n\t\t{ open: '<', close: '>', token: 'punctuation.angle' }\n\t],\n\n\ttokenizer: {\n\t\troot: <any[]>[\n\t\t\t{ include: '@nestedJSBegin' },\n\n\t\t\t['[ \\\\t\\\\r\\\\n]+', ''],\n\n\t\t\t{ include: '@comments' },\n\t\t\t{ include: '@keyword' },\n\t\t\t{ include: '@strings' },\n\t\t\t{ include: '@numbers' },\n\t\t\t['[*_]?[a-zA-Z\\\\-\\\\s]+(?=:.*(;|(\\\\\\\\$)))', lessTokenTypes.TOKEN_PROPERTY, '@attribute'],\n\n\t\t\t['url(\\\\-prefix)?\\\\(', { token: 'function', bracket: '@open', next: '@urldeclaration'}],\n\n\t\t\t['[{}()\\\\[\\\\]]', '@brackets'],\n\t\t\t['[,:;]', 'punctuation'],\n\n\t\t\t['#@identifierPlus', lessTokenTypes.TOKEN_SELECTOR + '.id'],\n\t\t\t['&', lessTokenTypes.TOKEN_SELECTOR_TAG],\n\n\t\t\t['\\\\.@identifierPlus(?=\\\\()', lessTokenTypes.TOKEN_SELECTOR + '.class', '@attribute'],\n\t\t\t['\\\\.@identifierPlus', lessTokenTypes.TOKEN_SELECTOR + '.class'],\n\n\t\t\t['@identifierPlus', lessTokenTypes.TOKEN_SELECTOR_TAG],\n\t\t\t{ include: '@operators' },\n\n\t\t\t['@(@identifier(?=[:,\\\\)]))', 'variable', '@attribute'],\n\t\t\t['@(@identifier)', 'variable'],\n\t\t\t['@', 'key', '@atRules']\n\t\t],\n\n\t\tnestedJSBegin: [\n\t\t\t['``', 'punctuation.backtick'],\n\t\t\t<any[]>['`', { token: 'punctuation.backtick', bracket: '@open', next: '@nestedJSEnd', nextEmbedded: 'text/javascript' }],\n\t\t],\n\n\t\tnestedJSEnd: [\n\t\t\t<any[]>['`', { token: 'punctuation.backtick', bracket: '@close', next: '@pop' }],\n\t\t\t<any[]>['.', { token: '@rematch', next: '@javascript_block' }],\n\t\t],\n\n\t\tjavascript_block: [\n\t\t\t<any[]>['`', { token: '@rematch', next: '@pop', nextEmbedded: '@pop' }],\n\t\t],\n\n\t\toperators: [\n\t\t\t['[<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~]', 'operator']\n\t\t],\n\n\t\tkeyword: [\n\t\t\t['(@[\\\\s]*import|![\\\\s]*important|true|false|when|iscolor|isnumber|isstring|iskeyword|isurl|ispixel|ispercentage|isem|hue|saturation|lightness|alpha|lighten|darken|saturate|desaturate|fadein|fadeout|fade|spin|mix|round|ceil|floor|percentage)\\\\b', 'keyword']\n\t\t],\n\n\t\turldeclaration: [\n\t\t\t{ include: '@strings'},\n\t\t\t[ '[^)\\r\\n]+', 'string' ],\n\t\t\t['\\\\)', { token: 'tag', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\tattribute: <any[]>[\n\t\t\t{ include: '@nestedJSBegin' },\n\t\t\t{ include: '@comments' },\n\t\t\t{ include: '@strings' },\n\t\t\t{ include: '@numbers' },\n\n\t\t\t{ include: '@keyword' },\n\n\t\t\t['[a-zA-Z\\\\-]+(?=\\\\()', lessTokenTypes.TOKEN_VALUE, '@attribute'],\n\t\t\t['>', 'operator', '@pop'],\n\t\t\t['@identifier', lessTokenTypes.TOKEN_VALUE],\n\t\t\t{ include: '@operators' },\n\t\t\t['@(@identifier)', 'variable'],\n\n\t\t\t['[)\\\\}]', '@brackets', '@pop'],\n\t\t\t['[{}()\\\\[\\\\]>]', '@brackets'],\n\n\t\t\t['[;]', 'punctuation', '@pop'],\n\t\t\t['[,=:]', 'punctuation'],\n\n\t\t\t['\\\\s', ''],\n\t\t\t['.', lessTokenTypes.TOKEN_VALUE]\n\t\t],\n\n\t\tcomments: [\n\t\t\t['\\\\/\\\\*', 'comment', '@comment'],\n\t\t\t['\\\\/\\\\/+.*', 'comment'],\n\t\t],\n\n\t\tcomment: [\n\t\t\t['\\\\*\\\\/', 'comment', '@pop'],\n\t\t\t['.', 'comment'],\n\t\t],\n\n\t\tnumbers: [\n\t\t\t<any[]>['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: lessTokenTypes.TOKEN_VALUE + '.numeric', next: '@units' }],\n\t\t\t['#[0-9a-fA-F_]+(?!\\\\w)', lessTokenTypes.TOKEN_VALUE + '.rgb-value']\n\t\t],\n\n\t\tunits: [\n\t\t\t['((em|ex|ch|rem|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)\\\\b)?', lessTokenTypes.TOKEN_VALUE + '.unit', '@pop']\n\t\t],\n\n\t\tstrings: [\n\t\t\t<any[]>['~?\"', { token: 'string.punctuation', bracket: '@open', next: '@stringsEndDoubleQuote' }],\n\t\t\t<any[]>['~?\\'', { token: 'string.punctuation', bracket: '@open', next: '@stringsEndQuote' }]\n\t\t],\n\n\t\tstringsEndDoubleQuote: [\n\t\t\t['\\\\\\\\\"', 'string'],\n\t\t\t<any[]>['\"', { token: 'string.punctuation', next: '@popall', bracket: '@close' }],\n\t\t\t['.', 'string']\n\t\t],\n\n\t\tstringsEndQuote: [\n\t\t\t['\\\\\\\\\\'', 'string'],\n\t\t\t<any[]>['\\'', { token: 'string.punctuation', next: '@popall', bracket: '@close' }],\n\t\t\t['.', 'string']\n\t\t],\n\n\t\tatRules: <any[]>[\n\t\t\t{ include: '@comments' },\n\t\t\t{ include: '@strings' },\n\t\t\t['[()]', 'punctuation'],\n\t\t\t['[\\\\{;]', 'punctuation', '@pop'],\n\t\t\t['.', 'key']\n\t\t]\n\t}\n};\n\nexport class LESSMode extends AbstractMode {\n\n\tpublic static LANG_CONFIG:LanguageConfiguration = {\n\t\t// TODO@Martin: This definition does not work with umlauts for example\n\t\twordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\n\t\tcomments: {\n\t\t\tblockComment: ['/*', '*/'],\n\t\t\tlineComment: '//'\n\t\t},\n\t\tbrackets: [['{','}'], ['[',']'], ['(',')'], ['<','>']],\n\t\tautoClosingPairs: [\n\t\t\t{ open: '\"', close: '\"', notIn: ['string', 'comment'] },\n\t\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t{ open: '{', close: '}', notIn: ['string', 'comment'] },\n\t\t\t{ open: '[', close: ']', notIn: ['string', 'comment'] },\n\t\t\t{ open: '(', close: ')', notIn: ['string', 'comment'] },\n\t\t\t{ open: '<', close: '>', notIn: ['string', 'comment'] },\n\t\t]\n\t};\n\n\tpublic inplaceReplaceSupport:modes.IInplaceReplaceSupport;\n\tpublic configSupport:modes.IConfigurationSupport;\n\tpublic tokenizationSupport: modes.ITokenizationSupport;\n\n\tprivate modeService: IModeService;\n\tprivate _modeWorkerManager: ModeWorkerManager<lessWorker.LessWorker>;\n\tprivate _threadService:IThreadService;\n\n\tconstructor(\n\t\tdescriptor:modes.IModeDescriptor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThreadService threadService: IThreadService,\n\t\t@IModeService modeService: IModeService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService\n\t) {\n\t\tsuper(descriptor.id);\n\t\tlet lexer = Compile.compile(descriptor.id, language);\n\n\t\tthis._modeWorkerManager = new ModeWorkerManager<lessWorker.LessWorker>(descriptor, 'vs/languages/less/common/lessWorker', 'LessWorker', 'vs/languages/css/common/cssWorker', instantiationService);\n\t\tthis._threadService = threadService;\n\n\t\tthis.modeService = modeService;\n\n\t\tmodes.HoverProviderRegistry.register(this.getId(), {\n\t\t\tprovideHover: (model, position, token): Thenable<modes.Hover> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideHover(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tthis.inplaceReplaceSupport = this;\n\n\t\tthis.configSupport = this;\n\n\t\tmodes.ReferenceProviderRegistry.register(this.getId(), {\n\t\t\tprovideReferences: (model, position, context, token): Thenable<modes.Location[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideReferences(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DefinitionProviderRegistry.register(this.getId(), {\n\t\t\tprovideDefinition: (model, position, token): Thenable<modes.Definition> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDefinition(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DocumentSymbolProviderRegistry.register(this.getId(), {\n\t\t\tprovideDocumentSymbols: (model, token): Thenable<modes.SymbolInformation[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentSymbols(model.uri));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.SuggestRegistry.register(this.getId(), {\n\t\t\ttriggerCharacters: [],\n\t\t\tshouldAutotriggerSuggest: true,\n\t\t\tprovideCompletionItems: (model, position, token): Thenable<modes.ISuggestResult[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideCompletionItems(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tthis.tokenizationSupport = createTokenizationSupport(modeService, this, lexer);\n\n\t\tLanguageConfigurationRegistry.register(this.getId(), LESSMode.LANG_CONFIG);\n\t}\n\n\tpublic creationDone(): void {\n\t\tif (this._threadService.isInMainThread) {\n\t\t\t// Pick a worker to do validation\n\t\t\tthis._pickAWorkerToValidate();\n\t\t}\n\t}\n\n\tprivate _worker<T>(runner:(worker:lessWorker.LessWorker)=>winjs.TPromise<T>): winjs.TPromise<T> {\n\t\treturn this._modeWorkerManager.worker(runner);\n\t}\n\n\tpublic configure(options:any): winjs.TPromise<void> {\n\t\tif (this._threadService.isInMainThread) {\n\t\t\treturn this._configureWorkers(options);\n\t\t} else {\n\t\t\treturn this._worker((w) => w._doConfigure(options));\n\t\t}\n\t}\n\n\tstatic $_configureWorkers = AllWorkersAttr(LESSMode, LESSMode.prototype._configureWorkers);\n\tprivate _configureWorkers(options:any): winjs.TPromise<void> {\n\t\treturn this._worker((w) => w._doConfigure(options));\n\t}\n\n\tstatic $navigateValueSet = OneWorkerAttr(LESSMode, LESSMode.prototype.navigateValueSet);\n\tpublic navigateValueSet(resource:URI, position:editorCommon.IRange, up:boolean):winjs.TPromise<modes.IInplaceReplaceSupportResult> {\n\t\treturn this._worker((w) => w.navigateValueSet(resource, position, up));\n\t}\n\n\tstatic $_pickAWorkerToValidate = OneWorkerAttr(LESSMode, LESSMode.prototype._pickAWorkerToValidate, ThreadAffinity.Group1);\n\tprivate _pickAWorkerToValidate(): winjs.TPromise<void> {\n\t\treturn this._worker((w) => w.enableValidator());\n\t}\n\n\tstatic $_provideReferences = OneWorkerAttr(LESSMode, LESSMode.prototype._provideReferences);\n\tprivate _provideReferences(resource:URI, position:editorCommon.IPosition):winjs.TPromise<modes.Location[]> {\n\t\treturn this._worker((w) => w.provideReferences(resource, position));\n\t}\n\n\tstatic $_provideCompletionItems = OneWorkerAttr(LESSMode, LESSMode.prototype._provideCompletionItems);\n\tprivate _provideCompletionItems(resource:URI, position:editorCommon.IPosition):winjs.TPromise<modes.ISuggestResult[]> {\n\t\treturn this._worker((w) => w.provideCompletionItems(resource, position));\n\t}\n\n\tstatic $_provideHover = OneWorkerAttr(LESSMode, LESSMode.prototype._provideHover);\n\tprivate _provideHover(resource:URI, position:editorCommon.IPosition): winjs.TPromise<modes.Hover> {\n\t\treturn this._worker((w) => w.provideHover(resource, position));\n\t}\n\n\tstatic $_provideDocumentSymbols = OneWorkerAttr(LESSMode, LESSMode.prototype._provideDocumentSymbols);\n\tprivate _provideDocumentSymbols(resource:URI):winjs.TPromise<modes.SymbolInformation[]> {\n\t\treturn this._worker((w) => w.provideDocumentSymbols(resource));\n\t}\n\n\tstatic $_provideDefinition = OneWorkerAttr(LESSMode, LESSMode.prototype._provideDefinition);\n\tprivate _provideDefinition(resource:URI, position:editorCommon.IPosition):winjs.TPromise<modes.Definition> {\n\t\treturn this._worker((w) => w.provideDefinition(resource, position));\n\t}\n\n\tstatic $findColorDeclarations = OneWorkerAttr(LESSMode, LESSMode.prototype.findColorDeclarations);\n\tpublic findColorDeclarations(resource:URI):winjs.TPromise<{range:editorCommon.IRange; value:string; }[]> {\n\t\treturn this._worker((w) => w.findColorDeclarations(resource));\n\t}\n}\n"]}