{"version":3,"sources":["vs/languages/sass/common/fake","vs/languages/sass/common/sass.js","vs/languages/sass/common/file:/C:/Alex/src/vscode/src/vs/languages/sass/common/sassTokenTypes.ts","vs/languages/sass/common/file:/C:/Alex/src/vscode/src/vs/languages/sass/common/sass.ts"],"names":["__m","__M","deps","result","i","len","length","define","require","exports","TOKEN_SELECTOR","TOKEN_SELECTOR_TAG","TOKEN_PROPERTY","TOKEN_VALUE","TOKEN_AT_KEYWORD","__extends","this","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","Compile","modes","sassTokenTypes","abstractMode_1","threadService_1","modeService_1","instantiation_1","thread_1","modelService_1","editorWorkerService_1","async_1","monarchLexer_1","languageConfigurationRegistry_1","language","defaultToken","tokenPostfix","ws","identifier","brackets","open","close","token","tokenizer","root","include","selector","next","bracket","selectorbody","selectorname","selectorattribute","term","rulevalue","switchTo","nestedproperty","warndebug","import","variabledeclaration","urldeclaration","parenthizedterm","declarationbody","extendbody","variablereference","variableinterpolation","comments","comment","name","numbers","units","functiondeclaration","mixindeclaration","parameterdeclaration","includedeclaration","keyframedeclaration","keyframebody","controlstatement","controlstatementdeclaration","functionbody","functioninvocation","functionarguments","strings","stringenddoublequote","stringendquote","SASSMode","_super","descriptor","instantiationService","threadService","modeService","modelService","editorWorkerService","_this","call","id","lexer","compile","_modeWorkerManager","ModeWorkerManager","_threadService","HoverProviderRegistry","register","getId","provideHover","model","position","wireCancellationToken","_provideHover","uri","inplaceReplaceSupport","configSupport","ReferenceProviderRegistry","provideReferences","context","_provideReferences","DefinitionProviderRegistry","provideDefinition","_provideDefinition","DocumentSymbolProviderRegistry","provideDocumentSymbols","_provideDocumentSymbols","SuggestRegistry","triggerCharacters","shouldAutotriggerSuggest","provideCompletionItems","_provideCompletionItems","tokenizationSupport","createTokenizationSupport","LanguageConfigurationRegistry","LANG_CONFIG","creationDone","isInMainThread","_pickAWorkerToValidate","_worker","runner","worker","configure","options","_configureWorkers","w","_doConfigure","navigateValueSet","resource","up","enableValidator","findColorDeclarations","wordPattern","blockComment","lineComment","autoClosingPairs","notIn","$_configureWorkers","AllWorkersAttr","$navigateValueSet","OneWorkerAttr","$_pickAWorkerToValidate","ThreadAffinity","Group1","$_provideReferences","$_provideCompletionItems","$_provideHover","$_provideDocumentSymbols","$_provideDefinition","$findColorDeclarations","IInstantiationService","IThreadService","IModeService","IModelService","IEditorWorkerService","AbstractMode"],"mappings":"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","file":"vs/languages/sass/common/sass.js","sourcesContent":["}).call(this);","/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.4.2(1ebfb1b687c4345ac9c6da39051431a46c120a65)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n(function() {\nvar __m = [\"vs/languages/sass/common/sassTokenTypes\",\"exports\",\"require\",\"vs/languages/sass/common/sass\",\"vs/editor/common/modes/monarch/monarchCompile\",\"vs/editor/common/modes\",\"vs/editor/common/modes/abstractMode\",\"vs/platform/thread/common/threadService\",\"vs/editor/common/modes/languageConfigurationRegistry\",\"vs/platform/instantiation/common/instantiation\",\"vs/platform/thread/common/thread\",\"vs/editor/common/services/modelService\",\"vs/editor/common/services/editorWorkerService\",\"vs/base/common/async\",\"vs/editor/common/modes/monarch/monarchLexer\",\"vs/editor/common/services/modeService\"];\nvar __M = function(deps) {\n  var result = [];\n  for (var i = 0, len = deps.length; i < len; i++) {\n    result[i] = __m[deps[i]];\n  }\n  return result;\n};\ndefine(__m[0], __M([2,1]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    /* always keep in sync with cssTokenTypes */\n    exports.TOKEN_SELECTOR = 'entity.name.selector';\n    exports.TOKEN_SELECTOR_TAG = 'entity.name.tag';\n    exports.TOKEN_PROPERTY = 'support.type.property-name';\n    exports.TOKEN_VALUE = 'support.property-value';\n    exports.TOKEN_AT_KEYWORD = 'keyword.control.at-rule';\n});\n\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine(__m[3], __M([2,1,4,5,0,6,7,15,9,10,11,12,13,14,8]), function (require, exports, Compile, modes, sassTokenTypes, abstractMode_1, threadService_1, modeService_1, instantiation_1, thread_1, modelService_1, editorWorkerService_1, async_1, monarchLexer_1, languageConfigurationRegistry_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    exports.language = {\n        defaultToken: '',\n        tokenPostfix: '.scss',\n        ws: '[ \\t\\n\\r\\f]*',\n        identifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n        brackets: [\n            { open: '{', close: '}', token: 'punctuation.curly' },\n            { open: '[', close: ']', token: 'punctuation.bracket' },\n            { open: '(', close: ')', token: 'punctuation.parenthesis' },\n            { open: '<', close: '>', token: 'punctuation.angle' }\n        ],\n        tokenizer: {\n            root: [\n                { include: '@selector' },\n            ],\n            selector: [\n                { include: '@comments' },\n                { include: '@import' },\n                { include: '@variabledeclaration' },\n                { include: '@warndebug' },\n                ['[@](include)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@includedeclaration' }],\n                ['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@keyframedeclaration' }],\n                ['[@](page|content|font-face|-moz-document)', { token: sassTokenTypes.TOKEN_AT_KEYWORD }],\n                ['[@](charset|namespace)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@declarationbody' }],\n                ['[@](function)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@functiondeclaration' }],\n                ['[@](mixin)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@mixindeclaration' }],\n                ['url(\\\\-prefix)?\\\\(', { token: 'support.function.name', bracket: '@open', next: '@urldeclaration' }],\n                { include: '@controlstatement' },\n                { include: '@selectorname' },\n                ['[&\\\\*]', sassTokenTypes.TOKEN_SELECTOR_TAG],\n                ['[>\\\\+,]', 'punctuation'],\n                ['\\\\[', { token: 'punctuation.bracket', bracket: '@open', next: '@selectorattribute' }],\n                ['{', { token: 'punctuation.curly', bracket: '@open', next: '@selectorbody' }],\n            ],\n            selectorbody: [\n                ['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', sassTokenTypes.TOKEN_PROPERTY, '@rulevalue'],\n                { include: '@selector' },\n                ['[@](extend)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@extendbody' }],\n                ['[@](return)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@declarationbody' }],\n                ['}', { token: 'punctuation.curly', bracket: '@close', next: '@pop' }],\n            ],\n            selectorname: [\n                ['#{', { token: 'support.function.interpolation', bracket: '@open', next: '@variableinterpolation' }],\n                ['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', sassTokenTypes.TOKEN_SELECTOR],\n            ],\n            selectorattribute: [\n                { include: '@term' },\n                [']', { token: 'punctuation.bracket', bracket: '@close', next: '@pop' }],\n            ],\n            term: [\n                { include: '@comments' },\n                ['url(\\\\-prefix)?\\\\(', { token: 'support.function.name', bracket: '@open', next: '@urldeclaration' }],\n                { include: '@functioninvocation' },\n                { include: '@numbers' },\n                { include: '@strings' },\n                { include: '@variablereference' },\n                ['(and\\\\b|or\\\\b|not\\\\b)', 'keyword.operator'],\n                { include: '@name' },\n                ['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'keyword.operator'],\n                [',', 'punctuation'],\n                ['!default', 'literal'],\n                ['\\\\(', { token: 'punctuation.parenthesis', bracket: '@open', next: '@parenthizedterm' }],\n            ],\n            rulevalue: [\n                { include: '@term' },\n                ['!important', 'literal'],\n                [';', 'punctuation', '@pop'],\n                ['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@nestedproperty' }],\n                ['(?=})', { token: '', next: '@pop' }],\n            ],\n            nestedproperty: [\n                ['[*_]?@identifier@ws:', sassTokenTypes.TOKEN_PROPERTY, '@rulevalue'],\n                { include: '@comments' },\n                ['}', { token: 'punctuation.curly', bracket: '@close', next: '@pop' }],\n            ],\n            warndebug: [\n                ['[@](warn|debug)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@declarationbody' }],\n            ],\n            import: [\n                ['[@](import)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@declarationbody' }],\n            ],\n            variabledeclaration: [\n                ['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody'],\n            ],\n            urldeclaration: [\n                { include: '@strings' },\n                ['[^)\\r\\n]+', 'string'],\n                ['\\\\)', { token: 'support.function.name', bracket: '@close', next: '@pop' }],\n            ],\n            parenthizedterm: [\n                { include: '@term' },\n                ['\\\\)', { token: 'punctuation.parenthesis', bracket: '@close', next: '@pop' }],\n            ],\n            declarationbody: [\n                { include: '@term' },\n                [';', 'punctuation', '@pop'],\n                ['(?=})', { token: '', next: '@pop' }],\n            ],\n            extendbody: [\n                { include: '@selectorname' },\n                ['!optional', 'literal'],\n                [';', 'punctuation', '@pop'],\n                ['(?=})', { token: '', next: '@pop' }],\n            ],\n            variablereference: [\n                ['\\\\$@identifier', 'variable.ref'],\n                ['\\\\.\\\\.\\\\.', 'keyword.operator'],\n                ['#{', { token: 'support.function.interpolation', bracket: '@open', next: '@variableinterpolation' }],\n            ],\n            variableinterpolation: [\n                { include: '@variablereference' },\n                ['}', { token: 'support.function.interpolation', bracket: '@close', next: '@pop' }],\n            ],\n            comments: [\n                ['\\\\/\\\\*', 'comment', '@comment'],\n                ['\\\\/\\\\/+.*', 'comment'],\n            ],\n            comment: [\n                ['\\\\*\\\\/', 'comment', '@pop'],\n                ['.', 'comment'],\n            ],\n            name: [\n                ['@identifier', sassTokenTypes.TOKEN_VALUE],\n            ],\n            numbers: [\n                ['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'constant.numeric', next: '@units' }],\n                ['#[0-9a-fA-F_]+(?!\\\\w)', 'constant.rgb-value'],\n            ],\n            units: [\n                ['(em|ex|ch|rem|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'constant.numeric', '@pop']\n            ],\n            functiondeclaration: [\n                ['@identifier@ws\\\\(', { token: 'support.function.name', bracket: '@open', next: '@parameterdeclaration' }],\n                ['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@functionbody' }],\n            ],\n            mixindeclaration: [\n                // mixin with parameters\n                ['@identifier@ws\\\\(', { token: 'support.function.name', bracket: '@open', next: '@parameterdeclaration' }],\n                // mixin without parameters\n                ['@identifier', 'support.function.name'],\n                ['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@selectorbody' }],\n            ],\n            parameterdeclaration: [\n                ['\\\\$@identifier@ws:', 'variable'],\n                ['\\\\.\\\\.\\\\.', 'keyword.operator'],\n                [',', 'punctuation'],\n                { include: '@term' },\n                ['\\\\)', { token: 'support.function.name', bracket: '@close', next: '@pop' }],\n            ],\n            includedeclaration: [\n                { include: '@functioninvocation' },\n                ['@identifier', 'support.function.name'],\n                [';', 'punctuation', '@pop'],\n                ['(?=})', { token: '', next: '@pop' }],\n                ['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@selectorbody' }],\n            ],\n            keyframedeclaration: [\n                ['@identifier', 'support.function.name'],\n                ['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@keyframebody' }],\n            ],\n            keyframebody: [\n                { include: '@term' },\n                ['{', { token: 'punctuation.curly', bracket: '@open', next: '@selectorbody' }],\n                ['}', { token: 'punctuation.curly', bracket: '@close', next: '@pop' }],\n            ],\n            controlstatement: [\n                ['[@](if|else|for|while|each|media)', { token: 'keyword.flow.control.at-rule', next: '@controlstatementdeclaration' }],\n            ],\n            controlstatementdeclaration: [\n                ['(in|from|through|if|to)\\\\b', { token: 'keyword.flow.control.at-rule' }],\n                { include: '@term' },\n                ['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@selectorbody' }],\n            ],\n            functionbody: [\n                ['[@](return)', { token: sassTokenTypes.TOKEN_AT_KEYWORD }],\n                { include: '@variabledeclaration' },\n                { include: '@term' },\n                { include: '@controlstatement' },\n                [';', 'punctuation'],\n                ['}', { token: 'punctuation.curly', bracket: '@close', next: '@pop' }],\n            ],\n            functioninvocation: [\n                ['@identifier\\\\(', { token: 'support.function.name', bracket: '@open', next: '@functionarguments' }],\n            ],\n            functionarguments: [\n                ['\\\\$@identifier@ws:', sassTokenTypes.TOKEN_PROPERTY],\n                ['[,]', 'punctuation'],\n                { include: '@term' },\n                ['\\\\)', { token: 'support.function.name', bracket: '@close', next: '@pop' }],\n            ],\n            strings: [\n                ['~?\"', { token: 'string.punctuation', bracket: '@open', next: '@stringenddoublequote' }],\n                ['~?\\'', { token: 'string.punctuation', bracket: '@open', next: '@stringendquote' }]\n            ],\n            stringenddoublequote: [\n                ['\\\\\\\\.', 'string'],\n                ['\"', { token: 'string.punctuation', next: '@pop', bracket: '@close' }],\n                ['.', 'string']\n            ],\n            stringendquote: [\n                ['\\\\\\\\.', 'string'],\n                ['\\'', { token: 'string.punctuation', next: '@pop', bracket: '@close' }],\n                ['.', 'string']\n            ]\n        }\n    };\n    var SASSMode = (function (_super) {\n        __extends(SASSMode, _super);\n        function SASSMode(descriptor, instantiationService, threadService, modeService, modelService, editorWorkerService) {\n            var _this = this;\n            _super.call(this, descriptor.id);\n            var lexer = Compile.compile(descriptor.id, exports.language);\n            this._modeWorkerManager = new abstractMode_1.ModeWorkerManager(descriptor, 'vs/languages/sass/common/sassWorker', 'SassWorker', 'vs/languages/css/common/cssWorker', instantiationService);\n            this._threadService = threadService;\n            this.modeService = modeService;\n            modes.HoverProviderRegistry.register(this.getId(), {\n                provideHover: function (model, position, token) {\n                    return async_1.wireCancellationToken(token, _this._provideHover(model.uri, position));\n                }\n            }, true);\n            this.inplaceReplaceSupport = this;\n            this.configSupport = this;\n            modes.ReferenceProviderRegistry.register(this.getId(), {\n                provideReferences: function (model, position, context, token) {\n                    return async_1.wireCancellationToken(token, _this._provideReferences(model.uri, position));\n                }\n            }, true);\n            modes.DefinitionProviderRegistry.register(this.getId(), {\n                provideDefinition: function (model, position, token) {\n                    return async_1.wireCancellationToken(token, _this._provideDefinition(model.uri, position));\n                }\n            }, true);\n            modes.DocumentSymbolProviderRegistry.register(this.getId(), {\n                provideDocumentSymbols: function (model, token) {\n                    return async_1.wireCancellationToken(token, _this._provideDocumentSymbols(model.uri));\n                }\n            }, true);\n            modes.SuggestRegistry.register(this.getId(), {\n                triggerCharacters: [],\n                shouldAutotriggerSuggest: true,\n                provideCompletionItems: function (model, position, token) {\n                    return async_1.wireCancellationToken(token, _this._provideCompletionItems(model.uri, position));\n                }\n            }, true);\n            this.tokenizationSupport = monarchLexer_1.createTokenizationSupport(modeService, this, lexer);\n            languageConfigurationRegistry_1.LanguageConfigurationRegistry.register(this.getId(), SASSMode.LANG_CONFIG);\n        }\n        SASSMode.prototype.creationDone = function () {\n            if (this._threadService.isInMainThread) {\n                // Pick a worker to do validation\n                this._pickAWorkerToValidate();\n            }\n        };\n        SASSMode.prototype._worker = function (runner) {\n            return this._modeWorkerManager.worker(runner);\n        };\n        SASSMode.prototype.configure = function (options) {\n            if (this._threadService.isInMainThread) {\n                return this._configureWorkers(options);\n            }\n            else {\n                return this._worker(function (w) { return w._doConfigure(options); });\n            }\n        };\n        SASSMode.prototype._configureWorkers = function (options) {\n            return this._worker(function (w) { return w._doConfigure(options); });\n        };\n        SASSMode.prototype.navigateValueSet = function (resource, position, up) {\n            return this._worker(function (w) { return w.navigateValueSet(resource, position, up); });\n        };\n        SASSMode.prototype._pickAWorkerToValidate = function () {\n            return this._worker(function (w) { return w.enableValidator(); });\n        };\n        SASSMode.prototype._provideReferences = function (resource, position) {\n            return this._worker(function (w) { return w.provideReferences(resource, position); });\n        };\n        SASSMode.prototype._provideCompletionItems = function (resource, position) {\n            return this._worker(function (w) { return w.provideCompletionItems(resource, position); });\n        };\n        SASSMode.prototype._provideHover = function (resource, position) {\n            return this._worker(function (w) { return w.provideHover(resource, position); });\n        };\n        SASSMode.prototype._provideDocumentSymbols = function (resource) {\n            return this._worker(function (w) { return w.provideDocumentSymbols(resource); });\n        };\n        SASSMode.prototype._provideDefinition = function (resource, position) {\n            return this._worker(function (w) { return w.provideDefinition(resource, position); });\n        };\n        SASSMode.prototype.findColorDeclarations = function (resource) {\n            return this._worker(function (w) { return w.findColorDeclarations(resource); });\n        };\n        SASSMode.LANG_CONFIG = {\n            // TODO@Martin: This definition does not work with umlauts for example\n            wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\n            comments: {\n                blockComment: ['/*', '*/'],\n                lineComment: '//'\n            },\n            brackets: [['{', '}'], ['[', ']'], ['(', ')'], ['<', '>']],\n            autoClosingPairs: [\n                { open: '\"', close: '\"', notIn: ['string', 'comment'] },\n                { open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n                { open: '{', close: '}', notIn: ['string', 'comment'] },\n                { open: '[', close: ']', notIn: ['string', 'comment'] },\n                { open: '(', close: ')', notIn: ['string', 'comment'] },\n                { open: '<', close: '>', notIn: ['string', 'comment'] },\n            ]\n        };\n        SASSMode.$_configureWorkers = threadService_1.AllWorkersAttr(SASSMode, SASSMode.prototype._configureWorkers);\n        SASSMode.$navigateValueSet = threadService_1.OneWorkerAttr(SASSMode, SASSMode.prototype.navigateValueSet);\n        SASSMode.$_pickAWorkerToValidate = threadService_1.OneWorkerAttr(SASSMode, SASSMode.prototype._pickAWorkerToValidate, thread_1.ThreadAffinity.Group1);\n        SASSMode.$_provideReferences = threadService_1.OneWorkerAttr(SASSMode, SASSMode.prototype._provideReferences);\n        SASSMode.$_provideCompletionItems = threadService_1.OneWorkerAttr(SASSMode, SASSMode.prototype._provideCompletionItems);\n        SASSMode.$_provideHover = threadService_1.OneWorkerAttr(SASSMode, SASSMode.prototype._provideHover);\n        SASSMode.$_provideDocumentSymbols = threadService_1.OneWorkerAttr(SASSMode, SASSMode.prototype._provideDocumentSymbols);\n        SASSMode.$_provideDefinition = threadService_1.OneWorkerAttr(SASSMode, SASSMode.prototype._provideDefinition);\n        SASSMode.$findColorDeclarations = threadService_1.OneWorkerAttr(SASSMode, SASSMode.prototype.findColorDeclarations);\n        SASSMode = __decorate([\n            __param(1, instantiation_1.IInstantiationService),\n            __param(2, thread_1.IThreadService),\n            __param(3, modeService_1.IModeService),\n            __param(4, modelService_1.IModelService),\n            __param(5, editorWorkerService_1.IEditorWorkerService)\n        ], SASSMode);\n        return SASSMode;\n    }(abstractMode_1.AbstractMode));\n    exports.SASSMode = SASSMode;\n});\n\n}).call(this);\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\n/* always keep in sync with cssTokenTypes */\n\nexport const TOKEN_SELECTOR = 'entity.name.selector';\nexport const TOKEN_SELECTOR_TAG = 'entity.name.tag';\nexport const TOKEN_PROPERTY =  'support.type.property-name';\nexport const TOKEN_VALUE =  'support.property-value';\nexport const TOKEN_AT_KEYWORD = 'keyword.control.at-rule';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Types = require('vs/editor/common/modes/monarch/monarchTypes');\nimport Compile = require('vs/editor/common/modes/monarch/monarchCompile');\nimport winjs = require('vs/base/common/winjs.base');\nimport URI from 'vs/base/common/uri';\nimport editorCommon = require('vs/editor/common/editorCommon');\nimport modes = require('vs/editor/common/modes');\nimport sassWorker = require('vs/languages/sass/common/sassWorker');\nimport * as sassTokenTypes from 'vs/languages/sass/common/sassTokenTypes';\nimport {ModeWorkerManager, AbstractMode} from 'vs/editor/common/modes/abstractMode';\nimport {OneWorkerAttr, AllWorkersAttr} from 'vs/platform/thread/common/threadService';\nimport {IModeService} from 'vs/editor/common/services/modeService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {IThreadService, ThreadAffinity} from 'vs/platform/thread/common/thread';\nimport {IModelService} from 'vs/editor/common/services/modelService';\nimport {IEditorWorkerService} from 'vs/editor/common/services/editorWorkerService';\nimport {wireCancellationToken} from 'vs/base/common/async';\nimport {createTokenizationSupport} from 'vs/editor/common/modes/monarch/monarchLexer';\nimport {LanguageConfigurationRegistry, LanguageConfiguration} from 'vs/editor/common/modes/languageConfigurationRegistry';\n\nexport var language = <Types.IMonarchLanguage>{\n\tdefaultToken: '',\n\ttokenPostfix: '.scss',\n\n\tws: '[ \\t\\n\\r\\f]*', // whitespaces (referenced in several rules)\n\tidentifier: '-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*',\n\n\tbrackets: [\n\t\t{ open: '{', close: '}', token: 'punctuation.curly' },\n\t\t{ open: '[', close: ']', token: 'punctuation.bracket' },\n\t\t{ open: '(', close: ')', token: 'punctuation.parenthesis' },\n\t\t{ open: '<', close: '>', token: 'punctuation.angle' }\n\t],\n\n\ttokenizer: {\n\t\troot: [\n\t\t\t{ include: '@selector' },\n\t\t],\n\n\t\tselector: [\n\t\t\t{ include: '@comments' },\n\t\t\t{ include: '@import' },\n\t\t\t{ include: '@variabledeclaration' },\n\t\t\t{ include: '@warndebug' }, // sass: log statements\n\t\t\t['[@](include)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@includedeclaration'}], // sass: include statement\n\t\t\t['[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@keyframedeclaration'}],\n\t\t\t['[@](page|content|font-face|-moz-document)', { token: sassTokenTypes.TOKEN_AT_KEYWORD}], // sass: placeholder for includes\n\t\t\t['[@](charset|namespace)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@declarationbody'}],\n\t\t\t['[@](function)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@functiondeclaration'}],\n\t\t\t['[@](mixin)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@mixindeclaration'}],\n\t\t\t['url(\\\\-prefix)?\\\\(', { token: 'support.function.name', bracket: '@open', next: '@urldeclaration'}],\n\t\t\t{ include: '@controlstatement' }, // sass control statements\n\t\t\t{ include: '@selectorname' },\n\t\t\t['[&\\\\*]', sassTokenTypes.TOKEN_SELECTOR_TAG], // selector symbols\n\t\t\t['[>\\\\+,]', 'punctuation'], // selector operators\n\t\t\t['\\\\[', { token: 'punctuation.bracket', bracket: '@open', next: '@selectorattribute' }],\n\t\t\t['{', { token: 'punctuation.curly', bracket: '@open', next: '@selectorbody' }],\n\t\t],\n\n\t\tselectorbody: [\n\t\t\t['[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))', sassTokenTypes.TOKEN_PROPERTY, '@rulevalue'], // rule definition: to distinguish from a nested selector check for whitespace, number or a semicolon\n\t\t\t{ include: '@selector'}, // sass: nested selectors\n\t\t\t['[@](extend)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@extendbody'}], // sass: extend other selectors\n\t\t\t['[@](return)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@declarationbody'}],\n\t\t\t['}', { token: 'punctuation.curly', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\tselectorname: [\n\t\t\t['#{', { token: 'support.function.interpolation', bracket: '@open', next: '@variableinterpolation' }], // sass: interpolation\n\t\t\t['(\\\\.|#(?=[^{])|%|(@identifier)|:)+', sassTokenTypes.TOKEN_SELECTOR], // selector (.foo, div, ...)\n\t\t],\n\n\t\tselectorattribute: [\n\t\t\t{ include: '@term' },\n\t\t\t[']', { token: 'punctuation.bracket', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\tterm: [\n\t\t\t{ include: '@comments' },\n\t\t\t['url(\\\\-prefix)?\\\\(', { token: 'support.function.name', bracket: '@open', next: '@urldeclaration'}],\n\t\t\t{ include: '@functioninvocation'},\n\t\t\t{ include: '@numbers' },\n\t\t\t{ include: '@strings' },\n\t\t\t{ include: '@variablereference' },\n\t\t\t['(and\\\\b|or\\\\b|not\\\\b)', 'keyword.operator'],\n\t\t\t{ include: '@name'},\n\t\t\t['([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])', 'keyword.operator'],\n\t\t\t[',', 'punctuation'],\n\t\t\t['!default', 'literal'],\n\t\t\t['\\\\(', { token: 'punctuation.parenthesis', bracket: '@open', next: '@parenthizedterm'}],\n\t\t],\n\n\t\trulevalue: [\n\t\t\t{ include: '@term' },\n\t\t\t['!important', 'literal'],\n\t\t\t[';', 'punctuation', '@pop'],\n\t\t\t['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@nestedproperty' }], // sass: nested properties\n\t\t\t['(?=})', { token: '', next: '@pop'}], // missing semicolon\n\t\t],\n\n\t\tnestedproperty: [\n\t\t\t['[*_]?@identifier@ws:', sassTokenTypes.TOKEN_PROPERTY, '@rulevalue'],\n\t\t\t{ include: '@comments' },\n\t\t\t['}', { token: 'punctuation.curly', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\twarndebug: [\n\t\t\t['[@](warn|debug)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@declarationbody'}],\n\t\t],\n\n\t\timport: [\n\t\t\t['[@](import)', { token: sassTokenTypes.TOKEN_AT_KEYWORD, next: '@declarationbody'}],\n\t\t],\n\n\t\tvariabledeclaration: [ // sass variables\n\t\t\t['\\\\$@identifier@ws:', 'variable.decl', '@declarationbody'],\n\t\t],\n\n\t\turldeclaration: [\n\t\t\t{ include: '@strings'},\n\t\t\t[ '[^)\\r\\n]+', 'string' ],\n\t\t\t['\\\\)', { token: 'support.function.name', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\tparenthizedterm: [\n\t\t\t{ include: '@term' },\n\t\t\t['\\\\)', { token: 'punctuation.parenthesis', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\tdeclarationbody: [\n\t\t\t{ include: '@term' },\n\t\t\t[';', 'punctuation', '@pop'],\n\t\t\t['(?=})', { token: '', next: '@pop'}], // missing semicolon\n\t\t],\n\n\t\textendbody: [\n\t\t\t{ include: '@selectorname' },\n\t\t\t['!optional', 'literal'],\n\t\t\t[';', 'punctuation', '@pop'],\n\t\t\t['(?=})', { token: '', next: '@pop'}], // missing semicolon\n\t\t],\n\n\t\tvariablereference: [ // sass variable reference\n\t\t\t['\\\\$@identifier', 'variable.ref'],\n\t\t\t['\\\\.\\\\.\\\\.', 'keyword.operator'], // var args in reference\n\t\t\t['#{', { token: 'support.function.interpolation', bracket: '@open', next: '@variableinterpolation' }], // sass var resolve\n\t\t],\n\n\t\tvariableinterpolation: [\n\t\t\t{ include: '@variablereference' },\n\t\t\t['}', { token: 'support.function.interpolation', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\tcomments: [\n\t\t\t['\\\\/\\\\*', 'comment', '@comment'],\n\t\t\t['\\\\/\\\\/+.*', 'comment'],\n\t\t],\n\n\t\tcomment: [\n\t\t\t['\\\\*\\\\/', 'comment', '@pop'],\n\t\t\t['.', 'comment'],\n\t\t],\n\n\t\tname: [\n\t\t\t['@identifier', sassTokenTypes.TOKEN_VALUE],\n\t\t],\n\n\t\tnumbers: [\n\t\t\t['(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?', { token: 'constant.numeric', next: '@units' }],\n\t\t\t['#[0-9a-fA-F_]+(?!\\\\w)', 'constant.rgb-value'],\n\t\t],\n\n\t\tunits: [\n\t\t\t['(em|ex|ch|rem|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?', 'constant.numeric', '@pop']\n\t\t],\n\n\t\tfunctiondeclaration: [\n\t\t\t['@identifier@ws\\\\(', { token: 'support.function.name', bracket: '@open', next: '@parameterdeclaration'}],\n\t\t\t['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@functionbody' }],\n\t\t],\n\n\t\tmixindeclaration: [\n\t\t\t// mixin with parameters\n\t\t\t['@identifier@ws\\\\(', { token: 'support.function.name', bracket: '@open', next: '@parameterdeclaration'}],\n\t\t\t// mixin without parameters\n\t\t\t['@identifier', 'support.function.name'],\n\t\t\t['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@selectorbody' }],\n\t\t],\n\n\t\tparameterdeclaration: [\n\t\t\t['\\\\$@identifier@ws:', 'variable'],\n\t\t\t['\\\\.\\\\.\\\\.', 'keyword.operator'], // var args in declaration\n\t\t\t[',', 'punctuation'],\n\t\t\t{ include: '@term' },\n\t\t\t['\\\\)', { token: 'support.function.name', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\tincludedeclaration: [\n\t\t\t{ include: '@functioninvocation' },\n\t\t\t['@identifier', 'support.function.name'],\n\t\t\t[';', 'punctuation', '@pop'],\n\t\t\t['(?=})', { token: '', next: '@pop'}], // missing semicolon\n\t\t\t['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@selectorbody' }],\n\t\t],\n\n\t\tkeyframedeclaration: [\n\t\t\t['@identifier', 'support.function.name'],\n\t\t\t['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@keyframebody' }],\n\t\t],\n\n\t\tkeyframebody: [\n\t\t\t{ include: '@term' },\n\t\t\t['{', { token: 'punctuation.curly', bracket: '@open', next: '@selectorbody' }],\n\t\t\t['}', { token: 'punctuation.curly', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\tcontrolstatement: [\n\t\t\t['[@](if|else|for|while|each|media)', { token: 'keyword.flow.control.at-rule', next: '@controlstatementdeclaration'}],\n\t\t],\n\n\t\tcontrolstatementdeclaration: [\n\t\t\t['(in|from|through|if|to)\\\\b', { token: 'keyword.flow.control.at-rule'}],\n\t\t\t{ include: '@term' },\n\t\t\t['{', { token: 'punctuation.curly', bracket: '@open', switchTo: '@selectorbody' }],\n\t\t],\n\n\t\tfunctionbody: [\n\t\t\t['[@](return)', { token: sassTokenTypes.TOKEN_AT_KEYWORD}],\n\t\t\t{ include: '@variabledeclaration' },\n\t\t\t{ include: '@term' },\n\t\t\t{ include: '@controlstatement' },\n\t\t\t[';', 'punctuation'],\n\t\t\t['}', { token: 'punctuation.curly', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\tfunctioninvocation: [\n\t\t\t['@identifier\\\\(', { token: 'support.function.name', bracket: '@open', next: '@functionarguments' }],\n\t\t],\n\n\t\tfunctionarguments: [\n\t\t\t['\\\\$@identifier@ws:', sassTokenTypes.TOKEN_PROPERTY],\n\t\t\t['[,]', 'punctuation'],\n\t\t\t{ include: '@term' },\n\t\t\t['\\\\)', { token: 'support.function.name', bracket: '@close', next: '@pop'}],\n\t\t],\n\n\t\tstrings: [\n\t\t\t['~?\"', { token: 'string.punctuation', bracket: '@open', next: '@stringenddoublequote' }],\n\t\t\t['~?\\'', { token: 'string.punctuation', bracket: '@open', next: '@stringendquote' }]\n\t\t],\n\n\t\tstringenddoublequote: [\n\t\t\t['\\\\\\\\.', 'string'],\n\t\t\t['\"', { token: 'string.punctuation', next: '@pop', bracket: '@close' }],\n\t\t\t['.', 'string']\n\t\t],\n\n\t\tstringendquote: [\n\t\t\t['\\\\\\\\.', 'string'],\n\t\t\t['\\'', { token: 'string.punctuation', next: '@pop', bracket: '@close' }],\n\t\t\t['.', 'string']\n\t\t]\n\t}\n};\n\nexport class SASSMode extends AbstractMode {\n\n\tpublic static LANG_CONFIG:LanguageConfiguration = {\n\t\t// TODO@Martin: This definition does not work with umlauts for example\n\t\twordPattern: /(#?-?\\d*\\.\\d\\w*%?)|([@#!.:]?[\\w-?]+%?)|[@#!.]/g,\n\t\tcomments: {\n\t\t\tblockComment: ['/*', '*/'],\n\t\t\tlineComment: '//'\n\t\t},\n\t\tbrackets: [['{','}'], ['[',']'], ['(',')'], ['<','>']],\n\t\tautoClosingPairs: [\n\t\t\t{ open: '\"', close: '\"', notIn: ['string', 'comment'] },\n\t\t\t{ open: '\\'', close: '\\'', notIn: ['string', 'comment'] },\n\t\t\t{ open: '{', close: '}', notIn: ['string', 'comment'] },\n\t\t\t{ open: '[', close: ']', notIn: ['string', 'comment'] },\n\t\t\t{ open: '(', close: ')', notIn: ['string', 'comment'] },\n\t\t\t{ open: '<', close: '>', notIn: ['string', 'comment'] },\n\t\t]\n\t};\n\n\tpublic inplaceReplaceSupport:modes.IInplaceReplaceSupport;\n\tpublic configSupport:modes.IConfigurationSupport;\n\tpublic tokenizationSupport: modes.ITokenizationSupport;\n\n\tprivate modeService: IModeService;\n\tprivate _modeWorkerManager: ModeWorkerManager<sassWorker.SassWorker>;\n\tprivate _threadService:IThreadService;\n\n\tconstructor(\n\t\tdescriptor:modes.IModeDescriptor,\n\t\t@IInstantiationService instantiationService: IInstantiationService,\n\t\t@IThreadService threadService: IThreadService,\n\t\t@IModeService modeService: IModeService,\n\t\t@IModelService modelService: IModelService,\n\t\t@IEditorWorkerService editorWorkerService: IEditorWorkerService\n\t) {\n\t\tsuper(descriptor.id);\n\t\tlet lexer = Compile.compile(descriptor.id, language);\n\t\tthis._modeWorkerManager = new ModeWorkerManager<sassWorker.SassWorker>(descriptor, 'vs/languages/sass/common/sassWorker', 'SassWorker', 'vs/languages/css/common/cssWorker', instantiationService);\n\t\tthis._threadService = threadService;\n\n\t\tthis.modeService = modeService;\n\n\t\tmodes.HoverProviderRegistry.register(this.getId(), {\n\t\t\tprovideHover: (model, position, token): Thenable<modes.Hover> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideHover(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tthis.inplaceReplaceSupport = this;\n\n\t\tthis.configSupport = this;\n\n\t\tmodes.ReferenceProviderRegistry.register(this.getId(), {\n\t\t\tprovideReferences: (model, position, context, token): Thenable<modes.Location[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideReferences(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DefinitionProviderRegistry.register(this.getId(), {\n\t\t\tprovideDefinition: (model, position, token): Thenable<modes.Definition> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDefinition(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.DocumentSymbolProviderRegistry.register(this.getId(), {\n\t\t\tprovideDocumentSymbols: (model, token): Thenable<modes.SymbolInformation[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideDocumentSymbols(model.uri));\n\t\t\t}\n\t\t}, true);\n\n\t\tmodes.SuggestRegistry.register(this.getId(), {\n\t\t\ttriggerCharacters: [],\n\t\t\tshouldAutotriggerSuggest: true,\n\t\t\tprovideCompletionItems: (model, position, token): Thenable<modes.ISuggestResult[]> => {\n\t\t\t\treturn wireCancellationToken(token, this._provideCompletionItems(model.uri, position));\n\t\t\t}\n\t\t}, true);\n\n\t\tthis.tokenizationSupport = createTokenizationSupport(modeService, this, lexer);\n\n\t\tLanguageConfigurationRegistry.register(this.getId(), SASSMode.LANG_CONFIG);\n\t}\n\n\tpublic creationDone(): void {\n\t\tif (this._threadService.isInMainThread) {\n\t\t\t// Pick a worker to do validation\n\t\t\tthis._pickAWorkerToValidate();\n\t\t}\n\t}\n\n\tprivate _worker<T>(runner:(worker:sassWorker.SassWorker)=>winjs.TPromise<T>): winjs.TPromise<T> {\n\t\treturn this._modeWorkerManager.worker(runner);\n\t}\n\n\tpublic configure(options:any): winjs.TPromise<void> {\n\t\tif (this._threadService.isInMainThread) {\n\t\t\treturn this._configureWorkers(options);\n\t\t} else {\n\t\t\treturn this._worker((w) => w._doConfigure(options));\n\t\t}\n\t}\n\n\tstatic $_configureWorkers = AllWorkersAttr(SASSMode, SASSMode.prototype._configureWorkers);\n\tprivate _configureWorkers(options:any): winjs.TPromise<void> {\n\t\treturn this._worker((w) => w._doConfigure(options));\n\t}\n\n\tstatic $navigateValueSet = OneWorkerAttr(SASSMode, SASSMode.prototype.navigateValueSet);\n\tpublic navigateValueSet(resource:URI, position:editorCommon.IRange, up:boolean):winjs.TPromise<modes.IInplaceReplaceSupportResult> {\n\t\treturn this._worker((w) => w.navigateValueSet(resource, position, up));\n\t}\n\n\tstatic $_pickAWorkerToValidate = OneWorkerAttr(SASSMode, SASSMode.prototype._pickAWorkerToValidate, ThreadAffinity.Group1);\n\tprivate _pickAWorkerToValidate(): winjs.TPromise<void> {\n\t\treturn this._worker((w) => w.enableValidator());\n\t}\n\n\tstatic $_provideReferences = OneWorkerAttr(SASSMode, SASSMode.prototype._provideReferences);\n\tprivate _provideReferences(resource:URI, position:editorCommon.IPosition):winjs.TPromise<modes.Location[]> {\n\t\treturn this._worker((w) => w.provideReferences(resource, position));\n\t}\n\n\tstatic $_provideCompletionItems = OneWorkerAttr(SASSMode, SASSMode.prototype._provideCompletionItems);\n\tprivate _provideCompletionItems(resource:URI, position:editorCommon.IPosition):winjs.TPromise<modes.ISuggestResult[]> {\n\t\treturn this._worker((w) => w.provideCompletionItems(resource, position));\n\t}\n\n\tstatic $_provideHover = OneWorkerAttr(SASSMode, SASSMode.prototype._provideHover);\n\tprivate _provideHover(resource:URI, position:editorCommon.IPosition): winjs.TPromise<modes.Hover> {\n\t\treturn this._worker((w) => w.provideHover(resource, position));\n\t}\n\n\tstatic $_provideDocumentSymbols = OneWorkerAttr(SASSMode, SASSMode.prototype._provideDocumentSymbols);\n\tprivate _provideDocumentSymbols(resource:URI):winjs.TPromise<modes.SymbolInformation[]> {\n\t\treturn this._worker((w) => w.provideDocumentSymbols(resource));\n\t}\n\n\tstatic $_provideDefinition = OneWorkerAttr(SASSMode, SASSMode.prototype._provideDefinition);\n\tprivate _provideDefinition(resource:URI, position:editorCommon.IPosition):winjs.TPromise<modes.Definition> {\n\t\treturn this._worker((w) => w.provideDefinition(resource, position));\n\t}\n\n\tstatic $findColorDeclarations = OneWorkerAttr(SASSMode, SASSMode.prototype.findColorDeclarations);\n\tpublic findColorDeclarations(resource:URI):winjs.TPromise<{range:editorCommon.IRange; value:string; }[]> {\n\t\treturn this._worker((w) => w.findColorDeclarations(resource));\n\t}\n}"]}