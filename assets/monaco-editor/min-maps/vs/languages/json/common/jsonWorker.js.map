{"version":3,"sources":["vs/languages/json/common/fake","vs/languages/json/common/jsonWorker.js","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/parser/jsonLocation.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/base/common/http.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/base/common/jsonFormatter.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/contributions/globPatternContribution.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/parser/jsonParser.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/jsonIntellisense.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/contributions/bowerJSONContribution.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/contributions/packageJSONContribution.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/contributions/projectJSONContribution.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/jsonSchemaService.ts","vs/languages/json/common/file:/C:/Alex/src/vscode/src/vs/languages/json/common/jsonWorker.ts"],"names":["__m","__M","deps","result","i","len","length","define","require","exports","JSONLocation","segments","this","prototype","append","segment","concat","getSegments","matches","k","toString","join","nls","data","create","getErrorStatusDescription","status","localize","Json","applyEdit","text","edit","substring","offset","content","applyEdits","edits","format","documentText","range","options","newLineAndIndent","eol","repeat","indentValue","initialIndentLevel","indentLevel","scanNext","token","scanner","scan","lineBreak","SyntaxKind","Trivia","LineBreakTrivia","addEdit","startOffset","endOffset","editOperations","push","value","rangeStart","rangeEnd","isEOL","scanner_1","createScanner","setPosition","getPosition","computeIndentLevel","getEOL","insertSpaces","tabSize","firstToken","EOF","firstTokenStart","getTokenOffset","initialIndent","firstTokenEnd","getTokenLength","secondToken","replaceContent","LineCommentTrivia","BlockCommentTrivia","commentTokenStart","CloseBraceToken","OpenBraceToken","CloseBracketToken","OpenBracketToken","CommaToken","ColonToken","NullKeyword","TrueKeyword","FalseKeyword","NumericLiteral","secondTokenStart","s","count","nChars","ch","charAt","Math","floor","indexOf","Strings","globProperties","type","label","codeSnippet","documentationLabel","globValues","GlobPatternContribution","isSettingsFile","resource","path","endsWith","collectDefaultSuggestions","collectPropertySuggestions","location","currentWord","addValue","isLast","forEach","e","add","collectValueSuggestions","currentKey","getInfoContribution","__extends","d","b","__","constructor","p","hasOwnProperty","Object","Arrays","Types","jsonLocation_1","ASTNode","parent","name","start","end","getNodeLocation","getChildNodes","getValue","contains","includeRightBound","visit","visitor","getNodeFromOffset","findNode","node","children","item","getNodeFromOffsetEndInclusive","validate","schema","validationResult","matchingSchemas","_this","Array","isArray","warnings","message","errorMessage","allOf","subSchema","not","subValidationResult","ValidationResult","subMatchingSchemas","hasErrors","ms","inverted","testAlternatives","alternatives","maxOneMatch","bestMatch","compareResult","compare","apply","propertiesMatches","propertiesValueMatches","merge","anyOf","oneOf","JSON","stringify","enumValueMatch","NullASTNode","_super","call","BooleanASTNode","ArrayASTNode","items","map","v","addItem","ctn","subSchemas","index","itemValidationResult","mergePropertyMatch","additionalItems","minItems","maxItems","uniqueItems","values","duplicates","some","lastIndexOf","NumberASTNode","isInteger","Number","NaN","typeIsInteger","val","isNumber","multipleOf","isUndefined","minimum","exclusiveMinimum","maximum","exclusiveMaximum","StringASTNode","isKey","minLength","maxLength","pattern","regex","RegExp","test","PropertyASTNode","key","colonOffset","setValue","ObjectASTNode","properties","addProperty","getFirstProperty","getKeyList","seenKeys","unprocessedProperties","required","propertyName","propertyProcessed","prop","splice","keys","child","propertyvalidationResult","patternProperties","propertyPattern","slice","isObject","additionalProperties","propertyNode","maxProperties","minProperties","dependencies","valueAsArray","requiredProp","valueAsSchema","JSONDocumentConfig","ignoreDanglingComma","errors","mergeAll","validationResults","propertyValidationResult","other","JSONDocument","config","defineProperty","get","enumerable","configurable","root","JSONParser","parse","_accept","_scanner","getToken","_error","skipUntilAfter","skipUntil","_doc","error","_finalize","_checkScanError","getTokenError","ScanError","InvalidUnicode","InvalidEscapeCharacter","UnexpectedEndOfNumber","UnexpectedEndOfComment","UnexpectedEndOfString","_parseArray","_parseValue","_parseProperty","keysSeen","_parseString","Unknown","getTokenValue","match","_parseObject","StringLiteral","_parseNumber","tokenValue","numberValue","_parseLiteral","Parser","WinJS","JSONIntellisense","schemaService","requestService","contributions","doSuggest","modelMirror","position","getWordUntilPosition","word","parser","doc","incomplete","suggestions","overwriteBefore","overwriteAfter","proposed","collector","suggestion","setAsIncomplete","onUnexpectedError","getSchemaForResource","then","collectionPromises","getOffsetFromPosition","currentProperty","stringNode","nodeRange","getRangeFromOffsetAndLength","column","startColumn","endColumn","getValueInRange","startLineNumber","endLineNumber","lineNumber","getPropertySuggestions","getSchemaLessPropertySuggestions","contribution","collectPromise","getValueSuggestions","getSchemaLessValueSuggestions","parentKey","valueNode","Promise","schemaProperties","propertySchema","getTextForProperty","description","collectSuggestionsForSimilarObject","obj","getTextForSimilarProperty","n","collectSuggestionsForValues","getTextForMatchingNode","getSuggestionType","addBooleanSuggestion","addDefaultSuggestion","addEnumSuggestion","getTextForEnumValue","enm","getLabelForValue","getTextForValue","typeLabel","defaultSnippets","getLabelForSnippetValue","body","getTextForSnippetValue","replace","substr","trim","snippet","array","defaultVal","templateValue","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","request_1","BowerJSONContribution","topRanked","isBowerFile","defaultValue","authors","version","main","queryUrl","encodeURIComponent","makeRequest","url","success","responseText","results","pack","htmlContent","className","startsWith","IRequestService","LIMIT","PackageJSONContribution","mostDependedOn","isPackageJSONFile","author","rows","ProjectJSONContribution","isProjectJSONFile","frameworks","dnx451","dnxcore50","curr","Id","Version","documentation","Description","isLatest","IsAbsoluteLatestVersion","res","Objects","http","uri_1","resourceService_1","workspace_1","lifecycle_1","toDisplayString","uri","scheme","fsPath","FilePatternAssociation","combinedSchemaId","patternRegExp","convertSimple2RegExpPattern","schemas","combinedSchema","addSchema","id","matchesPattern","fileName","getCombinedSchema","service","createCombinedSchema","SchemaHandle","unresolvedSchemaContent","unresolvedSchema","TPromise","as","UnresolvedSchema","getUnresolvedSchema","loadSchema","getResolvedSchema","resolvedSchema","unresolved","resolveSchemaContent","clearSchema","ResolvedSchema","getSection","getSectionRecursive","next","shift","parseInt","JSONSchemaService","contextService","resourceService","callOnDispose","addListener2_","ResourceEvents","CHANGED","onResourceChange","contributionSchemas","contributionAssociations","schemasById","filePatternAssociations","filePatternAssociationById","dispose","schemaFile","normalizeId","setSchemaContributions","schemaContributions","addSchemaHandle","schemaHandle","getOrAddSchemaHandle","getOrAddFilePatternAssociation","fpa","registerExternalSchema","filePatterns","clearExternalSchemas","schemaId","request","schemaContent","jsonErrors","getParseErrorMessage","schemaToResolve","resolveErrors","findSection","current","split","part","resolveLink","linkedSchema","linkPath","section","mixin","$ref","resolveExternalLink","loc","resolveRefs","parentSchema","toWalk","seen","openPromises","collectEntries","entries","_i","_a","entries_1","entry","collectMapEntries","maps","maps_1","collectArrayEntries","arrays","arrays_1","pop","definitions","_","document","filter","schemeId","resourceURL","toResource","schemaIds","IWorkspaceContextService","IResourceService","severity_1","Modes","JSONFormatter","SchemaService","markers_1","instantiation_1","suggestSupport_1","validationHelper_1","getSymbolKind","nodeType","SymbolKind","Module","String","Boolean","Variable","JSONWorker","modeId","markerService","instantiationService","_modeId","_validationHelper","ValidationHelper","toValidate","doValidate","createInstance","jsonIntellisense","navigateValueSet","up","proposals","equalsIgnoreCase","nextIdx","_doConfigure","fileMatch","filePattern","schemaPath","patterns","triggerDueToConfigurationChange","enableValidator","enable","resources","doValidate1","property","added","markerData","idx","signature","startPosition","getPositionFromOffset","endPosition","severity","Warning","Error","changeOne","provideCompletionItems","filterSuggestions","provideHover","originalNode","contributonId","every","promise","createInfoResult","provideDocumentSymbols","collectOutlineEntries","containerName","objectNode","childContainerName","kind","resourceString","toLowerCase","model","formatRange","getOffsetAndLengthFromRange","operations","IMarkerService","IInstantiationService"],"mappings":"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","file":"vs/languages/json/common/jsonWorker.js","sourcesContent":["}).call(this);","/*!-----------------------------------------------------------\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Version: 0.4.2(1ebfb1b687c4345ac9c6da39051431a46c120a65)\n * Released under the MIT license\n * https://github.com/Microsoft/vscode/blob/master/LICENSE.txt\n *-----------------------------------------------------------*/\n\n(function() {\nvar __m = [\"exports\",\"require\",\"vs/nls\",\"vs/nls!vs/languages/json/common/jsonWorker\",\"vs/base/common/strings\",\"vs/platform/request/common/request\",\"vs/base/common/types\",\"vs/base/common/json\",\"vs/languages/json/common/parser/jsonParser\",\"vs/base/common/winjs.base\",\"vs/nls!vs/languages/json/common/contributions/globPatternContribution\",\"vs/languages/json/common/contributions/globPatternContribution\",\"vs/nls!vs/base/common/http\",\"vs/nls!vs/languages/json/common/contributions/packageJSONContribution\",\"vs/nls!vs/languages/json/common/contributions/projectJSONContribution\",\"vs/nls!vs/languages/json/common/jsonIntellisense\",\"vs/nls!vs/languages/json/common/jsonSchemaService\",\"vs/nls!vs/languages/json/common/parser/jsonParser\",\"vs/base/common/http\",\"vs/platform/workspace/common/workspace\",\"vs/base/common/jsonFormatter\",\"vs/languages/json/common/jsonIntellisense\",\"vs/languages/json/common/parser/jsonLocation\",\"vs/base/common/errors\",\"vs/languages/json/common/contributions/bowerJSONContribution\",\"vs/nls!vs/languages/json/common/contributions/bowerJSONContribution\",\"vs/languages/json/common/contributions/packageJSONContribution\",\"vs/languages/json/common/contributions/projectJSONContribution\",\"vs/languages/json/common/jsonSchemaService\",\"vs/editor/common/services/resourceService\",\"vs/base/common/severity\",\"vs/base/common/uri\",\"vs/base/common/arrays\",\"vs/base/common/lifecycle\",\"vs/languages/json/common/jsonWorker\",\"vs/base/common/objects\",\"vs/editor/common/modes\",\"vs/platform/markers/common/markers\",\"vs/platform/instantiation/common/instantiation\",\"vs/editor/common/modes/supports/suggestSupport\",\"vs/editor/common/worker/validationHelper\"];\nvar __M = function(deps) {\n  var result = [];\n  for (var i = 0, len = deps.length; i < len; i++) {\n    result[i] = __m[deps[i]];\n  }\n  return result;\n};\ndefine(__m[22], __M([1,0]), function (require, exports) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var JSONLocation = (function () {\n        function JSONLocation(segments) {\n            this.segments = segments;\n        }\n        JSONLocation.prototype.append = function (segment) {\n            return new JSONLocation(this.segments.concat(segment));\n        };\n        JSONLocation.prototype.getSegments = function () {\n            return this.segments;\n        };\n        JSONLocation.prototype.matches = function (segments) {\n            var k = 0;\n            for (var i = 0; k < segments.length && i < this.segments.length; i++) {\n                if (segments[k] === this.segments[i] || segments[k] === '*') {\n                    k++;\n                }\n                else if (segments[k] !== '**') {\n                    return false;\n                }\n            }\n            return k === segments.length;\n        };\n        JSONLocation.prototype.toString = function () {\n            return '[' + this.segments.join('][') + ']';\n        };\n        return JSONLocation;\n    }());\n    exports.JSONLocation = JSONLocation;\n});\n\ndefine(__m[12], __M([2,3]), function(nls, data) { return nls.create(\"vs/base/common/http\", data); });\ndefine(__m[18], __M([1,0,12]), function (require, exports, nls) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function getErrorStatusDescription(status) {\n        if (status < 400) {\n            return void 0;\n        }\n        switch (status) {\n            case 400: return nls.localize(0, null);\n            case 401: return nls.localize(1, null);\n            case 403: return nls.localize(2, null);\n            case 404: return nls.localize(3, null);\n            case 405: return nls.localize(4, null);\n            case 406: return nls.localize(5, null);\n            case 407: return nls.localize(6, null);\n            case 408: return nls.localize(7, null);\n            case 409: return nls.localize(8, null);\n            case 410: return nls.localize(9, null);\n            case 411: return nls.localize(10, null);\n            case 412: return nls.localize(11, null);\n            case 413: return nls.localize(12, null);\n            case 414: return nls.localize(13, null);\n            case 415: return nls.localize(14, null);\n            case 500: return nls.localize(15, null);\n            case 501: return nls.localize(16, null);\n            case 503: return nls.localize(17, null);\n            default: return nls.localize(18, null, status);\n        }\n    }\n    exports.getErrorStatusDescription = getErrorStatusDescription;\n});\n\ndefine(__m[20], __M([1,0,7]), function (require, exports, Json) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    function applyEdit(text, edit) {\n        return text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n    }\n    exports.applyEdit = applyEdit;\n    function applyEdits(text, edits) {\n        for (var i = edits.length - 1; i >= 0; i--) {\n            text = applyEdit(text, edits[i]);\n        }\n        return text;\n    }\n    exports.applyEdits = applyEdits;\n    function format(documentText, range, options) {\n        var initialIndentLevel;\n        var value;\n        var rangeStart;\n        var rangeEnd;\n        if (range) {\n            rangeStart = range.offset;\n            rangeEnd = rangeStart + range.length;\n            while (rangeStart > 0 && !isEOL(documentText, rangeStart - 1)) {\n                rangeStart--;\n            }\n            var scanner_1 = Json.createScanner(documentText, true);\n            scanner_1.setPosition(rangeEnd);\n            scanner_1.scan();\n            rangeEnd = scanner_1.getPosition();\n            value = documentText.substring(rangeStart, rangeEnd);\n            initialIndentLevel = computeIndentLevel(value, 0, options);\n        }\n        else {\n            value = documentText;\n            rangeStart = 0;\n            rangeEnd = documentText.length;\n            initialIndentLevel = 0;\n        }\n        var eol = getEOL(options, documentText);\n        var lineBreak = false;\n        var indentLevel = 0;\n        var indentValue;\n        if (options.insertSpaces) {\n            indentValue = repeat(' ', options.tabSize);\n        }\n        else {\n            indentValue = '\\t';\n        }\n        var scanner = Json.createScanner(value, false);\n        function newLineAndIndent() {\n            return eol + repeat(indentValue, initialIndentLevel + indentLevel);\n        }\n        function scanNext() {\n            var token = scanner.scan();\n            lineBreak = false;\n            while (token === Json.SyntaxKind.Trivia || token === Json.SyntaxKind.LineBreakTrivia) {\n                lineBreak = lineBreak || (token === Json.SyntaxKind.LineBreakTrivia);\n                token = scanner.scan();\n            }\n            return token;\n        }\n        var editOperations = [];\n        function addEdit(text, startOffset, endOffset) {\n            if (documentText.substring(startOffset, endOffset) !== text) {\n                editOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n            }\n        }\n        var firstToken = scanNext();\n        if (firstToken !== Json.SyntaxKind.EOF) {\n            var firstTokenStart = scanner.getTokenOffset() + rangeStart;\n            var initialIndent = repeat(indentValue, initialIndentLevel);\n            addEdit(initialIndent, rangeStart, firstTokenStart);\n        }\n        while (firstToken !== Json.SyntaxKind.EOF) {\n            var firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + rangeStart;\n            var secondToken = scanNext();\n            var replaceContent = '';\n            while (!lineBreak && (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia)) {\n                // comments on the same line: keep them on the same line, but ignore them otherwise\n                var commentTokenStart = scanner.getTokenOffset() + rangeStart;\n                addEdit(' ', firstTokenEnd, commentTokenStart);\n                firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + rangeStart;\n                replaceContent = secondToken === Json.SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n                secondToken = scanNext();\n            }\n            if (secondToken === Json.SyntaxKind.CloseBraceToken) {\n                if (firstToken !== Json.SyntaxKind.OpenBraceToken) {\n                    indentLevel--;\n                    replaceContent = newLineAndIndent();\n                }\n            }\n            else if (secondToken === Json.SyntaxKind.CloseBracketToken) {\n                if (firstToken !== Json.SyntaxKind.OpenBracketToken) {\n                    indentLevel--;\n                    replaceContent = newLineAndIndent();\n                }\n            }\n            else if (secondToken !== Json.SyntaxKind.EOF) {\n                switch (firstToken) {\n                    case Json.SyntaxKind.OpenBracketToken:\n                    case Json.SyntaxKind.OpenBraceToken:\n                        indentLevel++;\n                        replaceContent = newLineAndIndent();\n                        break;\n                    case Json.SyntaxKind.CommaToken:\n                    case Json.SyntaxKind.LineCommentTrivia:\n                        replaceContent = newLineAndIndent();\n                        break;\n                    case Json.SyntaxKind.BlockCommentTrivia:\n                        if (lineBreak) {\n                            replaceContent = newLineAndIndent();\n                        }\n                        else {\n                            // symbol following comment on the same line: keep on same line, separate with ' '\n                            replaceContent = ' ';\n                        }\n                        break;\n                    case Json.SyntaxKind.ColonToken:\n                        replaceContent = ' ';\n                        break;\n                    case Json.SyntaxKind.NullKeyword:\n                    case Json.SyntaxKind.TrueKeyword:\n                    case Json.SyntaxKind.FalseKeyword:\n                    case Json.SyntaxKind.NumericLiteral:\n                        if (secondToken === Json.SyntaxKind.NullKeyword || secondToken === Json.SyntaxKind.FalseKeyword || secondToken === Json.SyntaxKind.NumericLiteral) {\n                            replaceContent = ' ';\n                        }\n                        break;\n                }\n                if (lineBreak && (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia)) {\n                    replaceContent = newLineAndIndent();\n                }\n            }\n            var secondTokenStart = scanner.getTokenOffset() + rangeStart;\n            addEdit(replaceContent, firstTokenEnd, secondTokenStart);\n            firstToken = secondToken;\n        }\n        return editOperations;\n    }\n    exports.format = format;\n    function repeat(s, count) {\n        var result = '';\n        for (var i = 0; i < count; i++) {\n            result += s;\n        }\n        return result;\n    }\n    function computeIndentLevel(content, offset, options) {\n        var i = 0;\n        var nChars = 0;\n        var tabSize = options.tabSize || 4;\n        while (i < content.length) {\n            var ch = content.charAt(i);\n            if (ch === ' ') {\n                nChars++;\n            }\n            else if (ch === '\\t') {\n                nChars += tabSize;\n            }\n            else {\n                break;\n            }\n            i++;\n        }\n        return Math.floor(nChars / tabSize);\n    }\n    function getEOL(options, text) {\n        for (var i = 0; i < text.length; i++) {\n            var ch = text.charAt(i);\n            if (ch === '\\r') {\n                if (i + 1 < text.length && text.charAt(i + 1) === '\\n') {\n                    return '\\r\\n';\n                }\n                return '\\r';\n            }\n            else if (ch === '\\n') {\n                return '\\n';\n            }\n        }\n        return (options && options.eol) || '\\n';\n    }\n    function isEOL(text, offset) {\n        return '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n    }\n});\n\ndefine(__m[25], __M([2,3]), function(nls, data) { return nls.create(\"vs/languages/json/common/contributions/bowerJSONContribution\", data); });\ndefine(__m[10], __M([2,3]), function(nls, data) { return nls.create(\"vs/languages/json/common/contributions/globPatternContribution\", data); });\ndefine(__m[11], __M([1,0,4,10]), function (require, exports, Strings, nls) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var globProperties = [\n        { type: 'value', label: nls.localize(0, null), codeSnippet: '\"**/*.{{extension}}\": true', documentationLabel: nls.localize(1, null) },\n        { type: 'value', label: nls.localize(2, null), codeSnippet: '\"**/*.{ext1,ext2,ext3}\": true', documentationLabel: nls.localize(3, null) },\n        { type: 'value', label: nls.localize(4, null), codeSnippet: '\"**/*.{{source-extension}}\": { \"when\": \"$(basename).{{target-extension}}\" }', documentationLabel: nls.localize(5, null) },\n        { type: 'value', label: nls.localize(6, null), codeSnippet: '\"{{name}}\": true', documentationLabel: nls.localize(7, null) },\n        { type: 'value', label: nls.localize(8, null), codeSnippet: '\"{folder1,folder2,folder3}\": true', documentationLabel: nls.localize(9, null) },\n        { type: 'value', label: nls.localize(10, null), codeSnippet: '\"**/{{name}}\": true', documentationLabel: nls.localize(11, null) },\n    ];\n    var globValues = [\n        { type: 'value', label: nls.localize(12, null), codeSnippet: 'true', documentationLabel: nls.localize(13, null) },\n        { type: 'value', label: nls.localize(14, null), codeSnippet: 'false', documentationLabel: nls.localize(15, null) },\n        { type: 'value', label: nls.localize(16, null), codeSnippet: '{ \"when\": \"$(basename).{{extension}}\" }', documentationLabel: nls.localize(17, null) }\n    ];\n    var GlobPatternContribution = (function () {\n        function GlobPatternContribution() {\n        }\n        GlobPatternContribution.prototype.isSettingsFile = function (resource) {\n            var path = resource.path;\n            return Strings.endsWith(path, '/settings.json');\n        };\n        GlobPatternContribution.prototype.collectDefaultSuggestions = function (resource, result) {\n            return null;\n        };\n        GlobPatternContribution.prototype.collectPropertySuggestions = function (resource, location, currentWord, addValue, isLast, result) {\n            if (this.isSettingsFile(resource) && (location.matches(['files.exclude']) || location.matches(['search.exclude']))) {\n                globProperties.forEach(function (e) { return result.add(e); });\n            }\n            return null;\n        };\n        GlobPatternContribution.prototype.collectValueSuggestions = function (resource, location, currentKey, result) {\n            if (this.isSettingsFile(resource) && (location.matches(['files.exclude']) || location.matches(['search.exclude']))) {\n                globValues.forEach(function (e) { return result.add(e); });\n            }\n            return null;\n        };\n        GlobPatternContribution.prototype.getInfoContribution = function (resource, location) {\n            return null;\n        };\n        return GlobPatternContribution;\n    }());\n    exports.GlobPatternContribution = GlobPatternContribution;\n});\n\ndefine(__m[13], __M([2,3]), function(nls, data) { return nls.create(\"vs/languages/json/common/contributions/packageJSONContribution\", data); });\ndefine(__m[14], __M([2,3]), function(nls, data) { return nls.create(\"vs/languages/json/common/contributions/projectJSONContribution\", data); });\ndefine(__m[15], __M([2,3]), function(nls, data) { return nls.create(\"vs/languages/json/common/jsonIntellisense\", data); });\ndefine(__m[16], __M([2,3]), function(nls, data) { return nls.create(\"vs/languages/json/common/jsonSchemaService\", data); });\ndefine(__m[17], __M([2,3]), function(nls, data) { return nls.create(\"vs/languages/json/common/parser/jsonParser\", data); });\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\ndefine(__m[8], __M([1,0,17,32,6,7,22]), function (require, exports, nls, Arrays, Types, Json, jsonLocation_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var ASTNode = (function () {\n        function ASTNode(parent, type, name, start, end) {\n            this.type = type;\n            this.name = name;\n            this.start = start;\n            this.end = end;\n            this.parent = parent;\n        }\n        ASTNode.prototype.getNodeLocation = function () {\n            var path = this.parent ? this.parent.getNodeLocation() : new jsonLocation_1.JSONLocation([]);\n            if (this.name) {\n                path = path.append(this.name);\n            }\n            return path;\n        };\n        ASTNode.prototype.getChildNodes = function () {\n            return [];\n        };\n        ASTNode.prototype.getValue = function () {\n            // override in children\n            return;\n        };\n        ASTNode.prototype.contains = function (offset, includeRightBound) {\n            if (includeRightBound === void 0) { includeRightBound = false; }\n            return offset >= this.start && offset < this.end || includeRightBound && offset === this.end;\n        };\n        ASTNode.prototype.visit = function (visitor) {\n            return visitor(this);\n        };\n        ASTNode.prototype.getNodeFromOffset = function (offset) {\n            var findNode = function (node) {\n                if (offset >= node.start && offset < node.end) {\n                    var children = node.getChildNodes();\n                    for (var i = 0; i < children.length && children[i].start <= offset; i++) {\n                        var item = findNode(children[i]);\n                        if (item) {\n                            return item;\n                        }\n                    }\n                    return node;\n                }\n                return null;\n            };\n            return findNode(this);\n        };\n        ASTNode.prototype.getNodeFromOffsetEndInclusive = function (offset) {\n            var findNode = function (node) {\n                if (offset >= node.start && offset <= node.end) {\n                    var children = node.getChildNodes();\n                    for (var i = 0; i < children.length && children[i].start <= offset; i++) {\n                        var item = findNode(children[i]);\n                        if (item) {\n                            return item;\n                        }\n                    }\n                    return node;\n                }\n                return null;\n            };\n            return findNode(this);\n        };\n        ASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\n            var _this = this;\n            if (offset === void 0) { offset = -1; }\n            if (offset !== -1 && !this.contains(offset)) {\n                return;\n            }\n            if (Array.isArray(schema.type)) {\n                if (Arrays.contains(schema.type, this.type) === false) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: schema.errorMessage || nls.localize(0, null, schema.type.join())\n                    });\n                }\n            }\n            else if (schema.type) {\n                if (this.type !== schema.type) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: schema.errorMessage || nls.localize(1, null, schema.type)\n                    });\n                }\n            }\n            if (Array.isArray(schema.allOf)) {\n                schema.allOf.forEach(function (subSchema) {\n                    _this.validate(subSchema, validationResult, matchingSchemas, offset);\n                });\n            }\n            if (schema.not) {\n                var subValidationResult = new ValidationResult();\n                var subMatchingSchemas = [];\n                this.validate(schema.not, subValidationResult, subMatchingSchemas, offset);\n                if (!subValidationResult.hasErrors()) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(2, null)\n                    });\n                }\n                if (matchingSchemas) {\n                    subMatchingSchemas.forEach(function (ms) {\n                        ms.inverted = !ms.inverted;\n                        matchingSchemas.push(ms);\n                    });\n                }\n            }\n            var testAlternatives = function (alternatives, maxOneMatch) {\n                var matches = [];\n                // remember the best match that is used for error messages\n                var bestMatch = null;\n                alternatives.forEach(function (subSchema) {\n                    var subValidationResult = new ValidationResult();\n                    var subMatchingSchemas = [];\n                    _this.validate(subSchema, subValidationResult, subMatchingSchemas);\n                    if (!subValidationResult.hasErrors()) {\n                        matches.push(subSchema);\n                    }\n                    if (!bestMatch) {\n                        bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                    }\n                    else {\n                        if (!maxOneMatch && !subValidationResult.hasErrors() && !bestMatch.validationResult.hasErrors()) {\n                            // no errors, both are equally good matches\n                            bestMatch.matchingSchemas.push.apply(bestMatch.matchingSchemas, subMatchingSchemas);\n                            bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n                            bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n                        }\n                        else {\n                            var compareResult = subValidationResult.compare(bestMatch.validationResult);\n                            if (compareResult > 0) {\n                                // our node is the best matching so far\n                                bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                            }\n                            else if (compareResult === 0) {\n                                // there's already a best matching but we are as good\n                                bestMatch.matchingSchemas.push.apply(bestMatch.matchingSchemas, subMatchingSchemas);\n                            }\n                        }\n                    }\n                });\n                if (matches.length > 1 && maxOneMatch) {\n                    validationResult.warnings.push({\n                        location: { start: _this.start, end: _this.start + 1 },\n                        message: nls.localize(3, null)\n                    });\n                }\n                if (bestMatch !== null) {\n                    validationResult.merge(bestMatch.validationResult);\n                    validationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n                    validationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n                    if (matchingSchemas) {\n                        matchingSchemas.push.apply(matchingSchemas, bestMatch.matchingSchemas);\n                    }\n                }\n                return matches.length;\n            };\n            if (Array.isArray(schema.anyOf)) {\n                testAlternatives(schema.anyOf, false);\n            }\n            if (Array.isArray(schema.oneOf)) {\n                testAlternatives(schema.oneOf, true);\n            }\n            if (Array.isArray(schema.enum)) {\n                if (Arrays.contains(schema.enum, this.getValue()) === false) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(4, null, JSON.stringify(schema.enum))\n                    });\n                }\n                else {\n                    validationResult.enumValueMatch = true;\n                }\n            }\n            if (matchingSchemas !== null) {\n                matchingSchemas.push({ node: this, schema: schema });\n            }\n        };\n        return ASTNode;\n    }());\n    exports.ASTNode = ASTNode;\n    var NullASTNode = (function (_super) {\n        __extends(NullASTNode, _super);\n        function NullASTNode(parent, name, start, end) {\n            _super.call(this, parent, 'null', name, start, end);\n        }\n        NullASTNode.prototype.getValue = function () {\n            return null;\n        };\n        return NullASTNode;\n    }(ASTNode));\n    exports.NullASTNode = NullASTNode;\n    var BooleanASTNode = (function (_super) {\n        __extends(BooleanASTNode, _super);\n        function BooleanASTNode(parent, name, value, start, end) {\n            _super.call(this, parent, 'boolean', name, start, end);\n            this.value = value;\n        }\n        BooleanASTNode.prototype.getValue = function () {\n            return this.value;\n        };\n        return BooleanASTNode;\n    }(ASTNode));\n    exports.BooleanASTNode = BooleanASTNode;\n    var ArrayASTNode = (function (_super) {\n        __extends(ArrayASTNode, _super);\n        function ArrayASTNode(parent, name, start, end) {\n            _super.call(this, parent, 'array', name, start, end);\n            this.items = [];\n        }\n        ArrayASTNode.prototype.getChildNodes = function () {\n            return this.items;\n        };\n        ArrayASTNode.prototype.getValue = function () {\n            return this.items.map(function (v) { return v.getValue(); });\n        };\n        ArrayASTNode.prototype.addItem = function (item) {\n            if (item) {\n                this.items.push(item);\n                return true;\n            }\n            return false;\n        };\n        ArrayASTNode.prototype.visit = function (visitor) {\n            var ctn = visitor(this);\n            for (var i = 0; i < this.items.length && ctn; i++) {\n                ctn = this.items[i].visit(visitor);\n            }\n            return ctn;\n        };\n        ArrayASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\n            var _this = this;\n            if (offset === void 0) { offset = -1; }\n            if (offset !== -1 && !this.contains(offset)) {\n                return;\n            }\n            _super.prototype.validate.call(this, schema, validationResult, matchingSchemas, offset);\n            if (Array.isArray(schema.items)) {\n                var subSchemas = schema.items;\n                subSchemas.forEach(function (subSchema, index) {\n                    var itemValidationResult = new ValidationResult();\n                    var item = _this.items[index];\n                    if (item) {\n                        item.validate(subSchema, itemValidationResult, matchingSchemas, offset);\n                        validationResult.mergePropertyMatch(itemValidationResult);\n                    }\n                    else if (_this.items.length >= subSchemas.length) {\n                        validationResult.propertiesValueMatches++;\n                    }\n                });\n                if (schema.additionalItems === false && this.items.length > subSchemas.length) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(5, null, subSchemas.length)\n                    });\n                }\n                else if (this.items.length >= subSchemas.length) {\n                    validationResult.propertiesValueMatches += (this.items.length - subSchemas.length);\n                }\n            }\n            else if (schema.items) {\n                this.items.forEach(function (item) {\n                    var itemValidationResult = new ValidationResult();\n                    item.validate(schema.items, itemValidationResult, matchingSchemas, offset);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                });\n            }\n            if (schema.minItems && this.items.length < schema.minItems) {\n                validationResult.warnings.push({\n                    location: { start: this.start, end: this.end },\n                    message: nls.localize(6, null, schema.minItems)\n                });\n            }\n            if (schema.maxItems && this.items.length > schema.maxItems) {\n                validationResult.warnings.push({\n                    location: { start: this.start, end: this.end },\n                    message: nls.localize(7, null, schema.minItems)\n                });\n            }\n            if (schema.uniqueItems === true) {\n                var values = this.items.map(function (node) {\n                    return node.getValue();\n                });\n                var duplicates = values.some(function (value, index) {\n                    return index !== values.lastIndexOf(value);\n                });\n                if (duplicates) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(8, null)\n                    });\n                }\n            }\n        };\n        return ArrayASTNode;\n    }(ASTNode));\n    exports.ArrayASTNode = ArrayASTNode;\n    var NumberASTNode = (function (_super) {\n        __extends(NumberASTNode, _super);\n        function NumberASTNode(parent, name, start, end) {\n            _super.call(this, parent, 'number', name, start, end);\n            this.isInteger = true;\n            this.value = Number.NaN;\n        }\n        NumberASTNode.prototype.getValue = function () {\n            return this.value;\n        };\n        NumberASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\n            if (offset === void 0) { offset = -1; }\n            if (offset !== -1 && !this.contains(offset)) {\n                return;\n            }\n            // work around type validation in the base class\n            var typeIsInteger = false;\n            if (schema.type === 'integer' || (Array.isArray(schema.type) && Arrays.contains(schema.type, 'integer'))) {\n                typeIsInteger = true;\n            }\n            if (typeIsInteger && this.isInteger === true) {\n                this.type = 'integer';\n            }\n            _super.prototype.validate.call(this, schema, validationResult, matchingSchemas, offset);\n            this.type = 'number';\n            var val = this.getValue();\n            if (Types.isNumber(schema.multipleOf)) {\n                if (val % schema.multipleOf !== 0) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(9, null, schema.multipleOf)\n                    });\n                }\n            }\n            if (!Types.isUndefined(schema.minimum)) {\n                if (schema.exclusiveMinimum && val <= schema.minimum) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(10, null, schema.minimum)\n                    });\n                }\n                if (!schema.exclusiveMinimum && val < schema.minimum) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(11, null, schema.minimum)\n                    });\n                }\n            }\n            if (!Types.isUndefined(schema.maximum)) {\n                if (schema.exclusiveMaximum && val >= schema.maximum) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(12, null, schema.maximum)\n                    });\n                }\n                if (!schema.exclusiveMaximum && val > schema.maximum) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(13, null, schema.maximum)\n                    });\n                }\n            }\n        };\n        return NumberASTNode;\n    }(ASTNode));\n    exports.NumberASTNode = NumberASTNode;\n    var StringASTNode = (function (_super) {\n        __extends(StringASTNode, _super);\n        function StringASTNode(parent, name, isKey, start, end) {\n            _super.call(this, parent, 'string', name, start, end);\n            this.isKey = isKey;\n            this.value = '';\n        }\n        StringASTNode.prototype.getValue = function () {\n            return this.value;\n        };\n        StringASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\n            if (offset === void 0) { offset = -1; }\n            if (offset !== -1 && !this.contains(offset)) {\n                return;\n            }\n            _super.prototype.validate.call(this, schema, validationResult, matchingSchemas, offset);\n            if (schema.minLength && this.value.length < schema.minLength) {\n                validationResult.warnings.push({\n                    location: { start: this.start, end: this.end },\n                    message: nls.localize(14, null, schema.minLength)\n                });\n            }\n            if (schema.maxLength && this.value.length > schema.maxLength) {\n                validationResult.warnings.push({\n                    location: { start: this.start, end: this.end },\n                    message: nls.localize(15, null, schema.maxLength)\n                });\n            }\n            if (schema.pattern) {\n                var regex = new RegExp(schema.pattern);\n                if (!regex.test(this.value)) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: schema.errorMessage || nls.localize(16, null, schema.pattern)\n                    });\n                }\n            }\n        };\n        return StringASTNode;\n    }(ASTNode));\n    exports.StringASTNode = StringASTNode;\n    var PropertyASTNode = (function (_super) {\n        __extends(PropertyASTNode, _super);\n        function PropertyASTNode(parent, key) {\n            _super.call(this, parent, 'property', null, key.start);\n            this.key = key;\n            key.parent = this;\n            key.name = key.value;\n            this.colonOffset = -1;\n        }\n        PropertyASTNode.prototype.getChildNodes = function () {\n            return this.value ? [this.key, this.value] : [this.key];\n        };\n        PropertyASTNode.prototype.setValue = function (value) {\n            this.value = value;\n            return value !== null;\n        };\n        PropertyASTNode.prototype.visit = function (visitor) {\n            return visitor(this) && this.key.visit(visitor) && this.value && this.value.visit(visitor);\n        };\n        PropertyASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\n            if (offset === void 0) { offset = -1; }\n            if (offset !== -1 && !this.contains(offset)) {\n                return;\n            }\n            if (this.value) {\n                this.value.validate(schema, validationResult, matchingSchemas, offset);\n            }\n        };\n        return PropertyASTNode;\n    }(ASTNode));\n    exports.PropertyASTNode = PropertyASTNode;\n    var ObjectASTNode = (function (_super) {\n        __extends(ObjectASTNode, _super);\n        function ObjectASTNode(parent, name, start, end) {\n            _super.call(this, parent, 'object', name, start, end);\n            this.properties = [];\n        }\n        ObjectASTNode.prototype.getChildNodes = function () {\n            return this.properties;\n        };\n        ObjectASTNode.prototype.addProperty = function (node) {\n            if (!node) {\n                return false;\n            }\n            this.properties.push(node);\n            return true;\n        };\n        ObjectASTNode.prototype.getFirstProperty = function (key) {\n            for (var i = 0; i < this.properties.length; i++) {\n                if (this.properties[i].key.value === key) {\n                    return this.properties[i];\n                }\n            }\n            return null;\n        };\n        ObjectASTNode.prototype.getKeyList = function () {\n            return this.properties.map(function (p) { return p.key.getValue(); });\n        };\n        ObjectASTNode.prototype.getValue = function () {\n            var value = {};\n            this.properties.forEach(function (p) {\n                var v = p.value && p.value.getValue();\n                if (v) {\n                    value[p.key.getValue()] = v;\n                }\n            });\n            return value;\n        };\n        ObjectASTNode.prototype.visit = function (visitor) {\n            var ctn = visitor(this);\n            for (var i = 0; i < this.properties.length && ctn; i++) {\n                ctn = this.properties[i].visit(visitor);\n            }\n            return ctn;\n        };\n        ObjectASTNode.prototype.validate = function (schema, validationResult, matchingSchemas, offset) {\n            var _this = this;\n            if (offset === void 0) { offset = -1; }\n            if (offset !== -1 && !this.contains(offset)) {\n                return;\n            }\n            _super.prototype.validate.call(this, schema, validationResult, matchingSchemas, offset);\n            var seenKeys = {};\n            var unprocessedProperties = [];\n            this.properties.forEach(function (node) {\n                var key = node.key.value;\n                seenKeys[key] = node.value;\n                unprocessedProperties.push(key);\n            });\n            if (Array.isArray(schema.required)) {\n                schema.required.forEach(function (propertyName) {\n                    if (!seenKeys[propertyName]) {\n                        var key = _this.parent && _this.parent && _this.parent.key;\n                        var location = key ? { start: key.start, end: key.end } : { start: _this.start, end: _this.start + 1 };\n                        validationResult.warnings.push({\n                            location: location,\n                            message: nls.localize(17, null, propertyName)\n                        });\n                    }\n                });\n            }\n            var propertyProcessed = function (prop) {\n                var index = unprocessedProperties.indexOf(prop);\n                while (index >= 0) {\n                    unprocessedProperties.splice(index, 1);\n                    index = unprocessedProperties.indexOf(prop);\n                }\n            };\n            if (schema.properties) {\n                Object.keys(schema.properties).forEach(function (propertyName) {\n                    propertyProcessed(propertyName);\n                    var prop = schema.properties[propertyName];\n                    var child = seenKeys[propertyName];\n                    if (child) {\n                        var propertyvalidationResult = new ValidationResult();\n                        child.validate(prop, propertyvalidationResult, matchingSchemas, offset);\n                        validationResult.mergePropertyMatch(propertyvalidationResult);\n                    }\n                });\n            }\n            if (schema.patternProperties) {\n                Object.keys(schema.patternProperties).forEach(function (propertyPattern) {\n                    var regex = new RegExp(propertyPattern);\n                    unprocessedProperties.slice(0).forEach(function (propertyName) {\n                        if (regex.test(propertyName)) {\n                            propertyProcessed(propertyName);\n                            var child = seenKeys[propertyName];\n                            if (child) {\n                                var propertyvalidationResult = new ValidationResult();\n                                child.validate(schema.patternProperties[propertyPattern], propertyvalidationResult, matchingSchemas, offset);\n                                validationResult.mergePropertyMatch(propertyvalidationResult);\n                            }\n                        }\n                    });\n                });\n            }\n            if (Types.isObject(schema.additionalProperties)) {\n                unprocessedProperties.forEach(function (propertyName) {\n                    var child = seenKeys[propertyName];\n                    if (child) {\n                        var propertyvalidationResult = new ValidationResult();\n                        child.validate(schema.additionalProperties, propertyvalidationResult, matchingSchemas, offset);\n                        validationResult.mergePropertyMatch(propertyvalidationResult);\n                    }\n                });\n            }\n            else if (schema.additionalProperties === false) {\n                if (unprocessedProperties.length > 0) {\n                    unprocessedProperties.forEach(function (propertyName) {\n                        var child = seenKeys[propertyName];\n                        if (child) {\n                            var propertyNode = child.parent;\n                            validationResult.warnings.push({\n                                location: { start: propertyNode.key.start, end: propertyNode.key.end },\n                                message: nls.localize(18, null, propertyName)\n                            });\n                        }\n                    });\n                }\n            }\n            if (schema.maxProperties) {\n                if (this.properties.length > schema.maxProperties) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(19, null, schema.maxProperties)\n                    });\n                }\n            }\n            if (schema.minProperties) {\n                if (this.properties.length < schema.minProperties) {\n                    validationResult.warnings.push({\n                        location: { start: this.start, end: this.end },\n                        message: nls.localize(20, null, schema.minProperties)\n                    });\n                }\n            }\n            if (Types.isObject(schema.dependencies)) {\n                Object.keys(schema.dependencies).forEach(function (key) {\n                    var prop = seenKeys[key];\n                    if (prop) {\n                        if (Array.isArray(schema.dependencies[key])) {\n                            var valueAsArray = schema.dependencies[key];\n                            valueAsArray.forEach(function (requiredProp) {\n                                if (!seenKeys[requiredProp]) {\n                                    validationResult.warnings.push({\n                                        location: { start: _this.start, end: _this.end },\n                                        message: nls.localize(21, null, requiredProp, key)\n                                    });\n                                }\n                                else {\n                                    validationResult.propertiesValueMatches++;\n                                }\n                            });\n                        }\n                        else if (Types.isObject(schema.dependencies[key])) {\n                            var valueAsSchema = schema.dependencies[key];\n                            var propertyvalidationResult = new ValidationResult();\n                            _this.validate(valueAsSchema, propertyvalidationResult, matchingSchemas, offset);\n                            validationResult.mergePropertyMatch(propertyvalidationResult);\n                        }\n                    }\n                });\n            }\n        };\n        return ObjectASTNode;\n    }(ASTNode));\n    exports.ObjectASTNode = ObjectASTNode;\n    var JSONDocumentConfig = (function () {\n        function JSONDocumentConfig() {\n            this.ignoreDanglingComma = false;\n        }\n        return JSONDocumentConfig;\n    }());\n    exports.JSONDocumentConfig = JSONDocumentConfig;\n    var ValidationResult = (function () {\n        function ValidationResult() {\n            this.errors = [];\n            this.warnings = [];\n            this.propertiesMatches = 0;\n            this.propertiesValueMatches = 0;\n            this.enumValueMatch = false;\n        }\n        ValidationResult.prototype.hasErrors = function () {\n            return !!this.errors.length || !!this.warnings.length;\n        };\n        ValidationResult.prototype.mergeAll = function (validationResults) {\n            var _this = this;\n            validationResults.forEach(function (validationResult) {\n                _this.merge(validationResult);\n            });\n        };\n        ValidationResult.prototype.merge = function (validationResult) {\n            this.errors = this.errors.concat(validationResult.errors);\n            this.warnings = this.warnings.concat(validationResult.warnings);\n        };\n        ValidationResult.prototype.mergePropertyMatch = function (propertyValidationResult) {\n            this.merge(propertyValidationResult);\n            this.propertiesMatches++;\n            if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasErrors() && propertyValidationResult.propertiesMatches) {\n                this.propertiesValueMatches++;\n            }\n        };\n        ValidationResult.prototype.compare = function (other) {\n            var hasErrors = this.hasErrors();\n            if (hasErrors !== other.hasErrors()) {\n                return hasErrors ? -1 : 1;\n            }\n            if (this.enumValueMatch !== other.enumValueMatch) {\n                return other.enumValueMatch ? -1 : 1;\n            }\n            if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n                return this.propertiesValueMatches - other.propertiesValueMatches;\n            }\n            return this.propertiesMatches - other.propertiesMatches;\n        };\n        return ValidationResult;\n    }());\n    exports.ValidationResult = ValidationResult;\n    var JSONDocument = (function () {\n        function JSONDocument(config) {\n            this.config = config;\n            this.validationResult = new ValidationResult();\n        }\n        Object.defineProperty(JSONDocument.prototype, \"errors\", {\n            get: function () {\n                return this.validationResult.errors;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(JSONDocument.prototype, \"warnings\", {\n            get: function () {\n                return this.validationResult.warnings;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        JSONDocument.prototype.getNodeFromOffset = function (offset) {\n            return this.root && this.root.getNodeFromOffset(offset);\n        };\n        JSONDocument.prototype.getNodeFromOffsetEndInclusive = function (offset) {\n            return this.root && this.root.getNodeFromOffsetEndInclusive(offset);\n        };\n        JSONDocument.prototype.visit = function (visitor) {\n            if (this.root) {\n                this.root.visit(visitor);\n            }\n        };\n        JSONDocument.prototype.validate = function (schema, matchingSchemas, offset) {\n            if (matchingSchemas === void 0) { matchingSchemas = null; }\n            if (offset === void 0) { offset = -1; }\n            if (this.root) {\n                this.root.validate(schema, this.validationResult, matchingSchemas, offset);\n            }\n        };\n        return JSONDocument;\n    }());\n    exports.JSONDocument = JSONDocument;\n    var JSONParser = (function () {\n        function JSONParser() {\n        }\n        JSONParser.prototype.parse = function (text, config) {\n            if (config === void 0) { config = new JSONDocumentConfig(); }\n            var _doc = new JSONDocument(config);\n            var _scanner = Json.createScanner(text, true);\n            function _accept(token) {\n                if (_scanner.getToken() === token) {\n                    _scanner.scan();\n                    return true;\n                }\n                return false;\n            }\n            function _error(message, node, skipUntilAfter, skipUntil) {\n                if (node === void 0) { node = null; }\n                if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n                if (skipUntil === void 0) { skipUntil = []; }\n                if (_doc.errors.length === 0 || _doc.errors[0].location.start !== _scanner.getTokenOffset()) {\n                    // ignore multiple errors on the same offset\n                    var error = { message: message, location: { start: _scanner.getTokenOffset(), end: _scanner.getTokenOffset() + _scanner.getTokenLength() } };\n                    _doc.errors.push(error);\n                }\n                if (node) {\n                    _finalize(node, false);\n                }\n                if (skipUntilAfter.length + skipUntil.length > 0) {\n                    var token = _scanner.getToken();\n                    while (token !== Json.SyntaxKind.EOF) {\n                        if (skipUntilAfter.indexOf(token) !== -1) {\n                            _scanner.scan();\n                            break;\n                        }\n                        else if (skipUntil.indexOf(token) !== -1) {\n                            break;\n                        }\n                        token = _scanner.scan();\n                    }\n                }\n                return node;\n            }\n            function _checkScanError() {\n                switch (_scanner.getTokenError()) {\n                    case Json.ScanError.InvalidUnicode:\n                        _error(nls.localize(22, null));\n                        return true;\n                    case Json.ScanError.InvalidEscapeCharacter:\n                        _error(nls.localize(23, null));\n                        return true;\n                    case Json.ScanError.UnexpectedEndOfNumber:\n                        _error(nls.localize(24, null));\n                        return true;\n                    case Json.ScanError.UnexpectedEndOfComment:\n                        _error(nls.localize(25, null));\n                        return true;\n                    case Json.ScanError.UnexpectedEndOfString:\n                        _error(nls.localize(26, null));\n                        return true;\n                }\n                return false;\n            }\n            function _finalize(node, scanNext) {\n                node.end = _scanner.getTokenOffset() + _scanner.getTokenLength();\n                if (scanNext) {\n                    _scanner.scan();\n                }\n                return node;\n            }\n            function _parseArray(parent, name) {\n                if (_scanner.getToken() !== Json.SyntaxKind.OpenBracketToken) {\n                    return null;\n                }\n                var node = new ArrayASTNode(parent, name, _scanner.getTokenOffset());\n                _scanner.scan(); // consume OpenBracketToken\n                var count = 0;\n                if (node.addItem(_parseValue(node, '' + count++))) {\n                    while (_accept(Json.SyntaxKind.CommaToken)) {\n                        if (!node.addItem(_parseValue(node, '' + count++)) && !_doc.config.ignoreDanglingComma) {\n                            _error(nls.localize(27, null));\n                        }\n                    }\n                }\n                if (_scanner.getToken() !== Json.SyntaxKind.CloseBracketToken) {\n                    return _error(nls.localize(28, null), node);\n                }\n                return _finalize(node, true);\n            }\n            function _parseProperty(parent, keysSeen) {\n                var key = _parseString(null, null, true);\n                if (!key) {\n                    if (_scanner.getToken() === Json.SyntaxKind.Unknown) {\n                        // give a more helpful error message\n                        var value = _scanner.getTokenValue();\n                        if (value.match(/^['\\w]/)) {\n                            _error(nls.localize(29, null));\n                        }\n                    }\n                    return null;\n                }\n                var node = new PropertyASTNode(parent, key);\n                if (keysSeen[key.value]) {\n                    _doc.warnings.push({ location: { start: node.key.start, end: node.key.end }, message: nls.localize(30, null) });\n                }\n                keysSeen[key.value] = true;\n                if (_scanner.getToken() === Json.SyntaxKind.ColonToken) {\n                    node.colonOffset = _scanner.getTokenOffset();\n                }\n                else {\n                    return _error(nls.localize(31, null), node, [], [Json.SyntaxKind.CloseBraceToken, Json.SyntaxKind.CommaToken]);\n                }\n                _scanner.scan(); // consume ColonToken\n                if (!node.setValue(_parseValue(node, key.value))) {\n                    return _error(nls.localize(32, null), node, [], [Json.SyntaxKind.CloseBraceToken, Json.SyntaxKind.CommaToken]);\n                }\n                node.end = node.value.end;\n                return node;\n            }\n            function _parseObject(parent, name) {\n                if (_scanner.getToken() !== Json.SyntaxKind.OpenBraceToken) {\n                    return null;\n                }\n                var node = new ObjectASTNode(parent, name, _scanner.getTokenOffset());\n                _scanner.scan(); // consume OpenBraceToken\n                var keysSeen = {};\n                if (node.addProperty(_parseProperty(node, keysSeen))) {\n                    while (_accept(Json.SyntaxKind.CommaToken)) {\n                        if (!node.addProperty(_parseProperty(node, keysSeen)) && !_doc.config.ignoreDanglingComma) {\n                            _error(nls.localize(33, null));\n                        }\n                    }\n                }\n                if (_scanner.getToken() !== Json.SyntaxKind.CloseBraceToken) {\n                    return _error(nls.localize(34, null), node);\n                }\n                return _finalize(node, true);\n            }\n            function _parseString(parent, name, isKey) {\n                if (_scanner.getToken() !== Json.SyntaxKind.StringLiteral) {\n                    return null;\n                }\n                var node = new StringASTNode(parent, name, isKey, _scanner.getTokenOffset());\n                node.value = _scanner.getTokenValue();\n                _checkScanError();\n                return _finalize(node, true);\n            }\n            function _parseNumber(parent, name) {\n                if (_scanner.getToken() !== Json.SyntaxKind.NumericLiteral) {\n                    return null;\n                }\n                var node = new NumberASTNode(parent, name, _scanner.getTokenOffset());\n                if (!_checkScanError()) {\n                    var tokenValue = _scanner.getTokenValue();\n                    try {\n                        var numberValue = JSON.parse(tokenValue);\n                        if (typeof numberValue !== 'number') {\n                            return _error(nls.localize(35, null), node);\n                        }\n                        node.value = numberValue;\n                    }\n                    catch (e) {\n                        return _error(nls.localize(36, null), node);\n                    }\n                    node.isInteger = tokenValue.indexOf('.') === -1;\n                }\n                return _finalize(node, true);\n            }\n            function _parseLiteral(parent, name) {\n                var node;\n                switch (_scanner.getToken()) {\n                    case Json.SyntaxKind.NullKeyword:\n                        node = new NullASTNode(parent, name, _scanner.getTokenOffset());\n                        break;\n                    case Json.SyntaxKind.TrueKeyword:\n                        node = new BooleanASTNode(parent, name, true, _scanner.getTokenOffset());\n                        break;\n                    case Json.SyntaxKind.FalseKeyword:\n                        node = new BooleanASTNode(parent, name, false, _scanner.getTokenOffset());\n                        break;\n                    default:\n                        return null;\n                }\n                return _finalize(node, true);\n            }\n            function _parseValue(parent, name) {\n                return _parseArray(parent, name) || _parseObject(parent, name) || _parseString(parent, name, false) || _parseNumber(parent, name) || _parseLiteral(parent, name);\n            }\n            _scanner.scan();\n            _doc.root = _parseValue(null, null);\n            if (!_doc.root) {\n                _error(nls.localize(37, null));\n            }\n            else if (_scanner.getToken() !== Json.SyntaxKind.EOF) {\n                _error(nls.localize(38, null));\n            }\n            return _doc;\n        };\n        return JSONParser;\n    }());\n    exports.JSONParser = JSONParser;\n});\n\ndefine(__m[21], __M([1,0,8,6,9,15,23]), function (require, exports, Parser, Types, WinJS, nls, errors) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var JSONIntellisense = (function () {\n        function JSONIntellisense(schemaService, requestService, contributions) {\n            this.schemaService = schemaService;\n            this.requestService = requestService;\n            this.contributions = contributions;\n        }\n        JSONIntellisense.prototype.doSuggest = function (resource, modelMirror, position) {\n            var _this = this;\n            var currentWord = modelMirror.getWordUntilPosition(position).word;\n            var parser = new Parser.JSONParser();\n            var config = new Parser.JSONDocumentConfig();\n            // so you can invoke suggest after the comma in an object literal\n            config.ignoreDanglingComma = true;\n            var doc = parser.parse(modelMirror.getValue(), config);\n            var result = {\n                currentWord: currentWord,\n                incomplete: false,\n                suggestions: []\n            };\n            var overwriteBefore = void 0;\n            var overwriteAfter = void 0;\n            var proposed = {};\n            var collector = {\n                add: function (suggestion) {\n                    if (!proposed[suggestion.label]) {\n                        proposed[suggestion.label] = true;\n                        suggestion.overwriteBefore = overwriteBefore;\n                        suggestion.overwriteAfter = overwriteAfter;\n                        result.suggestions.push(suggestion);\n                    }\n                },\n                setAsIncomplete: function () {\n                    result.incomplete = true;\n                },\n                error: function (message) {\n                    errors.onUnexpectedError(message);\n                }\n            };\n            return this.schemaService.getSchemaForResource(resource.toString(), doc).then(function (schema) {\n                var collectionPromises = [];\n                var offset = modelMirror.getOffsetFromPosition(position);\n                var node = doc.getNodeFromOffsetEndInclusive(offset);\n                var addValue = true;\n                var currentKey = currentWord;\n                var currentProperty = null;\n                if (node) {\n                    if (node.type === 'string') {\n                        var stringNode = node;\n                        if (stringNode.isKey) {\n                            var nodeRange = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n                            overwriteBefore = position.column - nodeRange.startColumn;\n                            overwriteAfter = nodeRange.endColumn - position.column;\n                            addValue = !(node.parent && (node.parent.value));\n                            currentProperty = node.parent ? node.parent : null;\n                            currentKey = modelMirror.getValueInRange({ startColumn: nodeRange.startColumn + 1, startLineNumber: nodeRange.startLineNumber, endColumn: position.column, endLineNumber: position.lineNumber });\n                            if (node.parent) {\n                                node = node.parent.parent;\n                            }\n                        }\n                    }\n                }\n                // proposals for properties\n                if (node && node.type === 'object') {\n                    // don't suggest keys when the cursor is just before the opening curly brace\n                    if (node.start === offset) {\n                        return result;\n                    }\n                    // don't suggest properties that are already present\n                    var properties = node.properties;\n                    properties.forEach(function (p) {\n                        if (!currentProperty || currentProperty !== p) {\n                            proposed[p.key.value] = true;\n                        }\n                    });\n                    if (schema) {\n                        // property proposals with schema\n                        var isLast = properties.length === 0 || offset >= properties[properties.length - 1].start;\n                        _this.getPropertySuggestions(resource, schema, doc, node, currentKey, addValue, isLast, collector);\n                    }\n                    else if (node.parent) {\n                        // property proposals without schema\n                        _this.getSchemaLessPropertySuggestions(doc, node, collector);\n                    }\n                    var location = node.getNodeLocation();\n                    _this.contributions.forEach(function (contribution) {\n                        var collectPromise = contribution.collectPropertySuggestions(resource, location, currentWord, addValue, isLast, collector);\n                        if (collectPromise) {\n                            collectionPromises.push(collectPromise);\n                        }\n                    });\n                }\n                // proposals for values\n                if (node && (node.type === 'string' || node.type === 'number' || node.type === 'integer' || node.type === 'boolean' || node.type === 'null')) {\n                    var nodeRange = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n                    overwriteBefore = position.column - nodeRange.startColumn;\n                    overwriteAfter = nodeRange.endColumn - position.column;\n                    node = node.parent;\n                }\n                if (schema) {\n                    // value proposals with schema\n                    _this.getValueSuggestions(resource, schema, doc, node, offset, collector);\n                }\n                else {\n                    // value proposals without schema\n                    _this.getSchemaLessValueSuggestions(doc, node, offset, modelMirror, collector);\n                }\n                if (!node) {\n                    _this.contributions.forEach(function (contribution) {\n                        var collectPromise = contribution.collectDefaultSuggestions(resource, collector);\n                        if (collectPromise) {\n                            collectionPromises.push(collectPromise);\n                        }\n                    });\n                }\n                else {\n                    if ((node.type === 'property') && offset > node.colonOffset) {\n                        var parentKey = node.key.value;\n                        var valueNode = node.value;\n                        if (!valueNode || offset <= valueNode.end) {\n                            var location = node.parent.getNodeLocation();\n                            _this.contributions.forEach(function (contribution) {\n                                var collectPromise = contribution.collectValueSuggestions(resource, location, parentKey, collector);\n                                if (collectPromise) {\n                                    collectionPromises.push(collectPromise);\n                                }\n                            });\n                        }\n                    }\n                }\n                return WinJS.Promise.join(collectionPromises).then(function () { return result; });\n            });\n        };\n        JSONIntellisense.prototype.getPropertySuggestions = function (resource, schema, doc, node, currentWord, addValue, isLast, collector) {\n            var _this = this;\n            var matchingSchemas = [];\n            doc.validate(schema.schema, matchingSchemas, node.start);\n            matchingSchemas.forEach(function (s) {\n                if (s.node === node && !s.inverted) {\n                    var schemaProperties = s.schema.properties;\n                    if (schemaProperties) {\n                        Object.keys(schemaProperties).forEach(function (key) {\n                            var propertySchema = schemaProperties[key];\n                            collector.add({ type: 'property', label: key, codeSnippet: _this.getTextForProperty(key, propertySchema, addValue, isLast), documentationLabel: propertySchema.description || '' });\n                        });\n                    }\n                }\n            });\n        };\n        JSONIntellisense.prototype.getSchemaLessPropertySuggestions = function (doc, node, collector) {\n            var _this = this;\n            var collectSuggestionsForSimilarObject = function (obj) {\n                obj.properties.forEach(function (p) {\n                    var key = p.key.value;\n                    collector.add({ type: 'property', label: key, codeSnippet: _this.getTextForSimilarProperty(key, p.value), documentationLabel: '' });\n                });\n            };\n            if (node.parent.type === 'property') {\n                // if the object is a property value, check the tree for other objects that hang under a property of the same name\n                var parentKey = node.parent.key.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n.key.value === parentKey && n.value && n.value.type === 'object') {\n                        collectSuggestionsForSimilarObject(n.value);\n                    }\n                    return true;\n                });\n            }\n            else if (node.parent.type === 'array') {\n                // if the object is in an array, use all other array elements as similar objects\n                node.parent.items.forEach(function (n) {\n                    if (n.type === 'object' && n !== node) {\n                        collectSuggestionsForSimilarObject(n);\n                    }\n                });\n            }\n        };\n        JSONIntellisense.prototype.getSchemaLessValueSuggestions = function (doc, node, offset, modelMirror, collector) {\n            var _this = this;\n            var collectSuggestionsForValues = function (value) {\n                var content = _this.getTextForMatchingNode(value, modelMirror);\n                collector.add({ type: _this.getSuggestionType(value.type), label: content, codeSnippet: content, documentationLabel: '' });\n                if (value.type === 'boolean') {\n                    _this.addBooleanSuggestion(!value.getValue(), collector);\n                }\n            };\n            if (!node) {\n                collector.add({ type: this.getSuggestionType('object'), label: 'Empty object', codeSnippet: '{\\n\\t{{}}\\n}', documentationLabel: '' });\n                collector.add({ type: this.getSuggestionType('array'), label: 'Empty array', codeSnippet: '[\\n\\t{{}}\\n]', documentationLabel: '' });\n            }\n            else {\n                if (node.type === 'property' && offset > node.colonOffset) {\n                    var valueNode = node.value;\n                    if (valueNode && offset > valueNode.end) {\n                        return;\n                    }\n                    // suggest values at the same key\n                    var parentKey = node.key.value;\n                    doc.visit(function (n) {\n                        if (n.type === 'property' && n.key.value === parentKey && n.value) {\n                            collectSuggestionsForValues(n.value);\n                        }\n                        return true;\n                    });\n                }\n                if (node.type === 'array') {\n                    if (node.parent && node.parent.type === 'property') {\n                        // suggest items of an array at the same key\n                        var parentKey = node.parent.key.value;\n                        doc.visit(function (n) {\n                            if (n.type === 'property' && n.key.value === parentKey && n.value && n.value.type === 'array') {\n                                (n.value.items).forEach(function (n) {\n                                    collectSuggestionsForValues(n);\n                                });\n                            }\n                            return true;\n                        });\n                    }\n                    else {\n                        // suggest items in the same array\n                        node.items.forEach(function (n) {\n                            collectSuggestionsForValues(n);\n                        });\n                    }\n                }\n            }\n        };\n        JSONIntellisense.prototype.getValueSuggestions = function (resource, schema, doc, node, offset, collector) {\n            var _this = this;\n            if (!node) {\n                this.addDefaultSuggestion(schema.schema, collector);\n            }\n            else {\n                var parentKey = null;\n                if (node && (node.type === 'property') && offset > node.colonOffset) {\n                    var valueNode = node.value;\n                    if (valueNode && offset > valueNode.end) {\n                        return; // we are past the value node\n                    }\n                    parentKey = node.key.value;\n                    node = node.parent;\n                }\n                if (node && (parentKey !== null || node.type === 'array')) {\n                    var matchingSchemas = [];\n                    doc.validate(schema.schema, matchingSchemas, node.start);\n                    matchingSchemas.forEach(function (s) {\n                        if (s.node === node && !s.inverted && s.schema) {\n                            if (s.schema.items) {\n                                _this.addDefaultSuggestion(s.schema.items, collector);\n                                _this.addEnumSuggestion(s.schema.items, collector);\n                            }\n                            if (s.schema.properties) {\n                                var propertySchema = s.schema.properties[parentKey];\n                                if (propertySchema) {\n                                    _this.addDefaultSuggestion(propertySchema, collector);\n                                    _this.addEnumSuggestion(propertySchema, collector);\n                                }\n                            }\n                        }\n                    });\n                }\n            }\n        };\n        JSONIntellisense.prototype.addBooleanSuggestion = function (value, collector) {\n            collector.add({ type: this.getSuggestionType('boolean'), label: value ? 'true' : 'false', codeSnippet: this.getTextForEnumValue(value), documentationLabel: '' });\n        };\n        JSONIntellisense.prototype.addEnumSuggestion = function (schema, collector) {\n            var _this = this;\n            if (Array.isArray(schema.enum)) {\n                schema.enum.forEach(function (enm) { return collector.add({ type: _this.getSuggestionType(schema.type), label: _this.getLabelForValue(enm), codeSnippet: _this.getTextForEnumValue(enm), documentationLabel: '' }); });\n            }\n            else if (schema.type === 'boolean') {\n                this.addBooleanSuggestion(true, collector);\n                this.addBooleanSuggestion(false, collector);\n            }\n            if (Array.isArray(schema.allOf)) {\n                schema.allOf.forEach(function (s) { return _this.addEnumSuggestion(s, collector); });\n            }\n            if (Array.isArray(schema.anyOf)) {\n                schema.anyOf.forEach(function (s) { return _this.addEnumSuggestion(s, collector); });\n            }\n            if (Array.isArray(schema.oneOf)) {\n                schema.oneOf.forEach(function (s) { return _this.addEnumSuggestion(s, collector); });\n            }\n        };\n        JSONIntellisense.prototype.addDefaultSuggestion = function (schema, collector) {\n            var _this = this;\n            if (schema.default) {\n                collector.add({\n                    type: this.getSuggestionType(schema.type),\n                    label: this.getLabelForValue(schema.default),\n                    codeSnippet: this.getTextForValue(schema.default),\n                    typeLabel: nls.localize(0, null),\n                });\n            }\n            if (Array.isArray(schema.defaultSnippets)) {\n                schema.defaultSnippets.forEach(function (s) {\n                    collector.add({\n                        type: 'snippet',\n                        label: _this.getLabelForSnippetValue(s.body),\n                        codeSnippet: _this.getTextForSnippetValue(s.body)\n                    });\n                });\n            }\n            if (Array.isArray(schema.allOf)) {\n                schema.allOf.forEach(function (s) { return _this.addDefaultSuggestion(s, collector); });\n            }\n            if (Array.isArray(schema.anyOf)) {\n                schema.anyOf.forEach(function (s) { return _this.addDefaultSuggestion(s, collector); });\n            }\n            if (Array.isArray(schema.oneOf)) {\n                schema.oneOf.forEach(function (s) { return _this.addDefaultSuggestion(s, collector); });\n            }\n        };\n        JSONIntellisense.prototype.getLabelForValue = function (value) {\n            var label = JSON.stringify(value);\n            label = label.replace('{{', '').replace('}}', '');\n            if (label.length > 57) {\n                return label.substr(0, 57).trim() + '...';\n            }\n            return label;\n        };\n        JSONIntellisense.prototype.getLabelForSnippetValue = function (value) {\n            var label = JSON.stringify(value);\n            label = label.replace(/\\{\\{|\\}\\}/g, '');\n            if (label.length > 57) {\n                return label.substr(0, 57).trim() + '...';\n            }\n            return label;\n        };\n        JSONIntellisense.prototype.getTextForValue = function (value) {\n            var text = JSON.stringify(value, null, '\\t');\n            text = text.replace(/[\\\\\\{\\}]/g, '\\\\$&');\n            return text;\n        };\n        JSONIntellisense.prototype.getTextForSnippetValue = function (value) {\n            return JSON.stringify(value, null, '\\t');\n        };\n        JSONIntellisense.prototype.getTextForEnumValue = function (value) {\n            var snippet = JSON.stringify(value, null, '\\t');\n            switch (typeof value) {\n                case 'object':\n                    if (value === null) {\n                        return '{{null}}';\n                    }\n                    return snippet;\n                case 'string':\n                    return '\"{{' + snippet.substr(1, snippet.length - 2) + '}}\"';\n                case 'number':\n                case 'integer':\n                case 'boolean':\n                    return '{{' + snippet + '}}';\n            }\n            return snippet;\n        };\n        JSONIntellisense.prototype.getSuggestionType = function (type) {\n            if (Array.isArray(type)) {\n                var array = type;\n                type = array.length > 0 ? array[0] : null;\n            }\n            if (!type) {\n                return 'text';\n            }\n            switch (type) {\n                case 'string': return 'text';\n                case 'object': return 'module';\n                case 'property': return 'property';\n                default: return 'value';\n            }\n        };\n        JSONIntellisense.prototype.getTextForMatchingNode = function (node, modelMirror) {\n            switch (node.type) {\n                case 'array':\n                    return '[]';\n                case 'object':\n                    return '{}';\n                default:\n                    var content = modelMirror.getValueInRange(modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start));\n                    return content;\n            }\n        };\n        JSONIntellisense.prototype.getTextForProperty = function (key, propertySchema, addValue, isLast) {\n            var result = this.getTextForValue(key);\n            if (!addValue) {\n                return result;\n            }\n            result += ': ';\n            var defaultVal = propertySchema.default;\n            if (!Types.isUndefined(defaultVal)) {\n                result = result + this.getTextForEnumValue(defaultVal);\n            }\n            else if (propertySchema.enum && propertySchema.enum.length > 0) {\n                result = result + this.getTextForEnumValue(propertySchema.enum[0]);\n            }\n            else {\n                switch (propertySchema.type) {\n                    case 'boolean':\n                        result += '{{false}}';\n                        break;\n                    case 'string':\n                        result += '\"{{}}\"';\n                        break;\n                    case 'object':\n                        result += '{\\n\\t{{}}\\n}';\n                        break;\n                    case 'array':\n                        result += '[\\n\\t{{}}\\n]';\n                        break;\n                    case 'number':\n                    case 'integer':\n                        result += '{{0}}';\n                        break;\n                    case 'null':\n                        result += '{{null}}';\n                        break;\n                    default:\n                        return result;\n                }\n            }\n            if (!isLast) {\n                result += ',';\n            }\n            return result;\n        };\n        JSONIntellisense.prototype.getTextForSimilarProperty = function (key, templateValue) {\n            return this.getTextForValue(key);\n        };\n        return JSONIntellisense;\n    }());\n    exports.JSONIntellisense = JSONIntellisense;\n});\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\ndefine(__m[24], __M([1,0,4,25,5]), function (require, exports, Strings, nls, request_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var BowerJSONContribution = (function () {\n        function BowerJSONContribution(requestService) {\n            this.topRanked = ['twitter', 'bootstrap', 'angular-1.1.6', 'angular-latest', 'angulerjs', 'd3', 'myjquery', 'jq', 'abcdef1234567890', 'jQuery', 'jquery-1.11.1', 'jquery',\n                'sushi-vanilla-x-data', 'font-awsome', 'Font-Awesome', 'font-awesome', 'fontawesome', 'html5-boilerplate', 'impress.js', 'homebrew',\n                'backbone', 'moment1', 'momentjs', 'moment', 'linux', 'animate.css', 'animate-css', 'reveal.js', 'jquery-file-upload', 'blueimp-file-upload', 'threejs', 'express', 'chosen',\n                'normalize-css', 'normalize.css', 'semantic', 'semantic-ui', 'Semantic-UI', 'modernizr', 'underscore', 'underscore1',\n                'material-design-icons', 'ionic', 'chartjs', 'Chart.js', 'nnnick-chartjs', 'select2-ng', 'select2-dist', 'phantom', 'skrollr', 'scrollr', 'less.js', 'leancss', 'parser-lib',\n                'hui', 'bootstrap-languages', 'async', 'gulp', 'jquery-pjax', 'coffeescript', 'hammer.js', 'ace', 'leaflet', 'jquery-mobile', 'sweetalert', 'typeahead.js', 'soup', 'typehead.js',\n                'sails', 'codeigniter2'];\n            this.requestService = requestService;\n        }\n        BowerJSONContribution.prototype.isBowerFile = function (resource) {\n            var path = resource.path;\n            return Strings.endsWith(path, '/bower.json') || Strings.endsWith(path, '/.bower.json');\n        };\n        BowerJSONContribution.prototype.collectDefaultSuggestions = function (resource, result) {\n            if (this.isBowerFile(resource)) {\n                var defaultValue = {\n                    'name': '{{name}}',\n                    'description': '{{description}}',\n                    'authors': ['{{author}}'],\n                    'version': '{{1.0.0}}',\n                    'main': '{{pathToMain}}',\n                    'dependencies': {}\n                };\n                result.add({ type: 'snippet', label: nls.localize(0, null), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\n            }\n            return null;\n        };\n        BowerJSONContribution.prototype.collectPropertySuggestions = function (resource, location, currentWord, addValue, isLast, result) {\n            if (this.isBowerFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']))) {\n                if (currentWord.length > 0) {\n                    var queryUrl = 'https://bower.herokuapp.com/packages/search/' + encodeURIComponent(currentWord);\n                    return this.requestService.makeRequest({\n                        url: queryUrl\n                    }).then(function (success) {\n                        if (success.status === 200) {\n                            try {\n                                var obj = JSON.parse(success.responseText);\n                                if (Array.isArray(obj)) {\n                                    var results = obj;\n                                    for (var i = 0; i < results.length; i++) {\n                                        var name = results[i].name;\n                                        var description = results[i].description || '';\n                                        var codeSnippet = JSON.stringify(name);\n                                        if (addValue) {\n                                            codeSnippet += ': \"{{*}}\"';\n                                            if (!isLast) {\n                                                codeSnippet += ',';\n                                            }\n                                        }\n                                        result.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: description });\n                                    }\n                                    result.setAsIncomplete();\n                                }\n                            }\n                            catch (e) {\n                            }\n                        }\n                        else {\n                            result.error(nls.localize(1, null, success.responseText));\n                            return 0;\n                        }\n                    }, function (error) {\n                        result.error(nls.localize(2, null, error.responseText));\n                        return 0;\n                    });\n                }\n                else {\n                    this.topRanked.forEach(function (name) {\n                        var codeSnippet = JSON.stringify(name);\n                        if (addValue) {\n                            codeSnippet += ': \"{{*}}\"';\n                            if (!isLast) {\n                                codeSnippet += ',';\n                            }\n                        }\n                        result.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\n                    });\n                    result.setAsIncomplete();\n                }\n            }\n            return null;\n        };\n        BowerJSONContribution.prototype.collectValueSuggestions = function (resource, location, currentKey, result) {\n            // not implemented. Could be do done calling the bower command. Waiting for web API: https://github.com/bower/registry/issues/26\n            return null;\n        };\n        BowerJSONContribution.prototype.getInfoContribution = function (resource, location) {\n            if (this.isBowerFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']))) {\n                var pack = location.getSegments()[location.getSegments().length - 1];\n                var htmlContent = [];\n                htmlContent.push({ className: 'type', text: nls.localize(3, null, pack) });\n                var queryUrl = 'https://bower.herokuapp.com/packages/' + encodeURIComponent(pack);\n                return this.requestService.makeRequest({\n                    url: queryUrl\n                }).then(function (success) {\n                    try {\n                        var obj = JSON.parse(success.responseText);\n                        if (obj && obj.url) {\n                            var url = obj.url;\n                            if (Strings.startsWith(url, 'git://')) {\n                                url = url.substring(6);\n                            }\n                            if (Strings.endsWith(url, '.git')) {\n                                url = url.substring(0, url.length - 4);\n                            }\n                            htmlContent.push({ className: 'documentation', text: url });\n                        }\n                    }\n                    catch (e) {\n                    }\n                    return htmlContent;\n                }, function (error) {\n                    return htmlContent;\n                });\n            }\n            return null;\n        };\n        BowerJSONContribution = __decorate([\n            __param(0, request_1.IRequestService)\n        ], BowerJSONContribution);\n        return BowerJSONContribution;\n    }());\n    exports.BowerJSONContribution = BowerJSONContribution;\n});\n\n\n\n\n\n\n\n\n\n\ndefine(__m[26], __M([1,0,4,13,5]), function (require, exports, Strings, nls, request_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var LIMIT = 40;\n    var PackageJSONContribution = (function () {\n        function PackageJSONContribution(requestService) {\n            this.mostDependedOn = ['lodash', 'async', 'underscore', 'request', 'commander', 'express', 'debug', 'chalk', 'colors', 'q', 'coffee-script',\n                'mkdirp', 'optimist', 'through2', 'yeoman-generator', 'moment', 'bluebird', 'glob', 'gulp-util', 'minimist', 'cheerio', 'jade', 'redis', 'node-uuid',\n                'socket', 'io', 'uglify-js', 'winston', 'through', 'fs-extra', 'handlebars', 'body-parser', 'rimraf', 'mime', 'semver', 'mongodb', 'jquery',\n                'grunt', 'connect', 'yosay', 'underscore', 'string', 'xml2js', 'ejs', 'mongoose', 'marked', 'extend', 'mocha', 'superagent', 'js-yaml', 'xtend',\n                'shelljs', 'gulp', 'yargs', 'browserify', 'minimatch', 'react', 'less', 'prompt', 'inquirer', 'ws', 'event-stream', 'inherits', 'mysql', 'esprima',\n                'jsdom', 'stylus', 'when', 'readable-stream', 'aws-sdk', 'concat-stream', 'chai', 'promise', 'wrench'];\n            this.requestService = requestService;\n        }\n        PackageJSONContribution.prototype.isPackageJSONFile = function (resource) {\n            var path = resource.path;\n            return Strings.endsWith(path, '/package.json');\n        };\n        PackageJSONContribution.prototype.collectDefaultSuggestions = function (resource, result) {\n            if (this.isPackageJSONFile(resource)) {\n                var defaultValue = {\n                    'name': '{{name}}',\n                    'description': '{{description}}',\n                    'author': '{{author}}',\n                    'version': '{{1.0.0}}',\n                    'main': '{{pathToMain}}',\n                    'dependencies': {}\n                };\n                result.add({ type: 'module', label: nls.localize(0, null), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\n            }\n            return null;\n        };\n        PackageJSONContribution.prototype.collectPropertySuggestions = function (resource, location, currentWord, addValue, isLast, result) {\n            if (this.isPackageJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']) || location.matches(['optionalDependencies']) || location.matches(['peerDependencies']))) {\n                var queryUrl;\n                if (currentWord.length > 0) {\n                    queryUrl = 'https://skimdb.npmjs.com/registry/_design/app/_view/browseAll?group_level=1&limit=' + LIMIT + '&start_key=%5B%22' + encodeURIComponent(currentWord) + '%22%5D&end_key=%5B%22' + encodeURIComponent(currentWord + 'z') + '%22,%7B%7D%5D';\n                    return this.requestService.makeRequest({\n                        url: queryUrl\n                    }).then(function (success) {\n                        if (success.status === 200) {\n                            try {\n                                var obj = JSON.parse(success.responseText);\n                                if (obj && Array.isArray(obj.rows)) {\n                                    var results = obj.rows;\n                                    for (var i = 0; i < results.length; i++) {\n                                        var keys = results[i].key;\n                                        if (Array.isArray(keys) && keys.length > 0) {\n                                            var name = keys[0];\n                                            var codeSnippet = JSON.stringify(name);\n                                            if (addValue) {\n                                                codeSnippet += ': \"{{*}}\"';\n                                                if (!isLast) {\n                                                    codeSnippet += ',';\n                                                }\n                                            }\n                                            result.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\n                                        }\n                                    }\n                                    if (results.length === LIMIT) {\n                                        result.setAsIncomplete();\n                                    }\n                                }\n                            }\n                            catch (e) {\n                            }\n                        }\n                        else {\n                            result.error(nls.localize(1, null, success.responseText));\n                            return 0;\n                        }\n                    }, function (error) {\n                        result.error(nls.localize(2, null, error.responseText));\n                        return 0;\n                    });\n                }\n                else {\n                    this.mostDependedOn.forEach(function (name) {\n                        var codeSnippet = JSON.stringify(name);\n                        if (addValue) {\n                            codeSnippet += ': \"{{*}}\"';\n                            if (!isLast) {\n                                codeSnippet += ',';\n                            }\n                        }\n                        result.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\n                    });\n                    result.setAsIncomplete();\n                }\n            }\n            return null;\n        };\n        PackageJSONContribution.prototype.collectValueSuggestions = function (resource, location, currentKey, result) {\n            if (this.isPackageJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']) || location.matches(['optionalDependencies']) || location.matches(['peerDependencies']))) {\n                var queryUrl = 'http://registry.npmjs.org/' + encodeURIComponent(currentKey) + '/latest';\n                return this.requestService.makeRequest({\n                    url: queryUrl\n                }).then(function (success) {\n                    try {\n                        var obj = JSON.parse(success.responseText);\n                        if (obj && obj.version) {\n                            var version = obj.version;\n                            var name = JSON.stringify(version);\n                            result.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize(3, null) });\n                            name = JSON.stringify('^' + version);\n                            result.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize(4, null) });\n                            name = JSON.stringify('~' + version);\n                            result.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize(5, null) });\n                        }\n                    }\n                    catch (e) {\n                    }\n                    return 0;\n                }, function (error) {\n                    return 0;\n                });\n            }\n            return null;\n        };\n        PackageJSONContribution.prototype.getInfoContribution = function (resource, location) {\n            if (this.isPackageJSONFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']) || location.matches(['optionalDependencies', '*']) || location.matches(['peerDependencies', '*']))) {\n                var pack = location.getSegments()[location.getSegments().length - 1];\n                var htmlContent = [];\n                htmlContent.push({ className: 'type', text: nls.localize(6, null, pack) });\n                var queryUrl = 'http://registry.npmjs.org/' + encodeURIComponent(pack) + '/latest';\n                return this.requestService.makeRequest({\n                    url: queryUrl\n                }).then(function (success) {\n                    try {\n                        var obj = JSON.parse(success.responseText);\n                        if (obj) {\n                            if (obj.description) {\n                                htmlContent.push({ className: 'documentation', text: obj.description });\n                            }\n                            if (obj.version) {\n                                htmlContent.push({ className: 'documentation', text: nls.localize(7, null, obj.version) });\n                            }\n                        }\n                    }\n                    catch (e) {\n                    }\n                    return htmlContent;\n                }, function (error) {\n                    return htmlContent;\n                });\n            }\n            return null;\n        };\n        PackageJSONContribution = __decorate([\n            __param(0, request_1.IRequestService)\n        ], PackageJSONContribution);\n        return PackageJSONContribution;\n    }());\n    exports.PackageJSONContribution = PackageJSONContribution;\n});\n\n\n\n\n\n\n\n\n\n\ndefine(__m[27], __M([1,0,4,14,5]), function (require, exports, Strings, nls, request_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var LIMIT = 40;\n    var ProjectJSONContribution = (function () {\n        function ProjectJSONContribution(requestService) {\n            this.requestService = requestService;\n        }\n        ProjectJSONContribution.prototype.isProjectJSONFile = function (resource) {\n            var path = resource.path;\n            return Strings.endsWith(path, '/project.json');\n        };\n        ProjectJSONContribution.prototype.collectDefaultSuggestions = function (resource, result) {\n            if (this.isProjectJSONFile(resource)) {\n                var defaultValue = {\n                    'version': '{{1.0.0-*}}',\n                    'dependencies': {},\n                    'frameworks': {\n                        'dnx451': {},\n                        'dnxcore50': {}\n                    }\n                };\n                result.add({ type: 'snippet', label: nls.localize(0, null), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\n            }\n            return null;\n        };\n        ProjectJSONContribution.prototype.collectPropertySuggestions = function (resource, location, currentWord, addValue, isLast, result) {\n            if (this.isProjectJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['frameworks', '*', 'dependencies']) || location.matches(['frameworks', '*', 'frameworkAssemblies']))) {\n                var queryUrl;\n                if (currentWord.length > 0) {\n                    queryUrl = 'https://www.nuget.org/api/v2/Packages?'\n                        + '$filter=Id%20ge%20\\''\n                        + encodeURIComponent(currentWord)\n                        + '\\'%20and%20Id%20lt%20\\''\n                        + encodeURIComponent(currentWord + 'z')\n                        + '\\'%20and%20IsAbsoluteLatestVersion%20eq%20true'\n                        + '&$select=Id,Version,Description&$format=json&$top=' + LIMIT;\n                }\n                else {\n                    queryUrl = 'https://www.nuget.org/api/v2/Packages?'\n                        + '$filter=IsAbsoluteLatestVersion%20eq%20true'\n                        + '&$orderby=DownloadCount%20desc&$top=' + LIMIT\n                        + '&$select=Id,Version,DownloadCount,Description&$format=json';\n                }\n                return this.requestService.makeRequest({\n                    url: queryUrl\n                }).then(function (success) {\n                    if (success.status === 200) {\n                        try {\n                            var obj = JSON.parse(success.responseText);\n                            if (Array.isArray(obj.d)) {\n                                var results = obj.d;\n                                for (var i = 0; i < results.length; i++) {\n                                    var curr = results[i];\n                                    var name = curr.Id;\n                                    var version = curr.Version;\n                                    if (name) {\n                                        var documentation = curr.Description;\n                                        var typeLabel = curr.Version;\n                                        var codeSnippet = JSON.stringify(name);\n                                        if (addValue) {\n                                            codeSnippet += ': \"{{' + version + '}}\"';\n                                            if (!isLast) {\n                                                codeSnippet += ',';\n                                            }\n                                        }\n                                        result.add({ type: 'property', label: name, codeSnippet: codeSnippet, typeLabel: typeLabel, documentationLabel: documentation });\n                                    }\n                                }\n                                if (results.length === LIMIT) {\n                                    result.setAsIncomplete();\n                                }\n                            }\n                        }\n                        catch (e) {\n                        }\n                    }\n                    else {\n                        result.error(nls.localize(1, null, success.responseText));\n                        return 0;\n                    }\n                }, function (error) {\n                    result.error(nls.localize(2, null, error.responseText));\n                    return 0;\n                });\n            }\n            return null;\n        };\n        ProjectJSONContribution.prototype.collectValueSuggestions = function (resource, location, currentKey, result) {\n            if (this.isProjectJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['frameworks', '*', 'dependencies']) || location.matches(['frameworks', '*', 'frameworkAssemblies']))) {\n                var queryUrl = 'https://www.myget.org/F/aspnetrelease/api/v2/Packages?'\n                    + '$filter=Id%20eq%20\\''\n                    + encodeURIComponent(currentKey)\n                    + '\\'&$select=Version,IsAbsoluteLatestVersion&$format=json&$top=' + LIMIT;\n                return this.requestService.makeRequest({\n                    url: queryUrl\n                }).then(function (success) {\n                    try {\n                        var obj = JSON.parse(success.responseText);\n                        if (Array.isArray(obj.d)) {\n                            var results = obj.d;\n                            for (var i = 0; i < results.length; i++) {\n                                var curr = results[i];\n                                var version = curr.Version;\n                                if (version) {\n                                    var name = JSON.stringify(version);\n                                    var isLatest = curr.IsAbsoluteLatestVersion === 'true';\n                                    var label = name;\n                                    var documentationLabel = '';\n                                    if (isLatest) {\n                                        documentationLabel = nls.localize(3, null);\n                                    }\n                                    result.add({ type: 'class', label: label, codeSnippet: name, documentationLabel: documentationLabel });\n                                }\n                            }\n                            if (results.length === LIMIT) {\n                                result.setAsIncomplete();\n                            }\n                        }\n                    }\n                    catch (e) {\n                    }\n                    return 0;\n                }, function (error) {\n                    return 0;\n                });\n            }\n            return null;\n        };\n        ProjectJSONContribution.prototype.getInfoContribution = function (resource, location) {\n            if (this.isProjectJSONFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['frameworks', '*', 'dependencies', '*']) || location.matches(['frameworks', '*', 'frameworkAssemblies', '*']))) {\n                var pack = location.getSegments()[location.getSegments().length - 1];\n                var htmlContent = [];\n                htmlContent.push({ className: 'type', text: nls.localize(4, null, pack) });\n                var queryUrl = 'https://www.myget.org/F/aspnetrelease/api/v2/Packages?'\n                    + '$filter=Id%20eq%20\\''\n                    + encodeURIComponent(pack)\n                    + '\\'%20and%20IsAbsoluteLatestVersion%20eq%20true'\n                    + '&$select=Version,Description&$format=json&$top=5';\n                return this.requestService.makeRequest({\n                    url: queryUrl\n                }).then(function (success) {\n                    var content = success.responseText;\n                    if (content) {\n                        try {\n                            var obj = JSON.parse(content);\n                            if (obj.d && obj.d[0]) {\n                                var res = obj.d[0];\n                                if (res.Description) {\n                                    htmlContent.push({ className: 'documentation', text: res.Description });\n                                }\n                                if (res.Version) {\n                                    htmlContent.push({ className: 'documentation', text: nls.localize(5, null, res.Version) });\n                                }\n                            }\n                        }\n                        catch (e) {\n                        }\n                    }\n                    return htmlContent;\n                }, function (error) {\n                    return htmlContent;\n                });\n            }\n            return null;\n        };\n        ProjectJSONContribution = __decorate([\n            __param(0, request_1.IRequestService)\n        ], ProjectJSONContribution);\n        return ProjectJSONContribution;\n    }());\n    exports.ProjectJSONContribution = ProjectJSONContribution;\n});\n\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n\n\n\n\n\n\n\n\ndefine(__m[28], __M([1,0,16,35,7,18,4,31,6,9,29,5,19,33]), function (require, exports, nls, Objects, Json, http, Strings, uri_1, Types, WinJS, resourceService_1, request_1, workspace_1, lifecycle_1) {\n    'use strict';\n    var FilePatternAssociation = (function () {\n        function FilePatternAssociation(pattern) {\n            this.combinedSchemaId = 'local://combinedSchema/' + encodeURIComponent(pattern);\n            try {\n                this.patternRegExp = new RegExp(Strings.convertSimple2RegExpPattern(pattern) + '$');\n            }\n            catch (e) {\n                // invalid pattern\n                this.patternRegExp = null;\n            }\n            this.schemas = [];\n            this.combinedSchema = null;\n        }\n        FilePatternAssociation.prototype.addSchema = function (id) {\n            this.schemas.push(id);\n            this.combinedSchema = null;\n        };\n        FilePatternAssociation.prototype.matchesPattern = function (fileName) {\n            return this.patternRegExp && this.patternRegExp.test(fileName);\n        };\n        FilePatternAssociation.prototype.getCombinedSchema = function (service) {\n            if (!this.combinedSchema) {\n                this.combinedSchema = service.createCombinedSchema(this.combinedSchemaId, this.schemas);\n            }\n            return this.combinedSchema;\n        };\n        return FilePatternAssociation;\n    }());\n    var SchemaHandle = (function () {\n        function SchemaHandle(service, url, unresolvedSchemaContent) {\n            this.service = service;\n            this.url = url;\n            if (unresolvedSchemaContent) {\n                this.unresolvedSchema = WinJS.TPromise.as(new UnresolvedSchema(unresolvedSchemaContent));\n            }\n        }\n        SchemaHandle.prototype.getUnresolvedSchema = function () {\n            if (!this.unresolvedSchema) {\n                this.unresolvedSchema = this.service.loadSchema(this.url);\n            }\n            return this.unresolvedSchema;\n        };\n        SchemaHandle.prototype.getResolvedSchema = function () {\n            var _this = this;\n            if (!this.resolvedSchema) {\n                this.resolvedSchema = this.getUnresolvedSchema().then(function (unresolved) {\n                    return _this.service.resolveSchemaContent(unresolved);\n                });\n            }\n            return this.resolvedSchema;\n        };\n        SchemaHandle.prototype.clearSchema = function () {\n            this.resolvedSchema = null;\n            this.unresolvedSchema = null;\n        };\n        return SchemaHandle;\n    }());\n    var UnresolvedSchema = (function () {\n        function UnresolvedSchema(schema, errors) {\n            if (errors === void 0) { errors = []; }\n            this.schema = schema;\n            this.errors = errors;\n        }\n        return UnresolvedSchema;\n    }());\n    exports.UnresolvedSchema = UnresolvedSchema;\n    var ResolvedSchema = (function () {\n        function ResolvedSchema(schema, errors) {\n            if (errors === void 0) { errors = []; }\n            this.schema = schema;\n            this.errors = errors;\n        }\n        ResolvedSchema.prototype.getSection = function (path) {\n            return this.getSectionRecursive(path, this.schema);\n        };\n        ResolvedSchema.prototype.getSectionRecursive = function (path, schema) {\n            var _this = this;\n            if (!schema || path.length === 0) {\n                return schema;\n            }\n            var next = path.shift();\n            if (schema.properties && schema.properties[next]) {\n                return this.getSectionRecursive(path, schema.properties[next]);\n            }\n            else if (Types.isObject(schema.patternProperties)) {\n                Object.keys(schema.patternProperties).forEach(function (pattern) {\n                    var regex = new RegExp(pattern);\n                    if (regex.test(next)) {\n                        return _this.getSectionRecursive(path, schema.patternProperties[pattern]);\n                    }\n                });\n            }\n            else if (Types.isObject(schema.additionalProperties)) {\n                return this.getSectionRecursive(path, schema.additionalProperties);\n            }\n            else if (next.match('[0-9]+')) {\n                if (Types.isObject(schema.items)) {\n                    return this.getSectionRecursive(path, schema.items);\n                }\n                else if (Array.isArray(schema.items)) {\n                    try {\n                        var index = parseInt(next, 10);\n                        if (schema.items[index]) {\n                            return this.getSectionRecursive(path, schema.items[index]);\n                        }\n                        return null;\n                    }\n                    catch (e) {\n                        return null;\n                    }\n                }\n            }\n            return null;\n        };\n        return ResolvedSchema;\n    }());\n    exports.ResolvedSchema = ResolvedSchema;\n    var JSONSchemaService = (function () {\n        function JSONSchemaService(requestService, contextService, resourceService) {\n            var _this = this;\n            this.requestService = requestService;\n            this.contextService = contextService;\n            this.callOnDispose = [];\n            if (resourceService) {\n                this.callOnDispose.push(resourceService.addListener2_(resourceService_1.ResourceEvents.CHANGED, function (e) { return _this.onResourceChange(e); }));\n            }\n            this.contributionSchemas = {};\n            this.contributionAssociations = {};\n            this.schemasById = {};\n            this.filePatternAssociations = [];\n            this.filePatternAssociationById = {};\n        }\n        JSONSchemaService.prototype.dispose = function () {\n            this.callOnDispose = lifecycle_1.dispose(this.callOnDispose);\n        };\n        JSONSchemaService.prototype.onResourceChange = function (e) {\n            var url = e.url.toString();\n            var schemaFile = this.schemasById[url];\n            if (schemaFile) {\n                schemaFile.clearSchema();\n            }\n        };\n        JSONSchemaService.prototype.normalizeId = function (id) {\n            if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n                return id.substring(0, id.length - 1);\n            }\n            return id;\n        };\n        JSONSchemaService.prototype.setSchemaContributions = function (schemaContributions) {\n            if (schemaContributions.schemas) {\n                var schemas = schemaContributions.schemas;\n                for (var id in schemas) {\n                    id = this.normalizeId(id);\n                    this.contributionSchemas[id] = this.addSchemaHandle(id, schemas[id]);\n                }\n            }\n        };\n        JSONSchemaService.prototype.addSchemaHandle = function (id, unresolvedSchemaContent) {\n            var schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n            this.schemasById[id] = schemaHandle;\n            return schemaHandle;\n        };\n        JSONSchemaService.prototype.getOrAddSchemaHandle = function (id, unresolvedSchemaContent) {\n            return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n        };\n        JSONSchemaService.prototype.getOrAddFilePatternAssociation = function (pattern) {\n            var fpa = this.filePatternAssociationById[pattern];\n            if (!fpa) {\n                fpa = new FilePatternAssociation(pattern);\n                this.filePatternAssociationById[pattern] = fpa;\n                this.filePatternAssociations.push(fpa);\n            }\n            return fpa;\n        };\n        JSONSchemaService.prototype.registerExternalSchema = function (uri, filePatterns, unresolvedSchemaContent) {\n            var _this = this;\n            if (filePatterns === void 0) { filePatterns = null; }\n            var id = this.normalizeId(uri);\n            if (filePatterns) {\n                filePatterns.forEach(function (pattern) {\n                    _this.getOrAddFilePatternAssociation(pattern).addSchema(uri);\n                });\n            }\n            return unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n        };\n        JSONSchemaService.prototype.clearExternalSchemas = function () {\n            var _this = this;\n            this.schemasById = {};\n            this.filePatternAssociations = [];\n            this.filePatternAssociationById = {};\n            for (var id in this.contributionSchemas) {\n                this.schemasById[id] = this.contributionSchemas[id];\n            }\n            for (var pattern in this.contributionAssociations) {\n                var fpa = this.getOrAddFilePatternAssociation(pattern);\n                this.contributionAssociations[pattern].forEach(function (schemaId) {\n                    var id = _this.normalizeId(schemaId);\n                    fpa.addSchema(id);\n                });\n            }\n        };\n        JSONSchemaService.prototype.getResolvedSchema = function (schemaId) {\n            var id = this.normalizeId(schemaId);\n            var schemaHandle = this.schemasById[id];\n            if (schemaHandle) {\n                return schemaHandle.getResolvedSchema();\n            }\n            return WinJS.TPromise.as(null);\n        };\n        JSONSchemaService.prototype.loadSchema = function (url) {\n            return this.requestService.makeRequest({ url: url }).then(function (request) {\n                var content = request.responseText;\n                if (!content) {\n                    var errorMessage = nls.localize(0, null, toDisplayString(url));\n                    return new UnresolvedSchema({}, [errorMessage]);\n                }\n                var schemaContent = {};\n                var jsonErrors = [];\n                schemaContent = Json.parse(content, jsonErrors);\n                var errors = jsonErrors.length ? [nls.localize(1, null, toDisplayString(url), Json.getParseErrorMessage(jsonErrors[0].error))] : [];\n                return new UnresolvedSchema(schemaContent, errors);\n            }, function (error) {\n                var errorMessage = nls.localize(2, null, toDisplayString(url), error.responseText || http.getErrorStatusDescription(error.status) || error.toString());\n                return new UnresolvedSchema({}, [errorMessage]);\n            });\n        };\n        JSONSchemaService.prototype.resolveSchemaContent = function (schemaToResolve) {\n            var _this = this;\n            var resolveErrors = schemaToResolve.errors.slice(0);\n            var schema = schemaToResolve.schema;\n            var findSection = function (schema, path) {\n                if (!path) {\n                    return schema;\n                }\n                var current = schema;\n                path.substr(1).split('/').some(function (part) {\n                    current = current[part];\n                    return !current;\n                });\n                return current;\n            };\n            var resolveLink = function (node, linkedSchema, linkPath) {\n                var section = findSection(linkedSchema, linkPath);\n                if (typeof section === 'object') {\n                    Objects.mixin(node, section, false);\n                }\n                else {\n                    resolveErrors.push(nls.localize(3, null, linkPath, linkedSchema.id));\n                }\n                delete node.$ref;\n            };\n            var resolveExternalLink = function (node, uri, linkPath) {\n                return _this.getOrAddSchemaHandle(uri).getUnresolvedSchema().then(function (unresolvedSchema) {\n                    if (unresolvedSchema.errors.length) {\n                        var loc = linkPath ? uri + '#' + linkPath : uri;\n                        resolveErrors.push(nls.localize(4, null, loc, unresolvedSchema.errors[0]));\n                    }\n                    resolveLink(node, unresolvedSchema.schema, linkPath);\n                    return resolveRefs(node, unresolvedSchema.schema);\n                });\n            };\n            var resolveRefs = function (node, parentSchema) {\n                var toWalk = [node];\n                var seen = [];\n                var openPromises = [];\n                var collectEntries = function () {\n                    var entries = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        entries[_i - 0] = arguments[_i];\n                    }\n                    for (var _a = 0, entries_1 = entries; _a < entries_1.length; _a++) {\n                        var entry = entries_1[_a];\n                        if (typeof entry === 'object') {\n                            toWalk.push(entry);\n                        }\n                    }\n                };\n                var collectMapEntries = function () {\n                    var maps = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        maps[_i - 0] = arguments[_i];\n                    }\n                    for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\n                        var map = maps_1[_a];\n                        if (typeof map === 'object') {\n                            for (var key in map) {\n                                var entry = map[key];\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                };\n                var collectArrayEntries = function () {\n                    var arrays = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        arrays[_i - 0] = arguments[_i];\n                    }\n                    for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n                        var array = arrays_1[_a];\n                        if (Array.isArray(array)) {\n                            toWalk.push.apply(toWalk, array);\n                        }\n                    }\n                };\n                while (toWalk.length) {\n                    var next = toWalk.pop();\n                    if (seen.indexOf(next) >= 0) {\n                        continue;\n                    }\n                    seen.push(next);\n                    if (next.$ref) {\n                        var segments = next.$ref.split('#', 2);\n                        if (segments[0].length > 0) {\n                            openPromises.push(resolveExternalLink(next, segments[0], segments[1]));\n                            continue;\n                        }\n                        else {\n                            resolveLink(next, parentSchema, segments[1]);\n                        }\n                    }\n                    collectEntries(next.items, next.additionalProperties, next.not);\n                    collectMapEntries(next.definitions, next.properties, next.patternProperties, next.dependencies);\n                    collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.items);\n                }\n                return WinJS.Promise.join(openPromises);\n            };\n            return resolveRefs(schema, schema).then(function (_) { return new ResolvedSchema(schema, resolveErrors); });\n        };\n        JSONSchemaService.prototype.getSchemaForResource = function (resource, document) {\n            // first use $schema if present\n            if (document && document.root && document.root.type === 'object') {\n                var schemaProperties = document.root.properties.filter(function (p) { return (p.key.value === '$schema') && !!p.value; });\n                if (schemaProperties.length > 0) {\n                    var schemeId = schemaProperties[0].value.getValue();\n                    if (!Strings.startsWith(schemeId, 'http://') && !Strings.startsWith(schemeId, 'https://') && !Strings.startsWith(schemeId, 'file://')) {\n                        var resourceURL = this.contextService.toResource(schemeId);\n                        if (resourceURL) {\n                            schemeId = resourceURL.toString();\n                        }\n                    }\n                    if (schemeId) {\n                        var id = this.normalizeId(schemeId);\n                        return this.getOrAddSchemaHandle(id).getResolvedSchema();\n                    }\n                }\n            }\n            // then check for matching file names, last to first\n            for (var i = this.filePatternAssociations.length - 1; i >= 0; i--) {\n                var entry = this.filePatternAssociations[i];\n                if (entry.matchesPattern(resource)) {\n                    return entry.getCombinedSchema(this).getResolvedSchema();\n                }\n            }\n            return WinJS.TPromise.as(null);\n        };\n        JSONSchemaService.prototype.createCombinedSchema = function (combinedSchemaId, schemaIds) {\n            if (schemaIds.length === 1) {\n                return this.getOrAddSchemaHandle(schemaIds[0]);\n            }\n            else {\n                var combinedSchema = {\n                    allOf: schemaIds.map(function (schemaId) { return ({ $ref: schemaId }); })\n                };\n                return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n            }\n        };\n        JSONSchemaService = __decorate([\n            __param(0, request_1.IRequestService),\n            __param(1, workspace_1.IWorkspaceContextService),\n            __param(2, resourceService_1.IResourceService)\n        ], JSONSchemaService);\n        return JSONSchemaService;\n    }());\n    exports.JSONSchemaService = JSONSchemaService;\n    function toDisplayString(url) {\n        try {\n            var uri = uri_1.default.parse(url);\n            if (uri.scheme === 'file') {\n                return uri.fsPath;\n            }\n        }\n        catch (e) {\n        }\n        return url;\n    }\n});\n\n\n\n\n\n\n\n\n\n\ndefine(__m[34], __M([1,0,30,36,8,20,28,21,9,4,27,26,24,11,23,37,5,19,29,38,39,40]), function (require, exports, severity_1, Modes, Parser, JSONFormatter, SchemaService, JSONIntellisense, WinJS, Strings, ProjectJSONContribution, PackageJSONContribution, BowerJSONContribution, GlobPatternContribution, errors, markers_1, request_1, workspace_1, resourceService_1, instantiation_1, suggestSupport_1, validationHelper_1) {\n    /*---------------------------------------------------------------------------------------------\n     *  Copyright (c) Microsoft Corporation. All rights reserved.\n     *  Licensed under the MIT License. See License.txt in the project root for license information.\n     *--------------------------------------------------------------------------------------------*/\n    'use strict';\n    var JSONWorker = (function () {\n        function JSONWorker(modeId, resourceService, markerService, requestService, contextService, instantiationService) {\n            var _this = this;\n            this._modeId = modeId;\n            this.resourceService = resourceService;\n            this.markerService = markerService;\n            this._validationHelper = new validationHelper_1.ValidationHelper(this.resourceService, this._modeId, function (toValidate) { return _this.doValidate(toValidate); });\n            this.requestService = requestService;\n            this.contextService = contextService;\n            this.schemaService = instantiationService.createInstance(SchemaService.JSONSchemaService);\n            this.contributions = [\n                instantiationService.createInstance(ProjectJSONContribution.ProjectJSONContribution),\n                instantiationService.createInstance(PackageJSONContribution.PackageJSONContribution),\n                instantiationService.createInstance(BowerJSONContribution.BowerJSONContribution),\n                instantiationService.createInstance(GlobPatternContribution.GlobPatternContribution)\n            ];\n            this.jsonIntellisense = new JSONIntellisense.JSONIntellisense(this.schemaService, this.requestService, this.contributions);\n        }\n        JSONWorker.prototype.navigateValueSet = function (resource, range, up) {\n            var _this = this;\n            var modelMirror = this.resourceService.get(resource);\n            var offset = modelMirror.getOffsetFromPosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n            var parser = new Parser.JSONParser();\n            var config = new Parser.JSONDocumentConfig();\n            config.ignoreDanglingComma = true;\n            var doc = parser.parse(modelMirror.getValue(), config);\n            var node = doc.getNodeFromOffsetEndInclusive(offset);\n            if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n                return this.schemaService.getSchemaForResource(resource.toString(), doc).then(function (schema) {\n                    if (schema) {\n                        var proposals = [];\n                        var proposed = {};\n                        var collector = {\n                            add: function (suggestion) {\n                                if (!proposed[suggestion.label]) {\n                                    proposed[suggestion.label] = true;\n                                    proposals.push(suggestion);\n                                }\n                            },\n                            setAsIncomplete: function () { },\n                            error: function (message) {\n                                errors.onUnexpectedError(message);\n                            }\n                        };\n                        _this.jsonIntellisense.getValueSuggestions(resource, schema, doc, node.parent, node.start, collector);\n                        var range = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n                        var text = modelMirror.getValueInRange(range);\n                        for (var i = 0, len = proposals.length; i < len; i++) {\n                            if (Strings.equalsIgnoreCase(proposals[i].label, text)) {\n                                var nextIdx = i;\n                                if (up) {\n                                    nextIdx = (i + 1) % len;\n                                }\n                                else {\n                                    nextIdx = i - 1;\n                                    if (nextIdx < 0) {\n                                        nextIdx = len - 1;\n                                    }\n                                }\n                                return {\n                                    value: proposals[nextIdx].label,\n                                    range: range\n                                };\n                            }\n                        }\n                        return null;\n                    }\n                });\n            }\n            return null;\n        };\n        /**\n         * @return true if you want to revalidate your models\n         */\n        JSONWorker.prototype._doConfigure = function (options) {\n            var _this = this;\n            if (options && options.schemas) {\n                this.schemaService.clearExternalSchemas();\n                options.schemas.forEach(function (schema) {\n                    if (schema.url && (schema.fileMatch || schema.schema)) {\n                        var url = schema.url;\n                        if (!Strings.startsWith(url, 'http://') && !Strings.startsWith(url, 'https://') && !Strings.startsWith(url, 'file://')) {\n                            var resourceURL = _this.contextService.toResource(url);\n                            if (resourceURL) {\n                                url = resourceURL.toString();\n                            }\n                        }\n                        if (url) {\n                            _this.schemaService.registerExternalSchema(url, schema.fileMatch, schema.schema);\n                        }\n                    }\n                    else if (schema.filePattern && schema.schemaPath) {\n                        var url = _this.contextService.toResource(schema.schemaPath).toString();\n                        var patterns = schema.filePattern ? [schema.filePattern] : [];\n                        _this.schemaService.registerExternalSchema(url, patterns);\n                    }\n                });\n            }\n            this._validationHelper.triggerDueToConfigurationChange();\n            return WinJS.TPromise.as(void 0);\n        };\n        JSONWorker.prototype.setSchemaContributions = function (contributions) {\n            this.schemaService.setSchemaContributions(contributions);\n            return WinJS.TPromise.as(true);\n        };\n        JSONWorker.prototype.enableValidator = function () {\n            this._validationHelper.enable();\n            return WinJS.TPromise.as(null);\n        };\n        JSONWorker.prototype.doValidate = function (resources) {\n            for (var i = 0; i < resources.length; i++) {\n                this.doValidate1(resources[i]);\n            }\n        };\n        JSONWorker.prototype.doValidate1 = function (resource) {\n            var _this = this;\n            var modelMirror = this.resourceService.get(resource);\n            var parser = new Parser.JSONParser();\n            var content = modelMirror.getValue();\n            if (content.length === 0) {\n                // ignore empty content, no marker can be set anyway\n                return;\n            }\n            var result = parser.parse(content);\n            this.schemaService.getSchemaForResource(resource.toString(), result).then(function (schema) {\n                if (schema) {\n                    if (schema.errors.length && result.root) {\n                        var property = result.root.type === 'object' ? result.root.getFirstProperty('$schema') : null;\n                        if (property) {\n                            var node = property.value || property;\n                            result.warnings.push({ location: { start: node.start, end: node.end }, message: schema.errors[0] });\n                        }\n                        else {\n                            result.warnings.push({ location: { start: result.root.start, end: result.root.start + 1 }, message: schema.errors[0] });\n                        }\n                    }\n                    else {\n                        result.validate(schema.schema);\n                    }\n                }\n                var added = {};\n                var markerData = [];\n                result.errors.concat(result.warnings).forEach(function (error, idx) {\n                    // remove duplicated messages\n                    var signature = error.location.start + ' ' + error.location.end + ' ' + error.message;\n                    if (!added[signature]) {\n                        added[signature] = true;\n                        var startPosition = modelMirror.getPositionFromOffset(error.location.start);\n                        var endPosition = modelMirror.getPositionFromOffset(error.location.end);\n                        markerData.push({\n                            message: error.message,\n                            severity: idx >= result.errors.length ? severity_1.default.Warning : severity_1.default.Error,\n                            startLineNumber: startPosition.lineNumber,\n                            startColumn: startPosition.column,\n                            endLineNumber: endPosition.lineNumber,\n                            endColumn: endPosition.column\n                        });\n                    }\n                });\n                _this.markerService.changeOne(_this._modeId, resource, markerData);\n            });\n        };\n        JSONWorker.prototype.provideCompletionItems = function (resource, position) {\n            return this.doSuggest(resource, position).then(function (value) { return suggestSupport_1.filterSuggestions(value); });\n        };\n        JSONWorker.prototype.doSuggest = function (resource, position) {\n            var modelMirror = this.resourceService.get(resource);\n            return this.jsonIntellisense.doSuggest(resource, modelMirror, position);\n        };\n        JSONWorker.prototype.provideHover = function (resource, position) {\n            var _this = this;\n            var modelMirror = this.resourceService.get(resource);\n            var parser = new Parser.JSONParser();\n            var doc = parser.parse(modelMirror.getValue());\n            var offset = modelMirror.getOffsetFromPosition(position);\n            var node = doc.getNodeFromOffset(offset);\n            var originalNode = node;\n            // use the property description when hovering over an object key\n            if (node && node.type === 'string') {\n                var stringNode = node;\n                if (stringNode.isKey) {\n                    var propertyNode = node.parent;\n                    node = propertyNode.value;\n                }\n            }\n            if (!node) {\n                return WinJS.TPromise.as(null);\n            }\n            return this.schemaService.getSchemaForResource(resource.toString(), doc).then(function (schema) {\n                if (schema) {\n                    var matchingSchemas = [];\n                    doc.validate(schema.schema, matchingSchemas, node.start);\n                    var description = null;\n                    var contributonId = null;\n                    matchingSchemas.every(function (s) {\n                        if (s.node === node && !s.inverted && s.schema) {\n                            description = description || s.schema.description;\n                            contributonId = contributonId || s.schema.id;\n                        }\n                        return true;\n                    });\n                    var location = node.getNodeLocation();\n                    for (var i = _this.contributions.length - 1; i >= 0; i--) {\n                        var contribution = _this.contributions[i];\n                        var promise = contribution.getInfoContribution(resource, location);\n                        if (promise) {\n                            return promise.then(function (htmlContent) { return _this.createInfoResult(htmlContent, originalNode, modelMirror); });\n                        }\n                    }\n                    if (description) {\n                        var htmlContent = [{ className: 'documentation', text: description }];\n                        return _this.createInfoResult(htmlContent, originalNode, modelMirror);\n                    }\n                }\n                return null;\n            });\n        };\n        JSONWorker.prototype.createInfoResult = function (htmlContent, node, modelMirror) {\n            var range = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n            var result = {\n                htmlContent: htmlContent,\n                range: range\n            };\n            return result;\n        };\n        JSONWorker.prototype.provideDocumentSymbols = function (resource) {\n            var modelMirror = this.resourceService.get(resource);\n            var parser = new Parser.JSONParser();\n            var doc = parser.parse(modelMirror.getValue());\n            var root = doc.root;\n            if (!root) {\n                return WinJS.TPromise.as(null);\n            }\n            // special handling for key bindings\n            var resourceString = resource.toString();\n            if ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n                if (root.type === 'array') {\n                    var result = [];\n                    root.items.forEach(function (item) {\n                        if (item.type === 'object') {\n                            var property = item.getFirstProperty('key');\n                            if (property && property.value) {\n                                var range = modelMirror.getRangeFromOffsetAndLength(item.start, item.end - item.start);\n                                result.push({\n                                    name: property.value.getValue(),\n                                    kind: Modes.SymbolKind.String,\n                                    location: {\n                                        uri: resource,\n                                        range: range\n                                    }\n                                });\n                            }\n                        }\n                    });\n                    return WinJS.TPromise.as(result);\n                }\n            }\n            function collectOutlineEntries(result, node, containerName) {\n                if (node.type === 'array') {\n                    node.items.forEach(function (node) {\n                        collectOutlineEntries(result, node, containerName);\n                    });\n                }\n                else if (node.type === 'object') {\n                    var objectNode = node;\n                    objectNode.properties.forEach(function (property) {\n                        var range = modelMirror.getRangeFromOffsetAndLength(property.start, property.end - property.start);\n                        var valueNode = property.value;\n                        if (valueNode) {\n                            var childContainerName = containerName ? containerName + '.' + property.key.name : property.key.name;\n                            result.push({\n                                name: property.key.getValue(),\n                                kind: getSymbolKind(valueNode.type),\n                                location: {\n                                    uri: resource,\n                                    range: range,\n                                },\n                                containerName: containerName\n                            });\n                            collectOutlineEntries(result, valueNode, childContainerName);\n                        }\n                    });\n                }\n                return result;\n            }\n            var result = collectOutlineEntries([], root, void 0);\n            return WinJS.TPromise.as(result);\n        };\n        JSONWorker.prototype.format = function (resource, range, options) {\n            var model = this.resourceService.get(resource);\n            var formatRange = range ? model.getOffsetAndLengthFromRange(range) : void 0;\n            var edits = JSONFormatter.format(model.getValue(), formatRange, { insertSpaces: options.insertSpaces, tabSize: options.tabSize, eol: model.getEOL() });\n            var operations = edits.map(function (e) { return ({ range: model.getRangeFromOffsetAndLength(e.offset, e.length), text: e.content }); });\n            return WinJS.TPromise.as(operations);\n        };\n        JSONWorker = __decorate([\n            __param(1, resourceService_1.IResourceService),\n            __param(2, markers_1.IMarkerService),\n            __param(3, request_1.IRequestService),\n            __param(4, workspace_1.IWorkspaceContextService),\n            __param(5, instantiation_1.IInstantiationService)\n        ], JSONWorker);\n        return JSONWorker;\n    }());\n    exports.JSONWorker = JSONWorker;\n    function getSymbolKind(nodeType) {\n        switch (nodeType) {\n            case 'object':\n                return Modes.SymbolKind.Module;\n            case 'string':\n                return Modes.SymbolKind.String;\n            case 'number':\n                return Modes.SymbolKind.Number;\n            case 'array':\n                return Modes.SymbolKind.Array;\n            case 'boolean':\n                return Modes.SymbolKind.Boolean;\n            default:\n                return Modes.SymbolKind.Variable;\n        }\n    }\n});\n\n}).call(this);\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nexport class JSONLocation {\n\tprivate segments: string[];\n\n\tconstructor(segments: string[]) {\n\t\tthis.segments = segments;\n\t}\n\n\tpublic append(segment: string) : JSONLocation {\n\t\treturn new JSONLocation(this.segments.concat(segment));\n\t}\n\n\tpublic getSegments() {\n\t\treturn this.segments;\n\t}\n\n\tpublic matches(segments: string[]) {\n\t\tvar k = 0;\n\t\tfor (var i= 0; k < segments.length && i < this.segments.length; i++) {\n\t\t\tif (segments[k] === this.segments[i] || segments[k] === '*') {\n\t\t\t\tk++;\n\t\t\t} else if (segments[k] !== '**') {\n\t\t\t\treturn  false;\n\t\t\t}\n\t\t}\n\t\treturn k === segments.length;\n\t}\n\n\tpublic toString() : string {\n\t\treturn '[' + this.segments.join('][') + ']';\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport * as nls from 'vs/nls';\n\nexport interface IXHROptions {\n\ttype?:string;\n\turl?:string;\n\tuser?:string;\n\tpassword?:string;\n\tresponseType?:string;\n\theaders?:any;\n\ttimeout?: number;\n\tfollowRedirects?: number;\n\tdata?:any;\n}\n\nexport interface IXHRResponse {\n\tresponseText: string;\n\tstatus: number;\n\n\treadyState : number;\n\tgetResponseHeader: (header:string) => string;\n}\n\nexport function getErrorStatusDescription(status: number) : string {\n\tif (status < 400) {\n\t\treturn void 0;\n\t}\n\tswitch (status) {\n\t\tcase 400: return nls.localize('status.400', 'Bad request. The request cannot be fulfilled due to bad syntax.');\n\t\tcase 401: return nls.localize('status.401', 'Unauthorized. The server is refusing to respond.');\n\t\tcase 403: return nls.localize('status.403', 'Forbidden. The server is refusing to respond.');\n\t\tcase 404: return nls.localize('status.404', 'Not Found. The requested location could not be found.');\n\t\tcase 405: return nls.localize('status.405', 'Method not allowed. A request was made using a request method not supported by that location.');\n\t\tcase 406: return nls.localize('status.406', 'Not Acceptable. The server can only generate a response that is not accepted by the client.');\n\t\tcase 407: return nls.localize('status.407', 'Proxy Authentication Required. The client must first authenticate itself with the proxy.');\n\t\tcase 408: return nls.localize('status.408', 'Request Timeout. The server timed out waiting for the request.');\n\t\tcase 409: return nls.localize('status.409', 'Conflict. The request could not be completed because of a conflict in the request.');\n\t\tcase 410: return nls.localize('status.410', 'Gone. The requested page is no longer available.');\n\t\tcase 411: return nls.localize('status.411', 'Length Required. The \"Content-Length\" is not defined.');\n\t\tcase 412: return nls.localize('status.412', 'Precondition Failed. The precondition given in the request evaluated to false by the server.');\n\t\tcase 413: return nls.localize('status.413', 'Request Entity Too Large. The server will not accept the request, because the request entity is too large.');\n\t\tcase 414: return nls.localize('status.414', 'Request-URI Too Long. The server will not accept the request, because the URL is too long.');\n\t\tcase 415: return nls.localize('status.415', 'Unsupported Media Type. The server will not accept the request, because the media type is not supported.');\n\t\tcase 500: return nls.localize('status.500', 'Internal Server Error.');\n\t\tcase 501: return nls.localize('status.501', 'Not Implemented. The server either does not recognize the request method, or it lacks the ability to fulfill the request.');\n\t\tcase 503: return nls.localize('status.503', 'Service Unavailable. The server is currently unavailable (overloaded or down).');\n\t\tdefault: return nls.localize('status.416', 'HTTP status code {0}', status);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport Json = require('./json');\n\nexport interface FormattingOptions {\n\t/**\n\t * If indentation is based on spaces (`insertSpaces` = true), then what is the number of spaces that make an indent?\n\t */\n\ttabSize: number;\n\t/**\n\t * Is indentation based on spaces?\n\t */\n\tinsertSpaces: boolean;\n\t/**\n\t * The default end of line line character\n\t */\n\teol: string;\n}\n\nexport interface Edit {\n\toffset: number;\n\tlength: number;\n\tcontent: string;\n}\n\nexport function applyEdit(text: string, edit: Edit) : string {\n\treturn text.substring(0, edit.offset) + edit.content + text.substring(edit.offset + edit.length);\n}\n\nexport function applyEdits(text: string, edits: Edit[]) : string {\n\tfor (let i = edits.length - 1; i >= 0; i--) {\n\t\ttext = applyEdit(text, edits[i]);\n\t}\n\treturn text;\n}\n\nexport function format(documentText: string, range: { offset: number, length: number}, options: FormattingOptions): Edit[] {\n\tlet initialIndentLevel: number;\n\tlet value: string;\n\tlet rangeStart: number;\n\tlet rangeEnd: number;\n\tif (range) {\n\t\trangeStart = range.offset;\n\t\trangeEnd = rangeStart + range.length;\n\t\twhile (rangeStart > 0 && !isEOL(documentText, rangeStart - 1)) {\n\t\t\trangeStart--;\n\t\t}\n\t\tlet scanner = Json.createScanner(documentText, true);\n\t\tscanner.setPosition(rangeEnd);\n\t\tscanner.scan();\n\t\trangeEnd = scanner.getPosition();\n\n\t\tvalue = documentText.substring(rangeStart, rangeEnd);\n\t\tinitialIndentLevel = computeIndentLevel(value, 0, options);\n\t} else {\n\t\tvalue = documentText;\n\t\trangeStart = 0;\n\t\trangeEnd = documentText.length;\n\t\tinitialIndentLevel = 0;\n\t}\n\tlet eol = getEOL(options, documentText);\n\n\tlet lineBreak = false;\n\tlet indentLevel = 0;\n\tlet indentValue: string;\n\tif (options.insertSpaces) {\n\t\tindentValue = repeat(' ', options.tabSize);\n\t} else {\n\t\tindentValue = '\\t';\n\t}\n\n\tlet scanner = Json.createScanner(value, false);\n\n\tfunction newLineAndIndent(): string {\n\t\treturn eol + repeat(indentValue, initialIndentLevel + indentLevel);\n\t}\n\tfunction scanNext(): Json.SyntaxKind {\n\t\tlet token = scanner.scan();\n\t\tlineBreak = false;\n\t\twhile (token === Json.SyntaxKind.Trivia || token === Json.SyntaxKind.LineBreakTrivia) {\n\t\t\tlineBreak = lineBreak || (token === Json.SyntaxKind.LineBreakTrivia);\n\t\t\ttoken = scanner.scan();\n\t\t}\n\t\treturn token;\n\t}\n\tlet editOperations: Edit[] = [];\n\tfunction addEdit(text: string, startOffset: number, endOffset: number) {\n\t\tif (documentText.substring(startOffset, endOffset) !== text) {\n\t\t\teditOperations.push({ offset: startOffset, length: endOffset - startOffset, content: text });\n\t\t}\n\t}\n\n\tlet firstToken = scanNext();\n\tif (firstToken !== Json.SyntaxKind.EOF) {\n\t\tlet firstTokenStart = scanner.getTokenOffset() + rangeStart;\n\t\tlet initialIndent = repeat(indentValue, initialIndentLevel);\n\t\taddEdit(initialIndent, rangeStart, firstTokenStart);\n\t}\n\n\twhile (firstToken !== Json.SyntaxKind.EOF) {\n\t\tlet firstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + rangeStart;\n\t\tlet secondToken = scanNext();\n\n\t\tlet replaceContent = '';\n\t\twhile (!lineBreak && (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia)) {\n\t\t\t// comments on the same line: keep them on the same line, but ignore them otherwise\n\t\t\tlet commentTokenStart = scanner.getTokenOffset() + rangeStart;\n\t\t\taddEdit(' ', firstTokenEnd, commentTokenStart);\n\t\t\tfirstTokenEnd = scanner.getTokenOffset() + scanner.getTokenLength() + rangeStart;\n\t\t\treplaceContent = secondToken === Json.SyntaxKind.LineCommentTrivia ? newLineAndIndent() : '';\n\t\t\tsecondToken = scanNext();\n\t\t}\n\n\t\tif (secondToken === Json.SyntaxKind.CloseBraceToken) {\n\t\t\tif (firstToken !== Json.SyntaxKind.OpenBraceToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken === Json.SyntaxKind.CloseBracketToken) {\n\t\t\tif (firstToken !== Json.SyntaxKind.OpenBracketToken) {\n\t\t\t\tindentLevel--;\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\t\t} else if (secondToken !== Json.SyntaxKind.EOF) {\n\t\t\tswitch (firstToken) {\n\t\t\t\tcase Json.SyntaxKind.OpenBracketToken:\n\t\t\t\tcase Json.SyntaxKind.OpenBraceToken:\n\t\t\t\t\tindentLevel++;\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.CommaToken:\n\t\t\t\tcase Json.SyntaxKind.LineCommentTrivia:\n\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.BlockCommentTrivia:\n\t\t\t\t\tif (lineBreak) {\n\t\t\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// symbol following comment on the same line: keep on same line, separate with ' '\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.ColonToken:\n\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.NullKeyword:\n\t\t\t\tcase Json.SyntaxKind.TrueKeyword:\n\t\t\t\tcase Json.SyntaxKind.FalseKeyword:\n\t\t\t\tcase Json.SyntaxKind.NumericLiteral:\n\t\t\t\t\tif (secondToken === Json.SyntaxKind.NullKeyword || secondToken === Json.SyntaxKind.FalseKeyword || secondToken === Json.SyntaxKind.NumericLiteral) {\n\t\t\t\t\t\treplaceContent = ' ';\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (lineBreak && (secondToken === Json.SyntaxKind.LineCommentTrivia || secondToken === Json.SyntaxKind.BlockCommentTrivia)) {\n\t\t\t\treplaceContent = newLineAndIndent();\n\t\t\t}\n\n\t\t}\n\t\tlet secondTokenStart = scanner.getTokenOffset() + rangeStart;\n\t\taddEdit(replaceContent, firstTokenEnd, secondTokenStart);\n\t\tfirstToken = secondToken;\n\t}\n\treturn editOperations;\n}\n\nfunction repeat(s: string, count: number): string {\n\tlet result = '';\n\tfor (let i = 0; i < count; i++) {\n\t\tresult += s;\n\t}\n\treturn result;\n}\n\nfunction computeIndentLevel(content: string, offset: number, options: FormattingOptions): number {\n\tlet i = 0;\n\tlet nChars = 0;\n\tlet tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tlet ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nfunction getEOL(options: FormattingOptions, text: string): string {\n\tfor (let i = 0; i < text.length; i++) {\n\t\tlet ch = text.charAt(i);\n\t\tif (ch === '\\r') {\n\t\t\tif (i + 1 < text.length && text.charAt(i+1) === '\\n') {\n\t\t\t\treturn '\\r\\n';\n\t\t\t}\n\t\t\treturn '\\r';\n\t\t} else if (ch === '\\n') {\n\t\t\treturn '\\n';\n\t\t}\n\t}\n\treturn (options && options.eol) || '\\n';\n}\n\nfunction isEOL(text: string, offset: number) {\n\treturn '\\r\\n'.indexOf(text.charAt(offset)) !== -1;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Strings = require('vs/base/common/strings');\nimport Modes = require('vs/editor/common/modes');\nimport WinJS = require('vs/base/common/winjs.base');\nimport nls = require('vs/nls');\nimport JSONWorker = require('vs/languages/json/common/jsonWorker');\nimport URI from 'vs/base/common/uri';\nimport {JSONLocation} from 'vs/languages/json/common/parser/jsonLocation';\n\nvar globProperties:Modes.ISuggestion[] = [\n\t{ type: 'value', label: nls.localize('fileLabel', \"Files by Extension\"), codeSnippet: '\"**/*.{{extension}}\": true', documentationLabel: nls.localize('fileDescription', \"Match all files of a specific file extension.\")},\n\t{ type: 'value', label: nls.localize('filesLabel', \"Files with Multiple Extensions\"), codeSnippet: '\"**/*.{ext1,ext2,ext3}\": true', documentationLabel: nls.localize('filesDescription', \"Match all files with any of the file extensions.\")},\n\t{ type: 'value', label: nls.localize('derivedLabel', \"Files with Siblings by Name\"), codeSnippet: '\"**/*.{{source-extension}}\": { \"when\": \"$(basename).{{target-extension}}\" }', documentationLabel: nls.localize('derivedDescription', \"Match files that have siblings with the same name but a different extension.\")},\n\t{ type: 'value', label: nls.localize('topFolderLabel', \"Folder by Name (Top Level)\"), codeSnippet: '\"{{name}}\": true', documentationLabel: nls.localize('topFolderDescription', \"Match a top level folder with a specific name.\")},\n\t{ type: 'value', label: nls.localize('topFoldersLabel', \"Folders with Multiple Names (Top Level)\"), codeSnippet: '\"{folder1,folder2,folder3}\": true', documentationLabel: nls.localize('topFoldersDescription', \"Match multiple top level folders.\")},\n\t{ type: 'value', label: nls.localize('folderLabel', \"Folder by Name (Any Location)\"), codeSnippet: '\"**/{{name}}\": true', documentationLabel: nls.localize('folderDescription', \"Match a folder with a specific name in any location.\")},\n];\n\nvar globValues:Modes.ISuggestion[] = [\n\t{ type: 'value', label: nls.localize('trueLabel', \"True\"), codeSnippet: 'true', documentationLabel: nls.localize('trueDescription', \"Enable the pattern.\")},\n\t{ type: 'value', label: nls.localize('falseLabel', \"False\"), codeSnippet: 'false', documentationLabel: nls.localize('falseDescription', \"Disable the pattern.\")},\n\t{ type: 'value', label: nls.localize('derivedLabel', \"Files with Siblings by Name\"), codeSnippet: '{ \"when\": \"$(basename).{{extension}}\" }', documentationLabel: nls.localize('siblingsDescription', \"Match files that have siblings with the same name but a different extension.\")}\n];\n\nexport class GlobPatternContribution implements JSONWorker.IJSONWorkerContribution {\n\n\tconstructor() {\n\t}\n\n\tprivate isSettingsFile(resource: URI): boolean {\n\t\tvar path = resource.path;\n\t\treturn Strings.endsWith(path, '/settings.json');\n\t}\n\n\tpublic collectDefaultSuggestions(resource: URI, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\treturn null;\n\t}\n\n\tpublic collectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: JSONWorker.ISuggestionsCollector) : WinJS.Promise {\n\t\tif (this.isSettingsFile(resource) && (location.matches(['files.exclude']) || location.matches(['search.exclude']))) {\n\n\t\t\tglobProperties.forEach((e) => result.add(e));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic collectValueSuggestions(resource: URI, location: JSONLocation, currentKey: string, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isSettingsFile(resource) && (location.matches(['files.exclude']) || location.matches(['search.exclude']))) {\n\n\t\t\tglobValues.forEach((e) => result.add(e));\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tpublic getInfoContribution(resource: URI, location: JSONLocation): WinJS.TPromise<HtmlContent.IHTMLContentElement[]> {\n\t\treturn null;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport nls = require('vs/nls');\nimport Arrays = require('vs/base/common/arrays');\nimport Types = require('vs/base/common/types');\nimport Json = require('vs/base/common/json');\nimport JsonSchema = require('vs/base/common/jsonSchema');\nimport {JSONLocation} from './jsonLocation';\n\nexport interface IRange {\n\tstart:number;\n\tend:number;\n}\n\nexport interface IError {\n\tlocation:IRange;\n\tmessage:string;\n}\n\nexport class ASTNode {\n\tpublic start:number;\n\tpublic end:number;\n\tpublic type:string;\n\tpublic parent:ASTNode;\n\tpublic name:string;\n\n\tconstructor(parent:ASTNode, type:string, name:string, start:number, end?:number) {\n\t\tthis.type = type;\n\t\tthis.name = name;\n\t\tthis.start = start;\n\t\tthis.end = end;\n\t\tthis.parent = parent;\n\t}\n\n\tpublic getNodeLocation(): JSONLocation {\n\t\tvar path = this.parent ? this.parent.getNodeLocation() : new JSONLocation([]);\n\t\tif (this.name) {\n\t\t\tpath = path.append(this.name);\n\t\t}\n\t\treturn path;\n\t}\n\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn [];\n\t}\n\n\tpublic getValue():any {\n\t\t// override in children\n\t\treturn;\n\t}\n\n\tpublic contains(offset:number, includeRightBound: boolean = false) : boolean {\n\t\treturn offset >= this.start && offset < this.end || includeRightBound && offset === this.end;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\treturn visitor(this);\n\t}\n\n\tpublic getNodeFromOffset(offset:number):ASTNode {\n\t\tvar findNode = (node: ASTNode) : ASTNode => {\n\t\t\tif (offset >= node.start && offset < node.end) {\n\t\t\t\tvar children = node.getChildNodes();\n\t\t\t\tfor (var i = 0; i < children.length && children[i].start <= offset; i++) {\n\t\t\t\t\tvar item = findNode(children[i]);\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\treturn findNode(this);\n\t}\n\n\tpublic getNodeFromOffsetEndInclusive(offset:number):ASTNode {\n\t\tvar findNode = (node: ASTNode) : ASTNode => {\n\t\t\tif (offset >= node.start && offset <= node.end) {\n\t\t\t\tvar children = node.getChildNodes();\n\t\t\t\tfor (var i = 0; i < children.length && children[i].start <= offset; i++) {\n\t\t\t\t\tvar item = findNode(children[i]);\n\t\t\t\t\tif (item) {\n\t\t\t\t\t\treturn item;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t\treturn null;\n\t\t};\n\t\treturn findNode(this);\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1) : void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (Array.isArray(schema.type)) {\n\t\t\tif (Arrays.contains(<string[]> schema.type, this.type) === false) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: schema.errorMessage || nls.localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}', (<string[]> schema.type).join())\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\telse if (schema.type) {\n\t\t\tif (this.type !== schema.type) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: schema.errorMessage || nls.localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\"', schema.type)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\tif (Array.isArray(schema.allOf)) {\n\t\t\tschema.allOf.forEach((subSchema) => {\n\t\t\t\tthis.validate(subSchema, validationResult, matchingSchemas, offset);\n\t\t\t});\n\t\t}\n\t\tif (schema.not) {\n\t\t\tvar subValidationResult = new ValidationResult();\n\t\t\tvar subMatchingSchemas : IApplicableSchema[] = [];\n\t\t\tthis.validate(schema.not, subValidationResult, subMatchingSchemas, offset);\n\t\t\tif (!subValidationResult.hasErrors()) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (matchingSchemas) {\n\t\t\t\tsubMatchingSchemas.forEach((ms) => {\n\t\t\t\t\tms.inverted = !ms.inverted;\n\t\t\t\t\tmatchingSchemas.push(ms);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tvar testAlternatives = (alternatives: JsonSchema.IJSONSchema[], maxOneMatch: boolean) => {\n\t\t\tvar matches = [];\n\n\t\t\t// remember the best match that is used for error messages\n\t\t\tvar bestMatch : { schema:JsonSchema.IJSONSchema; validationResult:ValidationResult; matchingSchemas:IApplicableSchema[]; } = null;\n\t\t\talternatives.forEach((subSchema) => {\n\t\t\t\tvar subValidationResult = new ValidationResult();\n\t\t\t\tvar subMatchingSchemas : IApplicableSchema[] = [];\n\t\t\t\tthis.validate(subSchema, subValidationResult, subMatchingSchemas);\n\t\t\t\tif (!subValidationResult.hasErrors()) {\n\t\t\t\t\tmatches.push(subSchema);\n\t\t\t\t}\n\t\t\t\tif (!bestMatch) {\n\t\t\t\t\tbestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n\t\t\t\t} else {\n\t\t\t\t\tif (!maxOneMatch && !subValidationResult.hasErrors() && !bestMatch.validationResult.hasErrors()) {\n\t\t\t\t\t\t// no errors, both are equally good matches\n\t\t\t\t\t\tbestMatch.matchingSchemas.push.apply(bestMatch.matchingSchemas, subMatchingSchemas);\n\t\t\t\t\t\tbestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n\t\t\t\t\t\tbestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar compareResult = subValidationResult.compare(bestMatch.validationResult);\n\t\t\t\t\t\tif (compareResult > 0) {\n\t\t\t\t\t\t\t// our node is the best matching so far\n\t\t\t\t\t\t\tbestMatch = { schema: subSchema, validationResult: subValidationResult,  matchingSchemas: subMatchingSchemas };\n\t\t\t\t\t\t} else if (compareResult === 0) {\n\t\t\t\t\t\t\t// there's already a best matching but we are as good\n\t\t\t\t\t\t\tbestMatch.matchingSchemas.push.apply(bestMatch.matchingSchemas, subMatchingSchemas);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (matches.length > 1 && maxOneMatch) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.start + 1 },\n\t\t\t\t\tmessage: nls.localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (bestMatch !== null) {\n\t\t\t\tvalidationResult.merge(bestMatch.validationResult);\n\t\t\t\tvalidationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n\t\t\t\tvalidationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n\t\t\t\tif (matchingSchemas) {\n\t\t\t\t\tmatchingSchemas.push.apply(matchingSchemas, bestMatch.matchingSchemas);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn matches.length;\n\t\t};\n\t\tif (Array.isArray(schema.anyOf)) {\n\t\t\ttestAlternatives(schema.anyOf, false);\n\t\t}\n\t\tif (Array.isArray(schema.oneOf)) {\n\t\t\ttestAlternatives(schema.oneOf, true);\n\t\t}\n\n\t\tif (Array.isArray(schema.enum)) {\n\t\t\tif (Arrays.contains(schema.enum, this.getValue()) === false) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('enumWarning', 'Value is not an accepted value. Valid values: {0}', JSON.stringify(schema.enum))\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tvalidationResult.enumValueMatch = true;\n\t\t\t}\n\t\t}\n\n\t\tif (matchingSchemas !== null) {\n\t\t\tmatchingSchemas.push({node:this, schema: schema });\n\t\t}\n\t}\n}\n\nexport class NullASTNode extends ASTNode {\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'null', name, start, end);\n\t}\n\n\tpublic getValue():any {\n\t\treturn null;\n\t}\n}\n\nexport class BooleanASTNode extends ASTNode {\n\n\tprivate value:boolean;\n\n\tconstructor(parent:ASTNode, name:string, value:boolean, start:number, end?:number) {\n\t\tsuper(parent, 'boolean', name, start, end);\n\t\tthis.value = value;\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.value;\n\t}\n\n}\n\nexport class ArrayASTNode extends ASTNode {\n\n\tpublic items:ASTNode[];\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'array', name, start, end);\n\t\tthis.items = [];\n\t}\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn this.items;\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.items.map((v) => v.getValue());\n\t}\n\n\tpublic addItem(item: ASTNode) : boolean {\n\t\tif (item) {\n\t\t\tthis.items.push(item);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\tvar ctn = visitor(this);\n\t\tfor (var i = 0; i < this.items.length && ctn; i++) {\n\t\t\tctn = this.items[i].visit(visitor);\n\t\t}\n\t\treturn ctn;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\n\t\tif (Array.isArray(schema.items)) {\n\t\t\tvar subSchemas = <JsonSchema.IJSONSchema[]> schema.items;\n\t\t\tsubSchemas.forEach((subSchema, index) => {\n\t\t\t\tvar itemValidationResult = new ValidationResult();\n\t\t\t\tvar item = this.items[index];\n\t\t\t\tif (item) {\n\t\t\t\t\titem.validate(subSchema, itemValidationResult, matchingSchemas, offset);\n\t\t\t\t\tvalidationResult.mergePropertyMatch(itemValidationResult);\n\t\t\t\t} else if (this.items.length >= subSchemas.length) {\n\t\t\t\t\tvalidationResult.propertiesValueMatches++;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (schema.additionalItems === false && this.items.length > subSchemas.length) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer', subSchemas.length)\n\t\t\t\t});\n\t\t\t} else if (this.items.length >= subSchemas.length) {\n\t\t\t\tvalidationResult.propertiesValueMatches += (this.items.length - subSchemas.length);\n\t\t\t}\n\t\t}\n\t\telse if (schema.items) {\n\t\t\tthis.items.forEach((item) => {\n\t\t\t\tvar itemValidationResult = new ValidationResult();\n\t\t\t\titem.validate(schema.items, itemValidationResult, matchingSchemas, offset);\n\t\t\t\tvalidationResult.mergePropertyMatch(itemValidationResult);\n\t\t\t});\n\t\t}\n\n\t\tif (schema.minItems && this.items.length < schema.minItems) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('minItemsWarning', 'Array has too few items. Expected {0} or more', schema.minItems)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.maxItems && this.items.length > schema.maxItems) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer', schema.minItems)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.uniqueItems === true) {\n\t\t\tvar values = this.items.map((node) => {\n\t\t\t\treturn node.getValue();\n\t\t\t});\n\t\t\tvar duplicates = values.some((value, index) => {\n\t\t\t\treturn index !== values.lastIndexOf(value);\n\t\t\t});\n\t\t\tif (duplicates) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('uniqueItemsWarning', 'Array has duplicate items')\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n}\n\nexport class NumberASTNode extends ASTNode {\n\n\tpublic isInteger:boolean;\n\tpublic value:number;\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'number', name, start, end);\n\t\tthis.isInteger = true;\n\t\tthis.value = Number.NaN;\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.value;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// work around type validation in the base class\n\t\tvar typeIsInteger = false;\n\t\tif (schema.type === 'integer' || (Array.isArray(schema.type) && Arrays.contains(<string[]> schema.type, 'integer'))) {\n\t\t\ttypeIsInteger = true;\n\t\t}\n\t\tif (typeIsInteger && this.isInteger === true) {\n\t\t\tthis.type = 'integer';\n\t\t}\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\t\tthis.type = 'number';\n\n\t\tvar val = this.getValue();\n\n\t\tif (Types.isNumber(schema.multipleOf)) {\n\t\t\tif (val % schema.multipleOf !== 0) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('multipleOfWarning', 'Value is not divisible by {0}', schema.multipleOf)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (!Types.isUndefined(schema.minimum)) {\n\t\t\tif (schema.exclusiveMinimum && val <= schema.minimum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}', schema.minimum)\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!schema.exclusiveMinimum && val < schema.minimum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('minimumWarning', 'Value is below the minimum of {0}', schema.minimum)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (!Types.isUndefined(schema.maximum)) {\n\t\t\tif (schema.exclusiveMaximum && val >= schema.maximum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}', schema.maximum)\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (!schema.exclusiveMaximum && val > schema.maximum) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('maximumWarning', 'Value is above the maximum of {0}', schema.maximum)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport class StringASTNode extends ASTNode {\n\tpublic isKey:boolean;\n\tpublic value:string;\n\n\tconstructor(parent:ASTNode, name:string, isKey:boolean, start:number, end?:number) {\n\t\tsuper(parent, 'string', name, start, end);\n\t\tthis.isKey = isKey;\n\t\tthis.value = '';\n\t}\n\n\tpublic getValue():any {\n\t\treturn this.value;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\n\t\tif (schema.minLength && this.value.length < schema.minLength) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('minLengthWarning', 'String is shorter than the minimum length of ', schema.minLength)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.maxLength && this.value.length > schema.maxLength) {\n\t\t\tvalidationResult.warnings.push({\n\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\tmessage: nls.localize('maxLengthWarning', 'String is shorter than the maximum length of ', schema.maxLength)\n\t\t\t});\n\t\t}\n\n\t\tif (schema.pattern) {\n\t\t\tvar regex = new RegExp(schema.pattern);\n\t\t\tif (!regex.test(this.value)) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: schema.errorMessage || nls.localize('patternWarning', 'String does not match the pattern of \"{0}\"', schema.pattern)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t}\n}\n\nexport class PropertyASTNode extends ASTNode {\n\tpublic key: StringASTNode;\n\tpublic value: ASTNode;\n\tpublic colonOffset: number;\n\n\tconstructor(parent:ASTNode, key: StringASTNode) {\n\t\tsuper(parent, 'property', null, key.start);\n\t\tthis.key = key;\n\t\tkey.parent = this;\n\t\tkey.name = key.value;\n\t\tthis.colonOffset = -1;\n\t}\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn this.value ? [this.key, this.value] : [ this.key];\n\t}\n\n\tpublic setValue(value: ASTNode): boolean {\n\t\tthis.value = value;\n\t\treturn value !== null;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\treturn visitor(this) && this.key.visit(visitor) && this.value && this.value.visit(visitor);\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\t\tif (this.value) {\n\t\t\tthis.value.validate(schema, validationResult, matchingSchemas, offset);\n\t\t}\n\t}\n}\n\nexport class ObjectASTNode extends ASTNode {\n\tpublic properties:PropertyASTNode[];\n\n\tconstructor(parent:ASTNode, name:string, start:number, end?:number) {\n\t\tsuper(parent, 'object', name, start, end);\n\n\t\tthis.properties = [];\n\t}\n\n\tpublic getChildNodes(): ASTNode[] {\n\t\treturn this.properties;\n\t}\n\n\tpublic addProperty(node:PropertyASTNode):boolean {\n\t\tif (!node) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.properties.push(node);\n\t\treturn true;\n\t}\n\n\tpublic getFirstProperty(key:string) : PropertyASTNode {\n\t\tfor (var i = 0; i < this.properties.length; i++) {\n\t\t\tif (this.properties[i].key.value === key) {\n\t\t\t\treturn this.properties[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getKeyList():string[] {\n\t\treturn this.properties.map((p)=>p.key.getValue());\n\t}\n\n\tpublic getValue():any {\n\t\tvar value : any= {};\n\t\tthis.properties.forEach((p) => {\n\t\t\tvar v = p.value && p.value.getValue();\n\t\t\tif (v) {\n\t\t\t\tvalue[p.key.getValue()] = v;\n\t\t\t}\n\t\t});\n\t\treturn value;\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):boolean {\n\t\tvar ctn = visitor(this);\n\t\tfor (var i = 0; i < this.properties.length && ctn; i++) {\n\t\t\tctn = this.properties[i].visit(visitor);\n\t\t}\n\t\treturn ctn;\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, validationResult:ValidationResult, matchingSchemas:IApplicableSchema[], offset:number = -1):void {\n\t\tif (offset !== -1 && !this.contains(offset)) {\n\t\t\treturn;\n\t\t}\n\n\t\tsuper.validate(schema, validationResult, matchingSchemas, offset);\n\t\tvar seenKeys: { [key: string]:ASTNode } = {};\n\t\tvar unprocessedProperties: string[] = [];\n\t\tthis.properties.forEach((node) => {\n\t\t\tvar key = node.key.value;\n\t\t\tseenKeys[key] = node.value;\n\t\t\tunprocessedProperties.push(key);\n\t\t});\n\n\t\tif (Array.isArray(schema.required)) {\n\t\t\tschema.required.forEach((propertyName: string) => {\n\t\t\t\tif (!seenKeys[propertyName]) {\n\t\t\t\t\tvar key = this.parent && this.parent && (<PropertyASTNode> this.parent).key;\n\t\t\t\t\tvar location = key ? { start: key.start, end: key.end } : { start: this.start, end: this.start + 1 };\n\t\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\t\tlocation: location,\n\t\t\t\t\t\tmessage: nls.localize('MissingRequiredPropWarning', 'Missing property \"{0}\"', propertyName)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\n\t\tvar propertyProcessed = (prop:string) => {\n\t\t\tvar index = unprocessedProperties.indexOf(prop);\n\t\t\twhile(index >= 0) {\n\t\t\t\tunprocessedProperties.splice(index, 1);\n\t\t\t\tindex = unprocessedProperties.indexOf(prop);\n\t\t\t}\n\t\t};\n\n\t\tif (schema.properties) {\n\t\t\tObject.keys(schema.properties).forEach((propertyName: string) => {\n\t\t\t\tpropertyProcessed(propertyName);\n\t\t\t\tvar prop = schema.properties[propertyName];\n\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\tif (child) {\n\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\tchild.validate(prop, propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t}\n\n\t\t\t});\n\t\t}\n\n\t\tif (schema.patternProperties) {\n\t\t\tObject.keys(schema.patternProperties).forEach((propertyPattern: string) => {\n\t\t\t\tvar regex = new RegExp(propertyPattern);\n\t\t\t\tunprocessedProperties.slice(0).forEach((propertyName: string) => {\n\t\t\t\t\tif (regex.test(propertyName)) {\n\t\t\t\t\t\tpropertyProcessed(propertyName);\n\t\t\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\t\t\tif (child) {\n\t\t\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\t\t\tchild.validate(schema.patternProperties[propertyPattern], propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (Types.isObject(schema.additionalProperties)) {\n\t\t\tunprocessedProperties.forEach((propertyName: string) => {\n\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\tif (child) {\n\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\tchild.validate(schema.additionalProperties, propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (schema.additionalProperties === false) {\n\t\t\tif (unprocessedProperties.length > 0) {\n\t\t\t\tunprocessedProperties.forEach((propertyName: string) => {\n\t\t\t\t\tvar child = seenKeys[propertyName];\n\t\t\t\t\tif (child) {\n\t\t\t\t\t\tvar propertyNode = <PropertyASTNode> child.parent;\n\n\t\t\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\t\t\tlocation: { start: propertyNode.key.start, end: propertyNode.key.end },\n\t\t\t\t\t\t\tmessage: nls.localize('DisallowedExtraPropWarning', 'Property {0} is not allowed', propertyName)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (schema.maxProperties) {\n\t\t\tif (this.properties.length > schema.maxProperties) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('MaxPropWarning', 'Object has more properties than limit of {0}', schema.maxProperties)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (schema.minProperties) {\n\t\t\tif (this.properties.length < schema.minProperties) {\n\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\tmessage: nls.localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tif (Types.isObject(schema.dependencies)) {\n\t\t\tObject.keys(schema.dependencies).forEach((key: string) => {\n\t\t\t\tvar prop = seenKeys[key];\n\t\t\t\tif (prop) {\n\t\t\t\t\tif (Array.isArray(schema.dependencies[key])) {\n\t\t\t\t\t\tvar valueAsArray:string[] = schema.dependencies[key];\n\t\t\t\t\t\tvalueAsArray.forEach((requiredProp: string) => {\n\t\t\t\t\t\t\tif (!seenKeys[requiredProp]) {\n\t\t\t\t\t\t\t\tvalidationResult.warnings.push({\n\t\t\t\t\t\t\t\t\tlocation: { start: this.start, end: this.end },\n\t\t\t\t\t\t\t\t\tmessage: nls.localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}', requiredProp, key)\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvalidationResult.propertiesValueMatches++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (Types.isObject(schema.dependencies[key])) {\n\t\t\t\t\t\tvar valueAsSchema:JsonSchema.IJSONSchema = schema.dependencies[key];\n\t\t\t\t\t\tvar propertyvalidationResult = new ValidationResult();\n\t\t\t\t\t\tthis.validate(valueAsSchema, propertyvalidationResult, matchingSchemas, offset);\n\t\t\t\t\t\tvalidationResult.mergePropertyMatch(propertyvalidationResult);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n}\n\nexport class JSONDocumentConfig {\n\tpublic ignoreDanglingComma:boolean;\n\n\tconstructor() {\n\t\tthis.ignoreDanglingComma = false;\n\t}\n}\n\nexport interface IApplicableSchema {\n\tnode:ASTNode;\n\tinverted?:boolean;\n\tschema: JsonSchema.IJSONSchema;\n}\n\nexport class ValidationResult {\n\tpublic errors:IError[];\n\tpublic warnings:IError[];\n\n\tpublic propertiesMatches: number;\n\tpublic propertiesValueMatches: number;\n\tpublic enumValueMatch: boolean;\n\n\tconstructor() {\n\t\tthis.errors = [];\n\t\tthis.warnings = [];\n\t\tthis.propertiesMatches = 0;\n\t\tthis.propertiesValueMatches = 0;\n\t\tthis.enumValueMatch = false;\n\t}\n\n\tpublic hasErrors():boolean {\n\t\treturn !!this.errors.length || !!this.warnings.length;\n\t}\n\n\tpublic mergeAll(validationResults:ValidationResult[]):void {\n\t\tvalidationResults.forEach((validationResult) => {\n\t\t\tthis.merge(validationResult);\n\t\t});\n\t}\n\n\tpublic merge(validationResult:ValidationResult):void {\n\t\tthis.errors = this.errors.concat(validationResult.errors);\n\t\tthis.warnings = this.warnings.concat(validationResult.warnings);\n\t}\n\n\tpublic mergePropertyMatch(propertyValidationResult: ValidationResult) : void {\n\t\tthis.merge(propertyValidationResult);\n\t\tthis.propertiesMatches++;\n\t\tif (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasErrors() && propertyValidationResult.propertiesMatches) {\n\t\t\tthis.propertiesValueMatches++;\n\t\t}\n\t}\n\n\tpublic compare(other: ValidationResult) : number {\n\t\tvar hasErrors = this.hasErrors();\n\t\tif (hasErrors !== other.hasErrors()) {\n\t\t\treturn hasErrors ? -1 : 1;\n\t\t}\n\t\tif (this.enumValueMatch !== other.enumValueMatch) {\n\t\t\treturn other.enumValueMatch ? -1 : 1;\n\t\t}\n\t\tif (this.propertiesValueMatches !== other.propertiesValueMatches) {\n\t\t\treturn this.propertiesValueMatches - other.propertiesValueMatches;\n\t\t}\n\t\treturn this.propertiesMatches - other.propertiesMatches;\n\t}\n\n}\n\nexport class JSONDocument {\n\tpublic config:JSONDocumentConfig;\n\tpublic root:ASTNode;\n\n\tprivate validationResult:ValidationResult;\n\n\tconstructor(config:JSONDocumentConfig) {\n\t\tthis.config = config;\n\t\tthis.validationResult = new ValidationResult();\n\t}\n\n\tpublic get errors():IError[] {\n\t\treturn this.validationResult.errors;\n\t}\n\n\tpublic get warnings():IError[] {\n\t\treturn this.validationResult.warnings;\n\t}\n\n\tpublic getNodeFromOffset(offset:number):ASTNode {\n\t\treturn this.root && this.root.getNodeFromOffset(offset);\n\t}\n\n\tpublic getNodeFromOffsetEndInclusive(offset:number):ASTNode {\n\t\treturn this.root && this.root.getNodeFromOffsetEndInclusive(offset);\n\t}\n\n\tpublic visit(visitor: (node:ASTNode) => boolean):void {\n\t\tif (this.root) {\n\t\t\tthis.root.visit(visitor);\n\t\t}\n\t}\n\n\tpublic validate(schema:JsonSchema.IJSONSchema, matchingSchemas:IApplicableSchema[]= null, offset:number = -1):void {\n\t\tif (this.root) {\n\t\t\tthis.root.validate(schema, this.validationResult, matchingSchemas, offset);\n\t\t}\n\t}\n}\n\nexport class JSONParser {\n\tpublic parse(text:string, config = new JSONDocumentConfig()):JSONDocument {\n\n\t\tvar _doc = new JSONDocument(config);\n\t\tvar _scanner = Json.createScanner(text, true);\n\n\t\tfunction _accept(token : Json.SyntaxKind) : boolean {\n\t\t\tif (_scanner.getToken() === token) {\n\t\t\t\t_scanner.scan();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction _error<T extends ASTNode>(message:string, node:T = null, skipUntilAfter: Json.SyntaxKind[] = [], skipUntil: Json.SyntaxKind[] = []) : T {\n\t\t\tif (_doc.errors.length === 0 || _doc.errors[0].location.start !== _scanner.getTokenOffset()) {\n\t\t\t\t// ignore multiple errors on the same offset\n\t\t\t\tvar error = { message: message, location: { start: _scanner.getTokenOffset(), end: _scanner.getTokenOffset() + _scanner.getTokenLength()}};\n\t\t\t\t_doc.errors.push(error);\n\t\t\t}\n\n\t\t\tif (node) {\n\t\t\t\t_finalize(node, false);\n\t\t\t}\n\t\t\tif (skipUntilAfter.length + skipUntil.length > 0) {\n\t\t\t\tvar token = _scanner.getToken();\n\t\t\t\twhile (token !== Json.SyntaxKind.EOF) {\n\t\t\t\t\tif (skipUntilAfter.indexOf(token) !== -1) {\n\t\t\t\t\t\t_scanner.scan();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t} else if (skipUntil.indexOf(token) !== -1) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\ttoken = _scanner.scan();\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction _checkScanError() : boolean {\n\t\t\tswitch (_scanner.getTokenError()) {\n\t\t\t\tcase Json.ScanError.InvalidUnicode:\n\t\t\t\t\t_error(nls.localize('InvalidUnicode', 'Invalid unicode sequence in string'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.InvalidEscapeCharacter:\n\t\t\t\t\t_error(nls.localize('InvalidEscapeCharacter', 'Invalid escape character in string'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.UnexpectedEndOfNumber:\n\t\t\t\t\t_error(nls.localize('UnexpectedEndOfNumber', 'Unexpected end of number'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.UnexpectedEndOfComment:\n\t\t\t\t\t_error(nls.localize('UnexpectedEndOfComment', 'Unexpected end of comment'));\n\t\t\t\t\treturn true;\n\t\t\t\tcase Json.ScanError.UnexpectedEndOfString:\n\t\t\t\t\t_error(nls.localize('UnexpectedEndOfString', 'Unexpected end of string'));\n\t\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction _finalize<T extends ASTNode>(node:T, scanNext:boolean) : T {\n\t\t\tnode.end = _scanner.getTokenOffset() + _scanner.getTokenLength();\n\n\t\t\tif (scanNext) {\n\t\t\t\t_scanner.scan();\n\t\t\t}\n\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction _parseArray(parent:ASTNode, name:string):ArrayASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.OpenBracketToken) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar node = new ArrayASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\t_scanner.scan(); // consume OpenBracketToken\n\n\t\t\tvar count = 0;\n\t\t\tif (node.addItem(_parseValue(node, '' + count++))) {\n\t\t\t\twhile (_accept(Json.SyntaxKind.CommaToken)) {\n\t\t\t\t\tif (!node.addItem(_parseValue(node, '' + count++)) && !_doc.config.ignoreDanglingComma) {\n\t\t\t\t\t\t_error(nls.localize('ValueExpected', 'Value expected'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.CloseBracketToken) {\n\t\t\t\treturn _error(nls.localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), node);\n\t\t\t}\n\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseProperty(parent:ObjectASTNode, keysSeen:any):PropertyASTNode {\n\n\t\t\tvar key = _parseString(null, null, true);\n\t\t\tif (!key) {\n\t\t\t\tif (_scanner.getToken() === Json.SyntaxKind.Unknown) {\n\t\t\t\t\t// give a more helpful error message\n\t\t\t\t\tvar value = _scanner.getTokenValue();\n\t\t\t\t\tif (value.match(/^['\\w]/)) {\n\t\t\t\t\t\t_error(nls.localize('DoubleQuotesExpected', 'Property keys must be doublequoted'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar node = new PropertyASTNode(parent, key);\n\n\t\t\tif (keysSeen[key.value]) {\n\t\t\t\t_doc.warnings.push( { location: { start: node.key.start, end: node.key.end }, message:nls.localize('DuplicateKeyWarning', \"Duplicate object key\")});\n\t\t\t}\n\t\t\tkeysSeen[key.value] = true;\n\n\t\t\tif (_scanner.getToken() === Json.SyntaxKind.ColonToken) {\n\t\t\t\tnode.colonOffset = _scanner.getTokenOffset();\n\t\t\t} else {\n\t\t\t\treturn _error(nls.localize('ColonExpected', 'Colon expected'), node, [], [Json.SyntaxKind.CloseBraceToken, Json.SyntaxKind.CommaToken] );\n\t\t\t}\n\n\t\t\t_scanner.scan(); // consume ColonToken\n\n\t\t\tif (!node.setValue(_parseValue(node, key.value))) {\n\t\t\t\treturn _error(nls.localize('ValueExpected', 'Value expected'), node, [], [Json.SyntaxKind.CloseBraceToken, Json.SyntaxKind.CommaToken]);\n\t\t\t}\n\t\t\tnode.end = node.value.end;\n\t\t\treturn node;\n\t\t}\n\n\t\tfunction _parseObject(parent:ASTNode, name:string):ObjectASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.OpenBraceToken) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar node = new ObjectASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\t_scanner.scan(); // consume OpenBraceToken\n\n\t\t\tvar keysSeen : any = {};\n\t\t\tif (node.addProperty(_parseProperty(node, keysSeen))) {\n\t\t\t\twhile (_accept(Json.SyntaxKind.CommaToken)) {\n\t\t\t\t\tif (!node.addProperty(_parseProperty(node, keysSeen)) && !_doc.config.ignoreDanglingComma) {\n\t\t\t\t\t\t_error(nls.localize('PropertyExpected', 'Property expected'));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.CloseBraceToken) {\n\t\t\t\treturn _error(nls.localize('ExpectedCloseBrace', 'Expected comma or closing brace'), node);\n\t\t\t}\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseString(parent:ASTNode, name: string, isKey:boolean):StringASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.StringLiteral) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar node = new StringASTNode(parent, name, isKey, _scanner.getTokenOffset());\n\t\t\tnode.value = _scanner.getTokenValue();\n\n\t\t\t_checkScanError();\n\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseNumber(parent:ASTNode, name: string):NumberASTNode {\n\t\t\tif (_scanner.getToken() !== Json.SyntaxKind.NumericLiteral) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tvar node = new NumberASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\tif (!_checkScanError()) {\n\t\t\t\tvar tokenValue = _scanner.getTokenValue();\n\t\t\t\ttry {\n\t\t\t\t\tvar numberValue = JSON.parse(tokenValue);\n\t\t\t\t\tif (typeof numberValue !== 'number') {\n\t\t\t\t\t\treturn _error(nls.localize('InvalidNumberFormat', 'Invalid number format'), node);\n\t\t\t\t\t}\n\t\t\t\t\tnode.value = numberValue;\n\t\t\t\t} catch (e) {\n\t\t\t\t\treturn _error(nls.localize('InvalidNumberFormat', 'Invalid number format'), node);\n\t\t\t\t}\n\t\t\t\tnode.isInteger = tokenValue.indexOf('.') === -1;\n\t\t\t}\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseLiteral(parent:ASTNode, name: string):ASTNode {\n\t\t\tvar node: ASTNode;\n\t\t\tswitch (_scanner.getToken()) {\n\t\t\t\tcase Json.SyntaxKind.NullKeyword:\n\t\t\t\t\tnode = new NullASTNode(parent, name, _scanner.getTokenOffset());\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.TrueKeyword:\n\t\t\t\t\tnode = new BooleanASTNode(parent, name, true, _scanner.getTokenOffset());\n\t\t\t\t\tbreak;\n\t\t\t\tcase Json.SyntaxKind.FalseKeyword:\n\t\t\t\t\tnode = new BooleanASTNode(parent, name, false, _scanner.getTokenOffset());\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn null;\n\t\t\t}\n\t\t\treturn _finalize(node, true);\n\t\t}\n\n\t\tfunction _parseValue(parent:ASTNode, name:string):ASTNode {\n\t\t\treturn _parseArray(parent, name) || _parseObject(parent, name) || _parseString(parent, name, false) || _parseNumber(parent, name) || _parseLiteral(parent, name);\n\t\t}\n\n\t\t_scanner.scan();\n\n\t\t_doc.root = _parseValue(null, null);\n\t\tif (!_doc.root) {\n\t\t\t_error(nls.localize('Invalid symbol', 'Expected a JSON object, array or literal'));\n\t\t} else if (_scanner.getToken() !== Json.SyntaxKind.EOF) {\n\t\t\t_error(nls.localize('End of file expected', 'End of file expected'));\n\t\t}\n\t\treturn _doc;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Modes = require('vs/editor/common/modes');\nimport URI from 'vs/base/common/uri';\nimport Parser = require('./parser/jsonParser');\nimport SchemaService = require('./jsonSchemaService');\nimport Types = require('vs/base/common/types');\nimport WinJS = require('vs/base/common/winjs.base');\nimport JsonWorker = require('./jsonWorker');\nimport JsonSchema = require('vs/base/common/jsonSchema');\nimport nls = require('vs/nls');\nimport errors = require('vs/base/common/errors');\nimport {IRequestService} from 'vs/platform/request/common/request';\n\nexport class JSONIntellisense {\n\n\tprivate schemaService: SchemaService.IJSONSchemaService;\n\tprivate requestService: IRequestService;\n\tprivate contributions: JsonWorker.IJSONWorkerContribution[];\n\n\tconstructor(schemaService: SchemaService.IJSONSchemaService, requestService: IRequestService, contributions: JsonWorker.IJSONWorkerContribution[]) {\n\t\tthis.schemaService = schemaService;\n\t\tthis.requestService = requestService;\n\t\tthis.contributions = contributions;\n\t}\n\n\tpublic doSuggest(resource: URI, modelMirror: EditorCommon.IMirrorModel, position: EditorCommon.IPosition): WinJS.TPromise<Modes.ISuggestResult> {\n\t\tvar currentWord = modelMirror.getWordUntilPosition(position).word;\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar config = new Parser.JSONDocumentConfig();\n\t\t// so you can invoke suggest after the comma in an object literal\n\t\tconfig.ignoreDanglingComma = true;\n\n\t\tvar doc = parser.parse(modelMirror.getValue(), config);\n\n\t\tvar result: Modes.ISuggestResult = {\n\t\t\tcurrentWord: currentWord,\n\t\t\tincomplete: false,\n\t\t\tsuggestions: []\n\t\t};\n\t\tvar overwriteBefore = void 0;\n\t\tvar overwriteAfter = void 0;\n\n\t\tvar proposed: { [key: string]: boolean } = {};\n\t\tvar collector : JsonWorker.ISuggestionsCollector = {\n\t\t\tadd: (suggestion: Modes.ISuggestion) => {\n\t\t\t\tif (!proposed[suggestion.label]) {\n\t\t\t\t\tproposed[suggestion.label] = true;\n\n\t\t\t\t\tsuggestion.overwriteBefore = overwriteBefore;\n\t\t\t\t\tsuggestion.overwriteAfter = overwriteAfter;\n\t\t\t\t\tresult.suggestions.push(suggestion);\n\t\t\t\t}\n\t\t\t},\n\t\t\tsetAsIncomplete: () => {\n\t\t\t\tresult.incomplete = true;\n\t\t\t},\n\t\t\terror: (message: string) => {\n\t\t\t\terrors.onUnexpectedError(message);\n\t\t\t}\n\t\t};\n\n\t\treturn this.schemaService.getSchemaForResource(resource.toString(), doc).then((schema) => {\n\t\t\tvar collectionPromises: WinJS.Promise[] = [];\n\n\t\t\tvar offset = modelMirror.getOffsetFromPosition(position);\n\t\t\tvar node = doc.getNodeFromOffsetEndInclusive(offset);\n\t\t\tvar addValue = true;\n\t\t\tvar currentKey = currentWord;\n\t\t\tvar currentProperty : Parser.PropertyASTNode = null;\n\t\t\tif (node) {\n\n\t\t\t\tif (node.type === 'string') {\n\t\t\t\t\tvar stringNode = <Parser.StringASTNode> node;\n\t\t\t\t\tif (stringNode.isKey) {\n\t\t\t\t\t\tvar nodeRange = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n\t\t\t\t\t\toverwriteBefore = position.column - nodeRange.startColumn;\n\t\t\t\t\t\toverwriteAfter = nodeRange.endColumn - position.column;\n\t\t\t\t\t\taddValue = !(node.parent && ((<Parser.PropertyASTNode> node.parent).value));\n\t\t\t\t\t\tcurrentProperty = node.parent ? <Parser.PropertyASTNode> node.parent : null;\n\t\t\t\t\t\tcurrentKey = modelMirror.getValueInRange({ startColumn: nodeRange.startColumn + 1, startLineNumber: nodeRange.startLineNumber, endColumn: position.column, endLineNumber: position.lineNumber });\n\t\t\t\t\t\tif (node.parent) {\n\t\t\t\t\t\t\tnode = node.parent.parent;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// proposals for properties\n\t\t\tif (node && node.type === 'object') {\n\t\t\t\t// don't suggest keys when the cursor is just before the opening curly brace\n\t\t\t\tif (node.start === offset) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t\t// don't suggest properties that are already present\n\t\t\t\tvar properties = (<Parser.ObjectASTNode> node).properties;\n\t\t\t\tproperties.forEach(p => {\n\t\t\t\t\tif (!currentProperty || currentProperty !== p) {\n\t\t\t\t\t\tproposed[p.key.value] = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif (schema) {\n\t\t\t\t\t// property proposals with schema\n\t\t\t\t\tvar isLast = properties.length === 0 || offset >= properties[properties.length - 1].start;\n\t\t\t\t\tthis.getPropertySuggestions(resource, schema, doc, node, currentKey, addValue, isLast, collector);\n\t\t\t\t} else if (node.parent) {\n\t\t\t\t\t// property proposals without schema\n\t\t\t\t\tthis.getSchemaLessPropertySuggestions(doc, node, collector);\n\t\t\t\t}\n\n\t\t\t\tvar location = node.getNodeLocation();\n\t\t\t\tthis.contributions.forEach((contribution) => {\n\t\t\t\t\tvar collectPromise = contribution.collectPropertySuggestions(resource, location, currentWord, addValue, isLast, collector);\n\t\t\t\t\tif (collectPromise) {\n\t\t\t\t\t\tcollectionPromises.push(collectPromise);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// proposals for values\n\t\t\tif (node && (node.type === 'string' || node.type === 'number' || node.type === 'integer' || node.type === 'boolean' || node.type === 'null')) {\n\t\t\t\tvar nodeRange = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n\t\t\t\toverwriteBefore = position.column - nodeRange.startColumn;\n\t\t\t\toverwriteAfter = nodeRange.endColumn - position.column;\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\n\t\t\tif (schema) {\n\t\t\t\t// value proposals with schema\n\t\t\t\tthis.getValueSuggestions(resource, schema, doc, node, offset, collector);\n\t\t\t} else {\n\t\t\t\t// value proposals without schema\n\t\t\t\tthis.getSchemaLessValueSuggestions(doc, node, offset, modelMirror, collector);\n\t\t\t}\n\t\t\tif (!node) {\n\t\t\t\tthis.contributions.forEach((contribution) => {\n\t\t\t\t\tvar collectPromise = contribution.collectDefaultSuggestions(resource, collector);\n\t\t\t\t\tif (collectPromise) {\n\t\t\t\t\t\tcollectionPromises.push(collectPromise);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tif ((node.type === 'property') && offset > (<Parser.PropertyASTNode> node).colonOffset) {\n\t\t\t\t\tvar parentKey = (<Parser.PropertyASTNode>node).key.value;\n\n\t\t\t\t\tvar valueNode = (<Parser.PropertyASTNode> node).value;\n\t\t\t\t\tif (!valueNode || offset <= valueNode.end) {\n\t\t\t\t\t\tvar location = node.parent.getNodeLocation();\n\t\t\t\t\t\tthis.contributions.forEach((contribution) => {\n\t\t\t\t\t\t\tvar collectPromise = contribution.collectValueSuggestions(resource, location, parentKey, collector);\n\t\t\t\t\t\t\tif (collectPromise) {\n\t\t\t\t\t\t\t\tcollectionPromises.push(collectPromise);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\n\t\t\treturn WinJS.Promise.join(collectionPromises).then(() => { return result; } );\n\t\t});\n\t}\n\n\tprivate getPropertySuggestions(resource: URI, schema: SchemaService.ResolvedSchema, doc: Parser.JSONDocument, node: Parser.ASTNode, currentWord: string, addValue: boolean, isLast: boolean, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tvar matchingSchemas: Parser.IApplicableSchema[] = [];\n\t\tdoc.validate(schema.schema, matchingSchemas, node.start);\n\n\t\tmatchingSchemas.forEach((s) => {\n\t\t\tif (s.node === node && !s.inverted) {\n\t\t\t\tvar schemaProperties = s.schema.properties;\n\t\t\t\tif (schemaProperties) {\n\t\t\t\t\tObject.keys(schemaProperties).forEach((key: string) => {\n\t\t\t\t\t\tvar propertySchema = schemaProperties[key];\n\t\t\t\t\t\tcollector.add({ type: 'property', label: key, codeSnippet: this.getTextForProperty(key, propertySchema, addValue, isLast), documentationLabel: propertySchema.description || '' });\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n\n\tprivate getSchemaLessPropertySuggestions(doc: Parser.JSONDocument, node: Parser.ASTNode, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tvar collectSuggestionsForSimilarObject = (obj: Parser.ObjectASTNode) => {\n\t\t\tobj.properties.forEach((p) => {\n\t\t\t\tvar key = p.key.value;\n\t\t\t\tcollector.add({ type: 'property', label: key, codeSnippet: this.getTextForSimilarProperty(key, p.value), documentationLabel: '' });\n\t\t\t});\n\t\t};\n\t\tif (node.parent.type === 'property') {\n\t\t\t// if the object is a property value, check the tree for other objects that hang under a property of the same name\n\t\t\tvar parentKey = (<Parser.PropertyASTNode>node.parent).key.value;\n\t\t\tdoc.visit((n) => {\n\t\t\t\tif (n.type === 'property' && (<Parser.PropertyASTNode>n).key.value === parentKey && (<Parser.PropertyASTNode>n).value && (<Parser.PropertyASTNode>n).value.type === 'object') {\n\t\t\t\t\tcollectSuggestionsForSimilarObject(<Parser.ObjectASTNode> (<Parser.PropertyASTNode>n).value);\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t});\n\t\t} else if (node.parent.type === 'array') {\n\t\t\t// if the object is in an array, use all other array elements as similar objects\n\t\t\t(<Parser.ArrayASTNode> node.parent).items.forEach((n) => {\n\t\t\t\tif (n.type === 'object' && n !== node) {\n\t\t\t\t\tcollectSuggestionsForSimilarObject(<Parser.ObjectASTNode> n);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getSchemaLessValueSuggestions(doc: Parser.JSONDocument, node: Parser.ASTNode, offset: number, modelMirror: EditorCommon.IMirrorModel, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tvar collectSuggestionsForValues = (value: Parser.ASTNode) => {\n\t\t\tvar content = this.getTextForMatchingNode(value, modelMirror);\n\t\t\tcollector.add({ type: this.getSuggestionType(value.type), label: content, codeSnippet: content, documentationLabel: '' });\n\t\t\tif (value.type === 'boolean') {\n\t\t\t\tthis.addBooleanSuggestion(!value.getValue(), collector);\n\t\t\t}\n\t\t};\n\n\t\tif (!node) {\n\t\t\tcollector.add({ type: this.getSuggestionType('object'), label: 'Empty object', codeSnippet: '{\\n\\t{{}}\\n}', documentationLabel: '' });\n\t\t\tcollector.add({ type: this.getSuggestionType('array'), label: 'Empty array', codeSnippet: '[\\n\\t{{}}\\n]', documentationLabel: '' });\n\t\t} else {\n\t\t\tif (node.type === 'property' && offset > (<Parser.PropertyASTNode> node).colonOffset) {\n\t\t\t\tvar valueNode = (<Parser.PropertyASTNode>node).value;\n\t\t\t\tif (valueNode && offset > valueNode.end) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t// suggest values at the same key\n\t\t\t\tvar parentKey = (<Parser.PropertyASTNode>node).key.value;\n\t\t\t\tdoc.visit((n) => {\n\t\t\t\t\tif (n.type === 'property' && (<Parser.PropertyASTNode>n).key.value === parentKey && (<Parser.PropertyASTNode>n).value) {\n\t\t\t\t\t\tcollectSuggestionsForValues((<Parser.PropertyASTNode>n).value);\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (node.type === 'array') {\n\t\t\t\tif (node.parent && node.parent.type === 'property') {\n\t\t\t\t\t// suggest items of an array at the same key\n\t\t\t\t\tvar parentKey = (<Parser.PropertyASTNode>node.parent).key.value;\n\t\t\t\t\tdoc.visit((n) => {\n\t\t\t\t\t\tif (n.type === 'property' && (<Parser.PropertyASTNode>n).key.value === parentKey && (<Parser.PropertyASTNode>n).value && (<Parser.PropertyASTNode>n).value.type === 'array') {\n\t\t\t\t\t\t\t((<Parser.ArrayASTNode>(<Parser.PropertyASTNode>n).value).items).forEach((n) => {\n\t\t\t\t\t\t\t\tcollectSuggestionsForValues(<Parser.ObjectASTNode> n);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t// suggest items in the same array\n\t\t\t\t\t(<Parser.ArrayASTNode> node).items.forEach((n) => {\n\t\t\t\t\t\tcollectSuggestionsForValues(<Parser.ObjectASTNode> n);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\tpublic getValueSuggestions(resource: URI, schema: SchemaService.ResolvedSchema, doc: Parser.JSONDocument, node: Parser.ASTNode, offset: number, collector: JsonWorker.ISuggestionsCollector) : void {\n\n\t\tif (!node) {\n\t\t\tthis.addDefaultSuggestion(schema.schema, collector);\n\t\t} else {\n\t\t\tvar parentKey: string = null;\n\t\t\tif (node && (node.type === 'property') && offset > (<Parser.PropertyASTNode> node).colonOffset) {\n\t\t\t\tvar valueNode = (<Parser.PropertyASTNode> node).value;\n\t\t\t\tif (valueNode && offset > valueNode.end) {\n\t\t\t\t\treturn; // we are past the value node\n\t\t\t\t}\n\t\t\t\tparentKey = (<Parser.PropertyASTNode>node).key.value;\n\t\t\t\tnode = node.parent;\n\t\t\t}\n\t\t\tif (node && (parentKey !== null || node.type === 'array')) {\n\t\t\t\tvar matchingSchemas: Parser.IApplicableSchema[] = [];\n\t\t\t\tdoc.validate(schema.schema, matchingSchemas, node.start);\n\n\t\t\t\tmatchingSchemas.forEach((s) => {\n\t\t\t\t\tif (s.node === node && !s.inverted && s.schema) {\n\t\t\t\t\t\tif (s.schema.items) {\n\t\t\t\t\t\t\tthis.addDefaultSuggestion(s.schema.items, collector);\n\t\t\t\t\t\t\tthis.addEnumSuggestion(s.schema.items, collector);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (s.schema.properties) {\n\t\t\t\t\t\t\tvar propertySchema = s.schema.properties[parentKey];\n\t\t\t\t\t\t\tif (propertySchema) {\n\t\t\t\t\t\t\t\tthis.addDefaultSuggestion(propertySchema, collector);\n\t\t\t\t\t\t\t\tthis.addEnumSuggestion(propertySchema, collector);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addBooleanSuggestion(value: boolean, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tcollector.add({ type: this.getSuggestionType('boolean'), label: value ? 'true' : 'false', codeSnippet: this.getTextForEnumValue(value), documentationLabel: '' });\n\t}\n\n\tprivate addEnumSuggestion(schema: JsonSchema.IJSONSchema, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tif (Array.isArray(schema.enum)) {\n\t\t\tschema.enum.forEach((enm) => collector.add({ type: this.getSuggestionType(schema.type), label: this.getLabelForValue(enm), codeSnippet: this.getTextForEnumValue(enm), documentationLabel: '' }));\n\t\t} else if (schema.type === 'boolean') {\n\t\t\tthis.addBooleanSuggestion(true, collector);\n\t\t\tthis.addBooleanSuggestion(false, collector);\n\t\t}\n\t\tif (Array.isArray(schema.allOf)) {\n\t\t\tschema.allOf.forEach((s) => this.addEnumSuggestion(s, collector));\n\t\t}\n\t\tif (Array.isArray(schema.anyOf)) {\n\t\t\tschema.anyOf.forEach((s) => this.addEnumSuggestion(s, collector));\n\t\t}\n\t\tif (Array.isArray(schema.oneOf)) {\n\t\t\tschema.oneOf.forEach((s) => this.addEnumSuggestion(s, collector));\n\t\t}\n\t}\n\n\tprivate addDefaultSuggestion(schema: JsonSchema.IJSONSchema, collector: JsonWorker.ISuggestionsCollector): void {\n\t\tif (schema.default) {\n\t\t\tcollector.add({\n\t\t\t\ttype: this.getSuggestionType(schema.type),\n\t\t\t\tlabel: this.getLabelForValue(schema.default),\n\t\t\t\tcodeSnippet: this.getTextForValue(schema.default),\n\t\t\t\ttypeLabel:  nls.localize('json.suggest.default', 'Default value'),\n\t\t\t});\n\t\t}\n\t\tif (Array.isArray(schema.defaultSnippets)) {\n\t\t\tschema.defaultSnippets.forEach(s => {\n\t\t\t\tcollector.add({\n\t\t\t\t\ttype: 'snippet',\n\t\t\t\t\tlabel: this.getLabelForSnippetValue(s.body),\n\t\t\t\t\tcodeSnippet: this.getTextForSnippetValue(s.body)\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tif (Array.isArray(schema.allOf)) {\n\t\t\tschema.allOf.forEach((s) => this.addDefaultSuggestion(s, collector));\n\t\t}\n\t\tif (Array.isArray(schema.anyOf)) {\n\t\t\tschema.anyOf.forEach((s) => this.addDefaultSuggestion(s, collector));\n\t\t}\n\t\tif (Array.isArray(schema.oneOf)) {\n\t\t\tschema.oneOf.forEach((s) => this.addDefaultSuggestion(s, collector));\n\t\t}\n\t}\n\n\tprivate getLabelForValue(value: any) : string {\n\t\tvar label = JSON.stringify(value);\n\t\tlabel = label.replace('{{', '').replace('}}', '');\n\t\tif (label.length > 57) {\n\t\t\treturn label.substr(0, 57).trim() + '...';\n\t\t}\n\t\treturn label;\n\t}\n\n\tprivate getLabelForSnippetValue(value: any): string {\n\t\tlet label = JSON.stringify(value);\n\t\tlabel = label.replace(/\\{\\{|\\}\\}/g, '');\n\t\tif (label.length > 57) {\n\t\t\treturn label.substr(0, 57).trim() + '...';\n\t\t}\n\t\treturn label;\n\t}\n\n\tprivate getTextForValue(value: any): string {\n\t\tvar text = JSON.stringify(value, null, '\\t');\n\t\ttext = text.replace(/[\\\\\\{\\}]/g, '\\\\$&');\n\t\treturn text;\n\t}\n\n\tprivate getTextForSnippetValue(value: any): string {\n\t\treturn JSON.stringify(value, null, '\\t');\n\t}\n\n\tprivate getTextForEnumValue(value: any) : string {\n\t\tvar snippet = JSON.stringify(value, null, '\\t');\n\t\tswitch (typeof value) {\n\t\t\tcase 'object':\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn '{{null}}';\n\t\t\t\t}\n\t\t\t\treturn snippet;\n\t\t\tcase 'string':\n\t\t\t\treturn '\"{{' + snippet.substr(1, snippet.length - 2) + '}}\"';\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\t\t\tcase 'boolean':\n\t\t\t\treturn '{{' + snippet + '}}';\n\t\t}\n\t\treturn snippet;\n\t}\n\n\tprivate getSuggestionType(type: any): Modes.SuggestionType {\n\t\tif (Array.isArray(type)) {\n\t\t\tvar array = <any[]> type;\n\t\t\ttype = array.length > 0 ? array[0] : null;\n\t\t}\n\t\tif (!type) {\n\t\t\treturn 'text';\n\t\t}\n\t\tswitch (type) {\n\t\t\tcase 'string': return 'text';\n\t\t\tcase 'object': return 'module';\n\t\t\tcase 'property': return 'property';\n\t\t\tdefault: return 'value';\n\t\t}\n\t}\n\n\n\tprivate getTextForMatchingNode(node: Parser.ASTNode, modelMirror: EditorCommon.IMirrorModel): string {\n\t\tswitch (node.type) {\n\t\t\tcase 'array':\n\t\t\t\treturn '[]';\n\t\t\tcase 'object':\n\t\t\t\treturn '{}';\n\t\t\tdefault:\n\t\t\t\tvar content = modelMirror.getValueInRange(modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start));\n\t\t\t\treturn content;\n\t\t}\n\t}\n\n\tprivate getTextForProperty(key: string, propertySchema: JsonSchema.IJSONSchema, addValue:boolean, isLast: boolean): string {\n\n\t\tlet result = this.getTextForValue(key);\n\t\tif (!addValue) {\n\t\t\treturn result;\n\t\t}\n\t\tresult += ': ';\n\n\t\tvar defaultVal = propertySchema.default;\n\t\tif (!Types.isUndefined(defaultVal)) {\n\t\t\tresult = result + this.getTextForEnumValue(defaultVal);\n\t\t} else if (propertySchema.enum && propertySchema.enum.length > 0) {\n\t\t\tresult = result + this.getTextForEnumValue(propertySchema.enum[0]);\n\t\t} else {\n\t\t\tswitch (propertySchema.type) {\n\t\t\t\tcase 'boolean':\n\t\t\t\t\tresult += '{{false}}';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'string':\n\t\t\t\t\tresult += '\"{{}}\"';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'object':\n\t\t\t\t\tresult += '{\\n\\t{{}}\\n}';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'array':\n\t\t\t\t\tresult += '[\\n\\t{{}}\\n]';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'number':\n\t\t\t\tcase 'integer':\n\t\t\t\t\tresult += '{{0}}';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'null':\n\t\t\t\t\tresult += '{{null}}';\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t\tif (!isLast) {\n\t\t\tresult += ',';\n\t\t}\n\t\treturn result;\n\t}\n\n\tprivate getTextForSimilarProperty(key: string, templateValue: Parser.ASTNode): string {\n\t\treturn this.getTextForValue(key);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Strings = require('vs/base/common/strings');\nimport WinJS = require('vs/base/common/winjs.base');\nimport nls = require('vs/nls');\nimport JSONWorker = require('vs/languages/json/common/jsonWorker');\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport URI from 'vs/base/common/uri';\nimport {JSONLocation} from 'vs/languages/json/common/parser/jsonLocation';\n\nexport class BowerJSONContribution implements JSONWorker.IJSONWorkerContribution {\n\n\tprivate requestService : IRequestService;\n\n\tprivate topRanked = ['twitter','bootstrap','angular-1.1.6','angular-latest','angulerjs','d3','myjquery','jq','abcdef1234567890','jQuery','jquery-1.11.1','jquery',\n\t\t'sushi-vanilla-x-data','font-awsome','Font-Awesome','font-awesome','fontawesome','html5-boilerplate','impress.js','homebrew',\n\t\t'backbone','moment1','momentjs','moment','linux','animate.css','animate-css','reveal.js','jquery-file-upload','blueimp-file-upload','threejs','express','chosen',\n\t\t'normalize-css','normalize.css','semantic','semantic-ui','Semantic-UI','modernizr','underscore','underscore1',\n\t\t'material-design-icons','ionic','chartjs','Chart.js','nnnick-chartjs','select2-ng','select2-dist','phantom','skrollr','scrollr','less.js','leancss','parser-lib',\n\t\t'hui','bootstrap-languages','async','gulp','jquery-pjax','coffeescript','hammer.js','ace','leaflet','jquery-mobile','sweetalert','typeahead.js','soup','typehead.js',\n\t\t'sails','codeigniter2'];\n\n\tpublic constructor(@IRequestService requestService: IRequestService) {\n\t\tthis.requestService = requestService;\n\t}\n\n\tprivate isBowerFile(resource: URI): boolean {\n\t\tvar path = resource.path;\n\t\treturn Strings.endsWith(path, '/bower.json') || Strings.endsWith(path, '/.bower.json');\n\t}\n\n\tpublic collectDefaultSuggestions(resource: URI, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isBowerFile(resource)) {\n\t\t\tvar defaultValue = {\n\t\t\t\t'name': '{{name}}',\n\t\t\t\t'description': '{{description}}',\n\t\t\t\t'authors': [ '{{author}}' ],\n\t\t\t\t'version': '{{1.0.0}}',\n\t\t\t\t'main': '{{pathToMain}}',\n\t\t\t\t'dependencies': {}\n\t\t\t};\n\t\t\tresult.add({ type: 'snippet', label: nls.localize('json.bower.default', 'Default bower.json'), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: JSONWorker.ISuggestionsCollector) : WinJS.Promise {\n\t\tif (this.isBowerFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']))) {\n\t\t\tif (currentWord.length > 0) {\n\t\t\t\tvar queryUrl = 'https://bower.herokuapp.com/packages/search/' + encodeURIComponent(currentWord);\n\n\t\t\t\treturn this.requestService.makeRequest({\n\t\t\t\t\turl : queryUrl\n\t\t\t\t}).then((success) => {\n\t\t\t\t\tif (success.status === 200) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\t\t\tif (Array.isArray(obj)) {\n\t\t\t\t\t\t\t\tvar results = <{name:string; description:string;}[]> obj;\n\t\t\t\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\t\t\tvar name = results[i].name;\n\t\t\t\t\t\t\t\t\tvar description = results[i].description || '';\n\t\t\t\t\t\t\t\t\tvar codeSnippet = JSON.stringify(name);\n\t\t\t\t\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\t\t\t\t\tcodeSnippet += ': \"{{*}}\"';\n\t\t\t\t\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\t\t\t\t\tcodeSnippet += ',';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: description });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresult.setAsIncomplete();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.error(nls.localize('json.bower.error.repoaccess', 'Request to the bower repository failed: {0}', success.responseText));\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}, (error) => {\n\t\t\t\t\tresult.error(nls.localize('json.bower.error.repoaccess', 'Request to the bower repository failed: {0}', error.responseText));\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.topRanked.forEach((name) => {\n\t\t\t\t\tvar codeSnippet = JSON.stringify(name);\n\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\tcodeSnippet += ': \"{{*}}\"';\n\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\tcodeSnippet += ',';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\n\t\t\t\t});\n\t\t\t\tresult.setAsIncomplete();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectValueSuggestions(resource: URI, location: JSONLocation, currentKey: string, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\t// not implemented. Could be do done calling the bower command. Waiting for web API: https://github.com/bower/registry/issues/26\n\t\treturn null;\n\t}\n\n\tpublic getInfoContribution(resource: URI, location: JSONLocation): WinJS.TPromise<HtmlContent.IHTMLContentElement[]> {\n\t\tif (this.isBowerFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']))) {\n\t\t\tvar pack = location.getSegments()[location.getSegments().length - 1];\n\t\t\tvar htmlContent : HtmlContent.IHTMLContentElement[] = [];\n\t\t\thtmlContent.push({className: 'type', text: nls.localize('json.bower.package.hover', '{0}', pack) });\n\n\t\t\tvar queryUrl = 'https://bower.herokuapp.com/packages/' + encodeURIComponent(pack);\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\ttry {\n\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\tif (obj && obj.url) {\n\t\t\t\t\t\tvar url = obj.url;\n\t\t\t\t\t\tif (Strings.startsWith(url, 'git://')) {\n\t\t\t\t\t\t\turl = url.substring(6);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (Strings.endsWith(url, '.git')) {\n\t\t\t\t\t\t\turl = url.substring(0, url.length - 4);\n\t\t\t\t\t\t}\n\t\t\t\t\t\thtmlContent.push({className: 'documentation', text: url });\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t\treturn htmlContent;\n\t\t\t}, (error) => {\n\t\t\t\treturn htmlContent;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Strings = require('vs/base/common/strings');\nimport WinJS = require('vs/base/common/winjs.base');\nimport nls = require('vs/nls');\nimport JSONWorker = require('vs/languages/json/common/jsonWorker');\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport URI from 'vs/base/common/uri';\nimport {JSONLocation} from 'vs/languages/json/common/parser/jsonLocation';\n\nvar LIMIT = 40;\n\nexport class PackageJSONContribution implements JSONWorker.IJSONWorkerContribution {\n\n\tprivate mostDependedOn = [ 'lodash', 'async', 'underscore', 'request', 'commander', 'express', 'debug', 'chalk', 'colors', 'q', 'coffee-script',\n\t\t'mkdirp', 'optimist', 'through2', 'yeoman-generator', 'moment', 'bluebird', 'glob', 'gulp-util', 'minimist', 'cheerio', 'jade', 'redis', 'node-uuid',\n\t\t'socket', 'io', 'uglify-js', 'winston', 'through', 'fs-extra', 'handlebars', 'body-parser', 'rimraf', 'mime', 'semver', 'mongodb', 'jquery',\n\t\t'grunt', 'connect', 'yosay', 'underscore', 'string', 'xml2js', 'ejs', 'mongoose', 'marked', 'extend', 'mocha', 'superagent', 'js-yaml', 'xtend',\n\t\t'shelljs', 'gulp', 'yargs', 'browserify', 'minimatch', 'react', 'less', 'prompt', 'inquirer', 'ws', 'event-stream', 'inherits', 'mysql', 'esprima',\n\t\t'jsdom', 'stylus', 'when', 'readable-stream', 'aws-sdk', 'concat-stream', 'chai', 'promise', 'wrench'];\n\n\tprivate requestService : IRequestService;\n\n\tprivate isPackageJSONFile(resource: URI): boolean {\n\t\tvar path = resource.path;\n\t\treturn Strings.endsWith(path, '/package.json');\n\t}\n\n\tpublic constructor(@IRequestService requestService: IRequestService) {\n\t\tthis.requestService = requestService;\n\t}\n\n\tpublic collectDefaultSuggestions(resource: URI, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isPackageJSONFile(resource)) {\n\t\t\tvar defaultValue = {\n\t\t\t\t'name': '{{name}}',\n\t\t\t\t'description': '{{description}}',\n\t\t\t\t'author': '{{author}}',\n\t\t\t\t'version': '{{1.0.0}}',\n\t\t\t\t'main': '{{pathToMain}}',\n\t\t\t\t'dependencies': {}\n\t\t\t};\n\t\t\tresult.add({ type: 'module', label: nls.localize('json.package.default', 'Default package.json'), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: JSONWorker.ISuggestionsCollector) : WinJS.Promise {\n\t\tif (this.isPackageJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']) || location.matches(['optionalDependencies']) || location.matches(['peerDependencies']))) {\n\t\t\tvar queryUrl : string;\n\t\t\tif (currentWord.length > 0) {\n\t\t\t\tqueryUrl = 'https://skimdb.npmjs.com/registry/_design/app/_view/browseAll?group_level=1&limit=' + LIMIT + '&start_key=%5B%22' + encodeURIComponent(currentWord) + '%22%5D&end_key=%5B%22'+ encodeURIComponent(currentWord + 'z') + '%22,%7B%7D%5D';\n\n\t\t\t\treturn this.requestService.makeRequest({\n\t\t\t\t\turl : queryUrl\n\t\t\t\t}).then((success) => {\n\t\t\t\t\tif (success.status === 200) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\t\t\tif (obj && Array.isArray(obj.rows)) {\n\t\t\t\t\t\t\t\tvar results = <{ key: string[]; }[]> obj.rows;\n\t\t\t\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\t\t\tvar keys = results[i].key;\n\t\t\t\t\t\t\t\t\tif (Array.isArray(keys) && keys.length > 0) {\n\t\t\t\t\t\t\t\t\t\tvar name = keys[0];\n\t\t\t\t\t\t\t\t\t\tvar codeSnippet = JSON.stringify(name);\n\t\t\t\t\t\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\t\t\t\t\t\tcodeSnippet += ': \"{{*}}\"';\n\t\t\t\t\t\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\t\t\t\t\t\tcodeSnippet += ',';\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tresult.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (results.length === LIMIT) {\n\t\t\t\t\t\t\t\t\tresult.setAsIncomplete();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\t// ignore\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.error(nls.localize('json.npm.error.repoaccess', 'Request to the NPM repository failed: {0}', success.responseText));\n\t\t\t\t\t\treturn 0;\n\t\t\t\t\t}\n\t\t\t\t}, (error) => {\n\t\t\t\t\tresult.error(nls.localize('json.npm.error.repoaccess', 'Request to the NPM repository failed: {0}', error.responseText));\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.mostDependedOn.forEach((name) => {\n\t\t\t\t\tvar codeSnippet = JSON.stringify(name);\n\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\tcodeSnippet += ': \"{{*}}\"';\n\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\tcodeSnippet += ',';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult.add({ type: 'property', label: name, codeSnippet: codeSnippet, documentationLabel: '' });\n\t\t\t\t});\n\t\t\t\tresult.setAsIncomplete();\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectValueSuggestions(resource: URI, location: JSONLocation, currentKey: string, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isPackageJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['devDependencies']) || location.matches(['optionalDependencies']) || location.matches(['peerDependencies']))) {\n\t\t\tvar queryUrl = 'http://registry.npmjs.org/' + encodeURIComponent(currentKey) + '/latest';\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\ttry {\n\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\tif (obj && obj.version) {\n\t\t\t\t\t\tvar version = obj.version;\n\t\t\t\t\t\tvar name = JSON.stringify(version);\n\t\t\t\t\t\tresult.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize('json.npm.latestversion', 'The currently latest version of the package') });\n\t\t\t\t\t\tname = JSON.stringify('^' + version);\n\t\t\t\t\t\tresult.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize('json.npm.majorversion', 'Matches the most recent major version (1.x.x)') });\n\t\t\t\t\t\tname = JSON.stringify('~' + version);\n\t\t\t\t\t\tresult.add({ type: 'class', label: name, codeSnippet: name, documentationLabel: nls.localize('json.npm.minorversion', 'Matches the most recent minor version (1.2.x)') });\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, (error) => {\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getInfoContribution(resource: URI, location: JSONLocation): WinJS.TPromise<HtmlContent.IHTMLContentElement[]> {\n\t\tif (this.isPackageJSONFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['devDependencies', '*']) || location.matches(['optionalDependencies', '*']) || location.matches(['peerDependencies', '*']))) {\n\t\t\tvar pack = location.getSegments()[location.getSegments().length - 1];\n\n\t\t\tvar htmlContent : HtmlContent.IHTMLContentElement[] = [];\n\t\t\thtmlContent.push({className: 'type', text: nls.localize('json.npm.package.hover', '{0}', pack) });\n\n\t\t\tvar queryUrl = 'http://registry.npmjs.org/' + encodeURIComponent(pack) + '/latest';\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\ttry {\n\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\tif (obj) {\n\t\t\t\t\t\tif (obj.description) {\n\t\t\t\t\t\t\thtmlContent.push({className: 'documentation', text: obj.description });\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (obj.version) {\n\t\t\t\t\t\t\thtmlContent.push({className: 'documentation', text: nls.localize('json.npm.version.hover', 'Latest version: {0}', obj.version) });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t\treturn htmlContent;\n\t\t\t}, (error) => {\n\t\t\t\treturn htmlContent;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Strings = require('vs/base/common/strings');\nimport WinJS = require('vs/base/common/winjs.base');\nimport nls = require('vs/nls');\nimport JSONWorker = require('vs/languages/json/common/jsonWorker');\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport {JSONLocation} from 'vs/languages/json/common/parser/jsonLocation';\nimport URI from 'vs/base/common/uri';\n\nvar LIMIT = 40;\n\nexport class ProjectJSONContribution implements JSONWorker.IJSONWorkerContribution {\n\n\tprivate requestService : IRequestService;\n\n\tpublic constructor(@IRequestService requestService: IRequestService) {\n\t\tthis.requestService = requestService;\n\t}\n\n\tprivate isProjectJSONFile(resource: URI): boolean {\n\t\tvar path = resource.path;\n\t\treturn Strings.endsWith(path, '/project.json');\n\t}\n\n\tpublic collectDefaultSuggestions(resource: URI, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isProjectJSONFile(resource)) {\n\t\t\tvar defaultValue = {\n\t\t\t\t'version': '{{1.0.0-*}}',\n\t\t\t\t'dependencies': {},\n\t\t\t\t'frameworks': {\n\t\t\t\t\t'dnx451': {},\n\t\t\t\t\t'dnxcore50': {}\n\t\t\t\t}\n\t\t\t};\n\t\t\tresult.add({ type: 'snippet', label: nls.localize('json.project.default', 'Default project.json'), codeSnippet: JSON.stringify(defaultValue, null, '\\t'), documentationLabel: '' });\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: JSONWorker.ISuggestionsCollector) : WinJS.Promise {\n\t\tif (this.isProjectJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['frameworks', '*', 'dependencies']) || location.matches(['frameworks', '*', 'frameworkAssemblies']))) {\n\t\t\tvar queryUrl : string;\n\t\t\tif (currentWord.length > 0) {\n\t\t\t\tqueryUrl = 'https://www.nuget.org/api/v2/Packages?'\n\t\t\t\t\t+ '$filter=Id%20ge%20\\''\n\t\t\t\t\t+ encodeURIComponent(currentWord)\n\t\t\t\t\t+ '\\'%20and%20Id%20lt%20\\''\n\t\t\t\t\t+ encodeURIComponent(currentWord + 'z')\n\t\t\t\t\t+ '\\'%20and%20IsAbsoluteLatestVersion%20eq%20true'\n\t\t\t\t\t+ '&$select=Id,Version,Description&$format=json&$top=' + LIMIT;\n\t\t\t} else {\n\t\t\t\tqueryUrl = 'https://www.nuget.org/api/v2/Packages?'\n\t\t\t\t\t+ '$filter=IsAbsoluteLatestVersion%20eq%20true'\n\t\t\t\t\t+ '&$orderby=DownloadCount%20desc&$top=' + LIMIT\n\t\t\t\t\t+ '&$select=Id,Version,DownloadCount,Description&$format=json';\n\t\t\t}\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\tif (success.status === 200) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\t\tif (Array.isArray(obj.d)) {\n\t\t\t\t\t\t\tvar results = <any[]> obj.d;\n\t\t\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\t\tvar curr = results[i];\n\t\t\t\t\t\t\t\tvar name = curr.Id;\n\t\t\t\t\t\t\t\tvar version = curr.Version;\n\t\t\t\t\t\t\t\tif (name) {\n\t\t\t\t\t\t\t\t\tvar documentation = curr.Description;\n\t\t\t\t\t\t\t\t\tvar typeLabel = curr.Version;\n\t\t\t\t\t\t\t\t\tvar codeSnippet = JSON.stringify(name);\n\t\t\t\t\t\t\t\t\tif (addValue) {\n\t\t\t\t\t\t\t\t\t\tcodeSnippet += ': \"{{' + version + '}}\"';\n\t\t\t\t\t\t\t\t\t\tif (!isLast) {\n\t\t\t\t\t\t\t\t\t\t\tcodeSnippet += ',';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tresult.add({ type: 'property', label: name, codeSnippet: codeSnippet, typeLabel: typeLabel, documentationLabel: documentation });\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (results.length === LIMIT) {\n\t\t\t\t\t\t\t\tresult.setAsIncomplete();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.error(nls.localize('json.nugget.error.repoaccess', 'Request to the nuget repository failed: {0}', success.responseText));\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t}, (error) => {\n\t\t\t\tresult.error(nls.localize('json.nugget.error.repoaccess', 'Request to the nuget repository failed: {0}', error.responseText));\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic collectValueSuggestions(resource: URI, location: JSONLocation, currentKey: string, result: JSONWorker.ISuggestionsCollector): WinJS.Promise {\n\t\tif (this.isProjectJSONFile(resource) && (location.matches(['dependencies']) || location.matches(['frameworks', '*', 'dependencies']) || location.matches(['frameworks', '*', 'frameworkAssemblies']))) {\n\t\t\tvar queryUrl = 'https://www.myget.org/F/aspnetrelease/api/v2/Packages?'\n\t\t\t\t\t+ '$filter=Id%20eq%20\\''\n\t\t\t\t\t+ encodeURIComponent(currentKey)\n\t\t\t\t\t+ '\\'&$select=Version,IsAbsoluteLatestVersion&$format=json&$top=' + LIMIT;\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\ttry {\n\t\t\t\t\tvar obj = JSON.parse(success.responseText);\n\t\t\t\t\tif (Array.isArray(obj.d)) {\n\t\t\t\t\t\tvar results = <any[]> obj.d;\n\t\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\n\t\t\t\t\t\t\tvar curr = results[i];\n\t\t\t\t\t\t\tvar version = curr.Version;\n\t\t\t\t\t\t\tif (version) {\n\t\t\t\t\t\t\t\tvar name = JSON.stringify(version);\n\t\t\t\t\t\t\t\tvar isLatest = curr.IsAbsoluteLatestVersion === 'true';\n\t\t\t\t\t\t\t\tvar label = name;\n\t\t\t\t\t\t\t\tvar documentationLabel = '';\n\t\t\t\t\t\t\t\tif (isLatest) {\n\t\t\t\t\t\t\t\t\tdocumentationLabel = nls.localize('json.nugget.versiondescription.suggest', 'The currently latest version of the package');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tresult.add({ type: 'class', label: label, codeSnippet: name, documentationLabel: documentationLabel });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (results.length === LIMIT) {\n\t\t\t\t\t\t\tresult.setAsIncomplete();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\t// ignore\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t}, (error) => {\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\tpublic getInfoContribution(resource: URI, location: JSONLocation): WinJS.TPromise<HtmlContent.IHTMLContentElement[]> {\n\t\tif (this.isProjectJSONFile(resource) && (location.matches(['dependencies', '*']) || location.matches(['frameworks', '*', 'dependencies', '*']) || location.matches(['frameworks', '*', 'frameworkAssemblies', '*']))) {\n\t\t\tvar pack = location.getSegments()[location.getSegments().length - 1];\n\n\t\t\tvar htmlContent : HtmlContent.IHTMLContentElement[] = [];\n\t\t\thtmlContent.push({className: 'type', text: nls.localize('json.nugget.package.hover', '{0}', pack) });\n\n\t\t\tvar queryUrl = 'https://www.myget.org/F/aspnetrelease/api/v2/Packages?'\n\t\t\t\t+ '$filter=Id%20eq%20\\''\n\t\t\t\t+ encodeURIComponent(pack)\n\t\t\t\t+ '\\'%20and%20IsAbsoluteLatestVersion%20eq%20true'\n\t\t\t\t+ '&$select=Version,Description&$format=json&$top=5';\n\n\t\t\treturn this.requestService.makeRequest({\n\t\t\t\turl : queryUrl\n\t\t\t}).then((success) => {\n\t\t\t\tvar content = success.responseText;\n\t\t\t\tif (content) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tvar obj = JSON.parse(content);\n\t\t\t\t\t\tif (obj.d && obj.d[0]) {\n\t\t\t\t\t\t\tvar res = obj.d[0];\n\t\t\t\t\t\t\tif (res.Description) {\n\t\t\t\t\t\t\t\thtmlContent.push({className: 'documentation', text: res.Description });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (res.Version) {\n\t\t\t\t\t\t\t\thtmlContent.push({className: 'documentation', text: nls.localize('json.nugget.version.hover', 'Latest version: {0}', res.Version) });\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t// ignore\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn htmlContent;\n\t\t\t}, (error) => {\n\t\t\t\treturn htmlContent;\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nimport nls = require('vs/nls');\nimport Objects = require('vs/base/common/objects');\nimport Json = require('vs/base/common/json');\nimport http = require('vs/base/common/http');\nimport {IJSONSchema, IJSONSchemaMap} from 'vs/base/common/jsonSchema';\nimport Strings = require('vs/base/common/strings');\nimport URI from 'vs/base/common/uri';\nimport Types = require('vs/base/common/types');\nimport Parser = require('vs/languages/json/common/parser/jsonParser');\nimport WinJS = require('vs/base/common/winjs.base');\nimport {IResourceService, ResourceEvents, IResourceChangedEvent} from 'vs/editor/common/services/resourceService';\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {ISchemaContributions} from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport {IDisposable, dispose} from 'vs/base/common/lifecycle';\n\nexport interface IJSONSchemaService {\n\n\t/**\n\t * Registers a schema file in the current workspace to be applicable to files that match the pattern\n\t */\n\tregisterExternalSchema(uri:string, filePatterns?: string[], unresolvedSchema?: IJSONSchema):ISchemaHandle;\n\n\t/**\n\t * Clears all cached schema files\n\t */\n\tclearExternalSchemas():void;\n\n\t/**\n\t * Registers contributed schemas\n\t */\n\tsetSchemaContributions(schemaContributions:ISchemaContributions):void;\n\n\t/**\n\t * Looks up the appropriate schema for the given URI\n\t */\n\tgetSchemaForResource(resource:string, document: Parser.JSONDocument):WinJS.TPromise<ResolvedSchema>;\n}\n\nexport interface ISchemaHandle {\n\t/**\n\t * The schema id\n\t */\n\turl: string;\n\n\t/**\n\t * The schema from the file, with potential $ref references\n\t */\n\tgetUnresolvedSchema():WinJS.TPromise<UnresolvedSchema>;\n\n\t/**\n\t * The schema from the file, with references resolved\n\t */\n\tgetResolvedSchema():WinJS.TPromise<ResolvedSchema>;\n}\n\n\ninterface InlineReferencePointer {\n\tparent: any;\n\tkey: any;\n\tvalue: any;\n}\n\nclass FilePatternAssociation {\n\n\tprivate schemas: string[];\n\tprivate combinedSchemaId: string;\n\tprivate patternRegExp: RegExp;\n\tprivate combinedSchema: ISchemaHandle;\n\n\tconstructor(pattern: string) {\n\t\tthis.combinedSchemaId = 'local://combinedSchema/' + encodeURIComponent(pattern);\n\t\ttry {\n\t\t\tthis.patternRegExp = new RegExp(Strings.convertSimple2RegExpPattern(pattern) + '$');\n\t\t} catch (e) {\n\t\t\t// invalid pattern\n\t\t\tthis.patternRegExp = null;\n\t\t}\n\t\tthis.schemas = [];\n\t\tthis.combinedSchema = null;\n\t}\n\n\tpublic addSchema(id: string) {\n\t\tthis.schemas.push(id);\n\t\tthis.combinedSchema = null;\n\t}\n\n\tpublic matchesPattern(fileName: string) : boolean {\n\t\treturn this.patternRegExp && this.patternRegExp.test(fileName);\n\t}\n\n\tpublic getCombinedSchema(service: JSONSchemaService) : ISchemaHandle {\n\t\tif (!this.combinedSchema) {\n\t\t\tthis.combinedSchema = service.createCombinedSchema(this.combinedSchemaId, this.schemas);\n\t\t}\n\t\treturn this.combinedSchema;\n\t}\n}\n\nclass SchemaHandle implements ISchemaHandle {\n\n\tpublic url: string;\n\n\tprivate resolvedSchema: WinJS.TPromise<ResolvedSchema>;\n\tprivate unresolvedSchema: WinJS.TPromise<UnresolvedSchema>;\n\tprivate service: JSONSchemaService;\n\n\tconstructor(service: JSONSchemaService, url:string, unresolvedSchemaContent?: IJSONSchema) {\n\t\tthis.service = service;\n\t\tthis.url = url;\n\t\tif (unresolvedSchemaContent) {\n\t\t\tthis.unresolvedSchema = WinJS.TPromise.as(new UnresolvedSchema(unresolvedSchemaContent));\n\t\t}\n\t}\n\n\tpublic getUnresolvedSchema():WinJS.TPromise<UnresolvedSchema> {\n\t\tif (!this.unresolvedSchema) {\n\t\t\tthis.unresolvedSchema = this.service.loadSchema(this.url);\n\t\t}\n\t\treturn this.unresolvedSchema;\n\t}\n\n\tpublic getResolvedSchema():WinJS.TPromise<ResolvedSchema> {\n\t\tif (!this.resolvedSchema) {\n\t\t\tthis.resolvedSchema = this.getUnresolvedSchema().then(unresolved => {\n\t\t\t\treturn this.service.resolveSchemaContent(unresolved);\n\t\t\t});\n\t\t}\n\t\treturn this.resolvedSchema;\n\t}\n\n\tpublic clearSchema() : void {\n\t\tthis.resolvedSchema = null;\n\t\tthis.unresolvedSchema = null;\n\t}\n}\n\nexport class UnresolvedSchema {\n\tpublic schema: IJSONSchema;\n\tpublic errors: string[];\n\n\tconstructor(schema: IJSONSchema, errors: string[] = []) {\n\t\tthis.schema = schema;\n\t\tthis.errors = errors;\n\t}\n}\n\nexport class ResolvedSchema {\n\tpublic schema: IJSONSchema;\n\tpublic errors: string[];\n\n\tconstructor(schema: IJSONSchema, errors: string[] = []) {\n\t\tthis.schema = schema;\n\t\tthis.errors = errors;\n\t}\n\n\tpublic getSection(path: string[]): IJSONSchema {\n\t\treturn this.getSectionRecursive(path, this.schema);\n\t}\n\n\tprivate getSectionRecursive(path: string[], schema: IJSONSchema): IJSONSchema {\n\t\tif (!schema || path.length === 0) {\n\t\t\treturn schema;\n\t\t}\n\t\tvar next = path.shift();\n\n\t\tif (schema.properties && schema.properties[next]) {\n\t\t\treturn this.getSectionRecursive(path, schema.properties[next]);\n\t\t} else if (Types.isObject(schema.patternProperties)) {\n\t\t\tObject.keys(schema.patternProperties).forEach((pattern) => {\n\t\t\t\tvar regex = new RegExp(pattern);\n\t\t\t\tif (regex.test(next)) {\n\t\t\t\t\treturn this.getSectionRecursive(path, schema.patternProperties[pattern]);\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (Types.isObject(schema.additionalProperties)) {\n\t\t\treturn this.getSectionRecursive(path, schema.additionalProperties);\n\t\t} else if (next.match('[0-9]+')) {\n\t\t\tif (Types.isObject(schema.items)) {\n\t\t\t\treturn this.getSectionRecursive(path, schema.items);\n\t\t\t} else if (Array.isArray(schema.items)) {\n\t\t\t\ttry {\n\t\t\t\t\tvar index = parseInt(next, 10);\n\t\t\t\t\tif (schema.items[index]) {\n\t\t\t\t\t\treturn this.getSectionRecursive(path, schema.items[index]);\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tcatch (e) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n}\n\nexport class JSONSchemaService implements IJSONSchemaService {\n\n\tprivate contributionSchemas:{ [id:string]:SchemaHandle };\n\tprivate contributionAssociations:{ [id:string]:string[] };\n\n\tprivate schemasById: { [id:string]:SchemaHandle };\n\tprivate filePatternAssociations: FilePatternAssociation[];\n\tprivate filePatternAssociationById: { [id:string]: FilePatternAssociation };\n\n\tprivate requestService: IRequestService;\n\tprivate contextService : IWorkspaceContextService;\n\tprivate callOnDispose:IDisposable[];\n\n\tconstructor(@IRequestService requestService: IRequestService,\n\t\t@IWorkspaceContextService contextService?: IWorkspaceContextService,\n\t\t@IResourceService resourceService?: IResourceService) {\n\t\tthis.requestService = requestService;\n\t\tthis.contextService = contextService;\n\t\tthis.callOnDispose = [];\n\n\t\tif (resourceService) {\n\t\t\tthis.callOnDispose.push(resourceService.addListener2_(ResourceEvents.CHANGED, (e: IResourceChangedEvent) => this.onResourceChange(e)));\n\t\t}\n\n\t\tthis.contributionSchemas = {};\n\t\tthis.contributionAssociations = {};\n\t\tthis.schemasById = {};\n\t\tthis.filePatternAssociations = [];\n\t\tthis.filePatternAssociationById = {};\n\t}\n\n\tpublic dispose(): void {\n\t\tthis.callOnDispose = dispose(this.callOnDispose);\n\t}\n\n\tprivate onResourceChange(e: IResourceChangedEvent): void {\n\t\tvar url = e.url.toString();\n\t\tvar schemaFile = this.schemasById[url];\n\t\tif (schemaFile) {\n\t\t\tschemaFile.clearSchema();\n\t\t}\n\t}\n\n\tprivate normalizeId(id: string) {\n\t\tif (id.length > 0 && id.charAt(id.length - 1) === '#') {\n\t\t\treturn id.substring(0, id.length - 1);\n\t\t}\n\t\treturn id;\n\t}\n\n\tpublic setSchemaContributions(schemaContributions: ISchemaContributions): void {\n\t\tif (schemaContributions.schemas) {\n\t\t\tvar schemas = schemaContributions.schemas;\n\t\t\tfor (let id in schemas) {\n\t\t\t\tid = this.normalizeId(id);\n\t\t\t\tthis.contributionSchemas[id] = this.addSchemaHandle(id, schemas[id]);\n\t\t\t}\n\t\t}\n\t}\n\n\tprivate addSchemaHandle(id:string, unresolvedSchemaContent?: IJSONSchema) : SchemaHandle {\n\t\tvar schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n\t\tthis.schemasById[id] = schemaHandle;\n\t\treturn schemaHandle;\n\t}\n\n\tprivate getOrAddSchemaHandle(id:string, unresolvedSchemaContent?: IJSONSchema) : ISchemaHandle {\n\t\treturn this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n\t}\n\n\tprivate getOrAddFilePatternAssociation(pattern: string) {\n\t\tvar fpa = this.filePatternAssociationById[pattern];\n\t\tif (!fpa) {\n\t\t\tfpa = new FilePatternAssociation(pattern);\n\t\t\tthis.filePatternAssociationById[pattern] = fpa;\n\t\t\tthis.filePatternAssociations.push(fpa);\n\t\t}\n\t\treturn fpa;\n\t}\n\n\tpublic registerExternalSchema(uri:string, filePatterns: string[] = null, unresolvedSchemaContent?: IJSONSchema) : ISchemaHandle {\n\t\tvar id = this.normalizeId(uri);\n\n\t\tif (filePatterns) {\n\t\t\tfilePatterns.forEach(pattern => {\n\t\t\t\tthis.getOrAddFilePatternAssociation(pattern).addSchema(uri);\n\t\t\t});\n\t\t}\n\t\treturn unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n\t}\n\n\tpublic clearExternalSchemas():void {\n\t\tthis.schemasById = {};\n\t\tthis.filePatternAssociations = [];\n\t\tthis.filePatternAssociationById = {};\n\n\t\tfor (var id in this.contributionSchemas) {\n\t\t\tthis.schemasById[id] = this.contributionSchemas[id];\n\t\t}\n\t\tfor (var pattern in this.contributionAssociations) {\n\t\t\tvar fpa = this.getOrAddFilePatternAssociation(pattern);\n\n\t\t\tthis.contributionAssociations[pattern].forEach(schemaId => {\n\t\t\t\tvar id = this.normalizeId(schemaId);\n\t\t\t\tfpa.addSchema(id);\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic getResolvedSchema(schemaId:string): WinJS.TPromise<ResolvedSchema> {\n\t\tvar id = this.normalizeId(schemaId);\n\t\tvar schemaHandle = this.schemasById[id];\n\t\tif (schemaHandle) {\n\t\t\treturn schemaHandle.getResolvedSchema();\n\t\t}\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tpublic loadSchema(url:string) : WinJS.TPromise<UnresolvedSchema> {\n\t\treturn this.requestService.makeRequest({ url: url }).then(\n\t\t\trequest => {\n\t\t\t\tvar content = request.responseText;\n\t\t\t\tif (!content) {\n\t\t\t\t\tvar errorMessage = nls.localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n\t\t\t\t\treturn new UnresolvedSchema(<IJSONSchema> {}, [ errorMessage ]);\n\t\t\t\t}\n\n\t\t\t\tvar schemaContent: IJSONSchema = {};\n\t\t\t\tvar jsonErrors: Json.ParseError[] = [];\n\t\t\t\tschemaContent = Json.parse(content, jsonErrors);\n\t\t\t\tvar errors = jsonErrors.length ? [ nls.localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': {1}.', toDisplayString(url), Json.getParseErrorMessage(jsonErrors[0].error))] : [];\n\t\t\t\treturn new UnresolvedSchema(schemaContent, errors);\n\t\t\t},\n\t\t\t(error : http.IXHRResponse) => {\n\t\t\t\tvar errorMessage = nls.localize('json.schema.unabletoload', 'Unable to load schema from \\'{0}\\': {1}', toDisplayString(url), error.responseText || http.getErrorStatusDescription(error.status) || error.toString());\n\t\t\t\treturn new UnresolvedSchema(<IJSONSchema> {}, [ errorMessage ]);\n\t\t\t}\n\t\t);\n\t}\n\n\tpublic resolveSchemaContent(schemaToResolve: UnresolvedSchema): WinJS.TPromise<ResolvedSchema> {\n\n\t\tvar resolveErrors : string[] = schemaToResolve.errors.slice(0);\n\t\tvar schema = schemaToResolve.schema;\n\n\t\tvar findSection = (schema: IJSONSchema, path: string): any => {\n\t\t\tif (!path) {\n\t\t\t\treturn schema;\n\t\t\t}\n\t\t\tvar current: any = schema;\n\t\t\tpath.substr(1).split('/').some((part) => {\n\t\t\t\tcurrent = current[part];\n\t\t\t\treturn !current;\n\t\t\t});\n\t\t\treturn current;\n\t\t};\n\n\t\tvar resolveLink = (node: any, linkedSchema: IJSONSchema, linkPath: string): void => {\n\t\t\tvar section = findSection(linkedSchema, linkPath);\n\t\t\tif (typeof section === 'object') {\n\t\t\t\tObjects.mixin(node, section, false);\n\t\t\t} else {\n\t\t\t\tresolveErrors.push(nls.localize('json.schema.invalidref', '$ref \\'{0}\\' in {1} can not be resolved.', linkPath, linkedSchema.id));\n\t\t\t}\n\t\t\tdelete node.$ref;\n\t\t};\n\n\t\tvar resolveExternalLink = (node: any, uri: string, linkPath: string): WinJS.Promise => {\n\t\t\treturn this.getOrAddSchemaHandle(uri).getUnresolvedSchema().then(unresolvedSchema => {\n\t\t\t\tif (unresolvedSchema.errors.length) {\n\t\t\t\t\tvar loc = linkPath ? uri + '#' + linkPath : uri;\n\t\t\t\t\tresolveErrors.push(nls.localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n\t\t\t\t}\n\t\t\t\tresolveLink(node, unresolvedSchema.schema, linkPath);\n\t\t\t\treturn resolveRefs(node, unresolvedSchema.schema);\n\t\t\t});\n\t\t};\n\n\t\tlet resolveRefs = (node: IJSONSchema, parentSchema: IJSONSchema): WinJS.Promise => {\n\t\t\tlet toWalk : IJSONSchema[] = [node];\n\t\t\tlet seen: IJSONSchema[] = [];\n\n\t\t\tvar openPromises: WinJS.Promise[] = [];\n\n\t\t\tlet collectEntries = (...entries: IJSONSchema[]) => {\n\t\t\t\tfor (let entry of entries) {\n\t\t\t\t\tif (typeof entry === 'object') {\n\t\t\t\t\t\ttoWalk.push(entry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tlet collectMapEntries = (...maps: IJSONSchemaMap[]) => {\n\t\t\t\tfor (let map of maps) {\n\t\t\t\t\tif (typeof map === 'object') {\n\t\t\t\t\t\tfor (let key in map) {\n\t\t\t\t\t\t\tlet entry = map[key];\n\t\t\t\t\t\t\ttoWalk.push(entry);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tlet collectArrayEntries = (...arrays: IJSONSchema[][]) => {\n\t\t\t\tfor (let array of arrays) {\n\t\t\t\t\tif (Array.isArray(array)) {\n\t\t\t\t\t\ttoWalk.push.apply(toWalk, array);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\twhile (toWalk.length) {\n\t\t\t\tlet next = toWalk.pop();\n\t\t\t\tif (seen.indexOf(next) >= 0) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tseen.push(next);\n\t\t\t\tif (next.$ref) {\n\t\t\t\t\tlet segments = next.$ref.split('#', 2);\n\t\t\t\t\tif (segments[0].length > 0) {\n\t\t\t\t\t\topenPromises.push(resolveExternalLink(next, segments[0], segments[1]));\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolveLink(next, parentSchema, segments[1]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcollectEntries(next.items, next.additionalProperties, next.not);\n\t\t\t\tcollectMapEntries(next.definitions, next.properties, next.patternProperties, <IJSONSchemaMap> next.dependencies);\n\t\t\t\tcollectArrayEntries(next.anyOf, next.allOf, next.oneOf, <IJSONSchema[]> next.items);\n\t\t\t}\n\n\t\t\treturn WinJS.Promise.join(openPromises);\n\t\t};\n\n\t\treturn resolveRefs(schema, schema).then(_ => new ResolvedSchema(schema, resolveErrors));\n\t}\n\n\tpublic getSchemaForResource(resource: string, document: Parser.JSONDocument): WinJS.TPromise<ResolvedSchema> {\n\n\t\t// first use $schema if present\n\t\tif (document && document.root && document.root.type === 'object') {\n\t\t\tvar schemaProperties = (<Parser.ObjectASTNode> document.root).properties.filter((p) => (p.key.value === '$schema') && !!p.value);\n\t\t\tif (schemaProperties.length > 0) {\n\t\t\t\tvar schemeId = <string> schemaProperties[0].value.getValue();\n\t\t\t\tif (!Strings.startsWith(schemeId, 'http://') && !Strings.startsWith(schemeId, 'https://') && !Strings.startsWith(schemeId, 'file://')) {\n\t\t\t\t\tvar resourceURL = this.contextService.toResource(schemeId);\n\t\t\t\t\tif (resourceURL) {\n\t\t\t\t\t\tschemeId = resourceURL.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (schemeId) {\n\t\t\t\t\tvar id = this.normalizeId(schemeId);\n\t\t\t\t\treturn this.getOrAddSchemaHandle(id).getResolvedSchema();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// then check for matching file names, last to first\n\t\tfor (var i= this.filePatternAssociations.length - 1; i >= 0 ; i--) {\n\t\t\tvar entry = this.filePatternAssociations[i];\n\t\t\tif (entry.matchesPattern(resource)) {\n\t\t\t\treturn entry.getCombinedSchema(this).getResolvedSchema();\n\t\t\t}\n\t\t}\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tpublic createCombinedSchema(combinedSchemaId: string, schemaIds: string[]) : ISchemaHandle {\n\t\tif (schemaIds.length === 1) {\n\t\t\treturn this.getOrAddSchemaHandle(schemaIds[0]);\n\t\t} else {\n\t\t\tvar combinedSchema: IJSONSchema = {\n\t\t\t\tallOf: schemaIds.map(schemaId => ({ $ref: schemaId }))\n\t\t\t};\n\t\t\treturn this.addSchemaHandle(combinedSchemaId, combinedSchema);\n\t\t}\n\t}\n}\n\nfunction toDisplayString(url:string) {\n\ttry {\n\t\tvar uri = URI.parse(url);\n\t\tif (uri.scheme === 'file') {\n\t\t\treturn uri.fsPath;\n\t\t}\n\t} catch (e) {\n\t\t// ignore\n\t}\n\treturn url;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n'use strict';\n\nimport URI from 'vs/base/common/uri';\nimport Severity from 'vs/base/common/severity';\nimport EditorCommon = require('vs/editor/common/editorCommon');\nimport Modes = require('vs/editor/common/modes');\nimport HtmlContent = require('vs/base/common/htmlContent');\nimport Parser = require('./parser/jsonParser');\nimport JSONFormatter = require('vs/base/common/jsonFormatter');\nimport SchemaService = require('./jsonSchemaService');\nimport JSONSchema = require('vs/base/common/jsonSchema');\nimport JSONIntellisense = require('./jsonIntellisense');\nimport WinJS = require('vs/base/common/winjs.base');\nimport Strings = require('vs/base/common/strings');\nimport ProjectJSONContribution = require('./contributions/projectJSONContribution');\nimport PackageJSONContribution = require('./contributions/packageJSONContribution');\nimport BowerJSONContribution = require('./contributions/bowerJSONContribution');\nimport GlobPatternContribution = require('./contributions/globPatternContribution');\nimport errors = require('vs/base/common/errors');\nimport {IMarkerService, IMarkerData} from 'vs/platform/markers/common/markers';\nimport {IRequestService} from 'vs/platform/request/common/request';\nimport {IWorkspaceContextService} from 'vs/platform/workspace/common/workspace';\nimport {ISchemaContributions} from 'vs/platform/jsonschemas/common/jsonContributionRegistry';\nimport {IResourceService} from 'vs/editor/common/services/resourceService';\nimport {IInstantiationService} from 'vs/platform/instantiation/common/instantiation';\nimport {JSONLocation} from './parser/jsonLocation';\nimport {filterSuggestions} from 'vs/editor/common/modes/supports/suggestSupport';\nimport {ValidationHelper} from 'vs/editor/common/worker/validationHelper';\n\nexport interface IOptionsSchema {\n\t/**\n\t * HTTP schema URL or a relative path to schema file in workspace\n\t */\n\turl: string;\n\t/**\n\t * The patterns (e.g. *.pack.json) to map files to this schema\n\t */\n\tfileMatch: string[];\n\t/**\n\t * A unresolved schema definition. Optional, to avoid fetching from a URL.\n\t */\n\tschema?: JSONSchema.IJSONSchema;\n\n\t/* deprecated */\n\tschemaPath: string;\n\t/* deprecated */\n\tfilePattern: string;\n}\n\nexport interface IOptions {\n\tschemas: IOptionsSchema[];\n}\n\nexport interface ISuggestionsCollector {\n\tadd(suggestion: Modes.ISuggestion): void;\n\tsetAsIncomplete() : void;\n\terror(message:string): void;\n}\n\nexport interface IJSONWorkerContribution {\n\tgetInfoContribution(resource: URI, location: JSONLocation) : WinJS.TPromise<HtmlContent.IHTMLContentElement[]>;\n\tcollectPropertySuggestions(resource: URI, location: JSONLocation, currentWord: string, addValue: boolean, isLast:boolean, result: ISuggestionsCollector) : WinJS.Promise;\n\tcollectValueSuggestions(resource: URI, location: JSONLocation, propertyKey: string, result: ISuggestionsCollector): WinJS.Promise;\n\tcollectDefaultSuggestions(resource: URI, result: ISuggestionsCollector): WinJS.Promise;\n}\n\nexport class JSONWorker {\n\n\tprivate schemaService: SchemaService.IJSONSchemaService;\n\tprivate requestService: IRequestService;\n\tprivate contextService: IWorkspaceContextService;\n\tprivate jsonIntellisense : JSONIntellisense.JSONIntellisense;\n\tprivate contributions: IJSONWorkerContribution[];\n\tprivate _validationHelper: ValidationHelper;\n\tprivate resourceService:IResourceService;\n\tprivate markerService: IMarkerService;\n\tprivate _modeId: string;\n\n\tconstructor(\n\t\tmodeId: string,\n\t\t@IResourceService resourceService: IResourceService,\n\t\t@IMarkerService markerService: IMarkerService,\n\t\t@IRequestService requestService: IRequestService,\n\t\t@IWorkspaceContextService contextService: IWorkspaceContextService,\n\t\t@IInstantiationService instantiationService: IInstantiationService\n\t) {\n\n\t\tthis._modeId = modeId;\n\t\tthis.resourceService = resourceService;\n\t\tthis.markerService = markerService;\n\n\t\tthis._validationHelper = new ValidationHelper(\n\t\t\tthis.resourceService,\n\t\t\tthis._modeId,\n\t\t\t(toValidate) => this.doValidate(toValidate)\n\t\t);\n\n\t\tthis.requestService = requestService;\n\t\tthis.contextService = contextService;\n\t\tthis.schemaService = instantiationService.createInstance(SchemaService.JSONSchemaService);\n\n\t\tthis.contributions = [\n\t\t\tinstantiationService.createInstance(ProjectJSONContribution.ProjectJSONContribution),\n\t\t\tinstantiationService.createInstance(PackageJSONContribution.PackageJSONContribution),\n\t\t\tinstantiationService.createInstance(BowerJSONContribution.BowerJSONContribution),\n\t\t\tinstantiationService.createInstance(GlobPatternContribution.GlobPatternContribution)\n\t\t];\n\n\t\tthis.jsonIntellisense = new JSONIntellisense.JSONIntellisense(this.schemaService, this.requestService, this.contributions);\n\t}\n\n\tpublic navigateValueSet(resource:URI, range:EditorCommon.IRange, up:boolean):WinJS.TPromise<Modes.IInplaceReplaceSupportResult> {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\t\tvar offset = modelMirror.getOffsetFromPosition({ lineNumber: range.startLineNumber, column: range.startColumn });\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar config = new Parser.JSONDocumentConfig();\n\t\tconfig.ignoreDanglingComma = true;\n\t\tvar doc = parser.parse(modelMirror.getValue(), config);\n\t\tvar node = doc.getNodeFromOffsetEndInclusive(offset);\n\n\t\tif (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n\t\t\treturn this.schemaService.getSchemaForResource(resource.toString(), doc).then((schema) => {\n\t\t\t\tif (schema) {\n\t\t\t\t\tvar proposals : Modes.ISuggestion[] = [];\n\t\t\t\t\tvar proposed: any = {};\n\t\t\t\t\tvar collector = {\n\t\t\t\t\t\tadd: (suggestion: Modes.ISuggestion) => {\n\t\t\t\t\t\t\tif (!proposed[suggestion.label]) {\n\t\t\t\t\t\t\t\tproposed[suggestion.label] = true;\n\t\t\t\t\t\t\t\tproposals.push(suggestion);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tsetAsIncomplete: () => { /* ignore */ },\n\t\t\t\t\t\terror: (message: string) => {\n\t\t\t\t\t\t\terrors.onUnexpectedError(message);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.jsonIntellisense.getValueSuggestions(resource, schema, doc, node.parent, node.start, collector);\n\n\t\t\t\t\tvar range = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n\t\t\t\t\tvar text = modelMirror.getValueInRange(range);\n\t\t\t\t\tfor (var i = 0, len = proposals.length; i < len; i++) {\n\t\t\t\t\t\tif (Strings.equalsIgnoreCase(proposals[i].label, text)) {\n\t\t\t\t\t\t\tvar nextIdx = i;\n\t\t\t\t\t\t\tif (up) {\n\t\t\t\t\t\t\t\tnextIdx = (i + 1) % len;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tnextIdx =  i - 1;\n\t\t\t\t\t\t\t\tif (nextIdx < 0) {\n\t\t\t\t\t\t\t\t\tnextIdx = len - 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tvalue: proposals[nextIdx].label,\n\t\t\t\t\t\t\t\trange: range\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\treturn null;\n\t}\n\n\t/**\n\t * @return true if you want to revalidate your models\n\t */\n\t_doConfigure(options:IOptions): WinJS.TPromise<void> {\n\t\tif (options && options.schemas) {\n\t\t\tthis.schemaService.clearExternalSchemas();\n\t\t\toptions.schemas.forEach((schema) => {\n\t\t\t\tif (schema.url && (schema.fileMatch || schema.schema)) {\n\t\t\t\t\tvar url = schema.url;\n\t\t\t\t\tif (!Strings.startsWith(url, 'http://') && !Strings.startsWith(url, 'https://') && !Strings.startsWith(url, 'file://')) {\n\t\t\t\t\t\tvar resourceURL = this.contextService.toResource(url);\n\t\t\t\t\t\tif (resourceURL) {\n\t\t\t\t\t\t\turl = resourceURL.toString();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (url) {\n\t\t\t\t\t\tthis.schemaService.registerExternalSchema(url, schema.fileMatch, schema.schema);\n\t\t\t\t\t}\n\t\t\t\t} else if (schema.filePattern && schema.schemaPath) {\n\t\t\t\t\tvar url = this.contextService.toResource(schema.schemaPath).toString();\n\t\t\t\t\tvar patterns = schema.filePattern ? [ schema.filePattern ] : [];\n\t\t\t\t\tthis.schemaService.registerExternalSchema(url, patterns);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\tthis._validationHelper.triggerDueToConfigurationChange();\n\n\t\treturn WinJS.TPromise.as(void 0);\n\t}\n\n\tpublic setSchemaContributions(contributions:ISchemaContributions): WinJS.TPromise<boolean> {\n\t\tthis.schemaService.setSchemaContributions(contributions);\n\t\treturn WinJS.TPromise.as(true);\n\t}\n\n\tpublic enableValidator(): WinJS.TPromise<void> {\n\t\tthis._validationHelper.enable();\n\t\treturn WinJS.TPromise.as(null);\n\t}\n\n\tpublic doValidate(resources: URI[]):void {\n\t\tfor (var i = 0; i < resources.length; i++) {\n\t\t\tthis.doValidate1(resources[i]);\n\t\t}\n\t}\n\n\tprivate doValidate1(resource: URI):void {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar content = modelMirror.getValue();\n\n\t\tif (content.length === 0) {\n\t\t\t// ignore empty content, no marker can be set anyway\n\t\t\treturn;\n\t\t}\n\t\tvar result = parser.parse(content);\n\t\tthis.schemaService.getSchemaForResource(resource.toString(), result).then((schema) => {\n\t\t\tif (schema) {\n\t\t\t\tif (schema.errors.length && result.root) {\n\t\t\t\t\tvar property = result.root.type === 'object' ? (<Parser.ObjectASTNode> result.root).getFirstProperty('$schema') : null;\n\t\t\t\t\tif (property) {\n\t\t\t\t\t\tvar node = property.value || property;\n\t\t\t\t\t\tresult.warnings.push({ location: { start: node.start, end: node.end }, message: schema.errors[0] });\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.warnings.push({ location: { start: result.root.start, end: result.root.start + 1 }, message: schema.errors[0] });\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tresult.validate(schema.schema);\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar added : { [signature:string]: boolean} = {};\n\t\t\tvar markerData: IMarkerData[] = [];\n\n\t\t\tresult.errors.concat(result.warnings).forEach((error, idx) => {\n\t\t\t\t// remove duplicated messages\n\t\t\t\tvar signature = error.location.start + ' ' + error.location.end + ' ' + error.message;\n\t\t\t\tif (!added[signature]) {\n\t\t\t\t\tadded[signature] = true;\n\t\t\t\t\tvar startPosition = modelMirror.getPositionFromOffset(error.location.start);\n\t\t\t\t\tvar endPosition = modelMirror.getPositionFromOffset(error.location.end);\n\t\t\t\t\tmarkerData.push({\n\t\t\t\t\t\tmessage: error.message,\n\t\t\t\t\t\tseverity: idx >= result.errors.length ? Severity.Warning : Severity.Error,\n\t\t\t\t\t\tstartLineNumber: startPosition.lineNumber,\n\t\t\t\t\t\tstartColumn: startPosition.column,\n\t\t\t\t\t\tendLineNumber: endPosition.lineNumber,\n\t\t\t\t\t\tendColumn: endPosition.column\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tthis.markerService.changeOne(this._modeId, resource, markerData);\n\t\t});\n\n\t}\n\n\tpublic provideCompletionItems(resource:URI, position:EditorCommon.IPosition):WinJS.TPromise<Modes.ISuggestResult[]> {\n\t\treturn this.doSuggest(resource, position).then(value => filterSuggestions(value));\n\t}\n\n\tprivate doSuggest(resource:URI, position:EditorCommon.IPosition):WinJS.TPromise<Modes.ISuggestResult> {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\n\t\treturn this.jsonIntellisense.doSuggest(resource, modelMirror, position);\n\t}\n\n\tpublic provideHover(resource:URI, position:EditorCommon.IPosition): WinJS.TPromise<Modes.Hover> {\n\n\t\tvar modelMirror = this.resourceService.get(resource);\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar doc = parser.parse(modelMirror.getValue());\n\n\t\tvar offset = modelMirror.getOffsetFromPosition(position);\n\t\tvar node = doc.getNodeFromOffset(offset);\n\t\tvar originalNode = node;\n\n\t\t// use the property description when hovering over an object key\n\t\tif (node && node.type === 'string') {\n\t\t\tvar stringNode = <Parser.StringASTNode>node;\n\t\t\tif (stringNode.isKey) {\n\t\t\t\tvar propertyNode = <Parser.PropertyASTNode>node.parent;\n\t\t\t\tnode = propertyNode.value;\n\n\t\t\t}\n\t\t}\n\n\t\tif (!node) {\n\t\t\treturn WinJS.TPromise.as(null);\n\t\t}\n\n\t\treturn this.schemaService.getSchemaForResource(resource.toString(), doc).then((schema) => {\n\t\t\tif (schema) {\n\t\t\t\tvar matchingSchemas : Parser.IApplicableSchema[] = [];\n\t\t\t\tdoc.validate(schema.schema, matchingSchemas, node.start);\n\n\t\t\t\tvar description: string = null;\n\t\t\t\tvar contributonId: string = null;\n\t\t\t\tmatchingSchemas.every((s) => {\n\t\t\t\t\tif (s.node === node && !s.inverted && s.schema) {\n\t\t\t\t\t\tdescription = description || s.schema.description;\n\t\t\t\t\t\tcontributonId = contributonId || s.schema.id;\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t});\n\n\t\t\t\tvar location = node.getNodeLocation();\n\t\t\t\tfor (var i= this.contributions.length -1; i >= 0; i--) {\n\t\t\t\t\tvar contribution = this.contributions[i];\n\t\t\t\t\tvar promise = contribution.getInfoContribution(resource, location);\n\t\t\t\t\tif (promise) {\n\t\t\t\t\t\treturn promise.then((htmlContent) => { return this.createInfoResult(htmlContent, originalNode, modelMirror); } );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (description) {\n\t\t\t\t\tvar htmlContent = [ {className: 'documentation', text: description } ];\n\t\t\t\t\treturn this.createInfoResult(htmlContent, originalNode, modelMirror);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t});\n\t}\n\n\tprivate createInfoResult(htmlContent : HtmlContent.IHTMLContentElement[], node: Parser.ASTNode, modelMirror: EditorCommon.IMirrorModel) : Modes.Hover {\n\t\tvar range = modelMirror.getRangeFromOffsetAndLength(node.start, node.end - node.start);\n\n\t\tvar result:Modes.Hover = {\n\t\t\thtmlContent: htmlContent,\n\t\t\trange: range\n\t\t};\n\t\treturn result;\n\t}\n\n\n\tpublic provideDocumentSymbols(resource:URI):WinJS.TPromise<Modes.SymbolInformation[]> {\n\t\tvar modelMirror = this.resourceService.get(resource);\n\n\t\tvar parser = new Parser.JSONParser();\n\t\tvar doc = parser.parse(modelMirror.getValue());\n\t\tvar root = doc.root;\n\t\tif (!root) {\n\t\t\treturn WinJS.TPromise.as(null);\n\t\t}\n\n\t\t// special handling for key bindings\n\t\tvar resourceString = resource.toString();\n\t\tif ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n\t\t\tif (root.type === 'array') {\n\t\t\t\tvar result : Modes.SymbolInformation[] = [];\n\t\t\t\t(<Parser.ArrayASTNode> root).items.forEach((item) => {\n\t\t\t\t\tif (item.type === 'object') {\n\t\t\t\t\t\tvar property = (<Parser.ObjectASTNode> item).getFirstProperty('key');\n\t\t\t\t\t\tif (property && property.value) {\n\t\t\t\t\t\t\tvar range = modelMirror.getRangeFromOffsetAndLength(item.start, item.end - item.start);\n\t\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\t\tname: property.value.getValue(),\n\t\t\t\t\t\t\t\tkind: Modes.SymbolKind.String,\n\t\t\t\t\t\t\t\tlocation: {\n\t\t\t\t\t\t\t\t\turi: resource,\n\t\t\t\t\t\t\t\t\trange: range\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn WinJS.TPromise.as(result);\n\t\t\t}\n\t\t}\n\n\t\tfunction collectOutlineEntries(result: Modes.SymbolInformation[], node: Parser.ASTNode, containerName: string): Modes.SymbolInformation[] {\n\t\t\tif (node.type === 'array') {\n\t\t\t\t(<Parser.ArrayASTNode>node).items.forEach((node:Parser.ASTNode) => {\n\t\t\t\t\tcollectOutlineEntries(result, node, containerName);\n\t\t\t\t});\n\t\t\t} else if (node.type === 'object') {\n\t\t\t\tvar objectNode = <Parser.ObjectASTNode>node;\n\n\t\t\t\tobjectNode.properties.forEach((property:Parser.PropertyASTNode) => {\n\t\t\t\t\tvar range = modelMirror.getRangeFromOffsetAndLength(property.start, property.end - property.start);\n\t\t\t\t\tvar valueNode = property.value;\n\t\t\t\t\tif (valueNode) {\n\t\t\t\t\t\tlet childContainerName = containerName ? containerName + '.' + property.key.name : property.key.name;\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\tname: property.key.getValue(),\n\t\t\t\t\t\t\tkind: getSymbolKind(valueNode.type),\n\t\t\t\t\t\t\tlocation: {\n\t\t\t\t\t\t\t\turi: resource,\n\t\t\t\t\t\t\t\trange: range,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcontainerName: containerName\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcollectOutlineEntries(result, valueNode, childContainerName);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tvar result = collectOutlineEntries([], root, void 0);\n\t\treturn WinJS.TPromise.as(result);\n\t}\n\n\tpublic format(resource: URI, range: EditorCommon.IRange, options: Modes.FormattingOptions): WinJS.TPromise<EditorCommon.ISingleEditOperation[]> {\n\t\tlet model = this.resourceService.get(resource);\n\t\tlet formatRange = range ? model.getOffsetAndLengthFromRange(range) : void 0;\n\t\tlet edits = JSONFormatter.format(model.getValue(), formatRange, { insertSpaces: options.insertSpaces, tabSize: options.tabSize, eol: model.getEOL() });\n\t\tlet operations = edits.map(e => ({ range: model.getRangeFromOffsetAndLength(e.offset, e.length), text: e.content }));\n\t\treturn WinJS.TPromise.as(operations);\n\t}\n}\n\nfunction getSymbolKind(nodeType: string): Modes.SymbolKind {\n\tswitch (nodeType) {\n\t\tcase 'object':\n\t\t\treturn Modes.SymbolKind.Module;\n\t\tcase 'string':\n\t\t\treturn Modes.SymbolKind.String;\n\t\tcase 'number':\n\t\t\treturn Modes.SymbolKind.Number;\n\t\tcase 'array':\n\t\t\treturn Modes.SymbolKind.Array;\n\t\tcase 'boolean':\n\t\t\treturn Modes.SymbolKind.Boolean;\n\t\tdefault: // 'null'\n\t\t\treturn Modes.SymbolKind.Variable;\n\t}\n}\n"]}